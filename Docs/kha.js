// Generated by Haxe 4.0.5+f5259a9eb
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var GlobalGameData = function() { };
$hxClasses["GlobalGameData"] = GlobalGameData;
GlobalGameData.__name__ = "GlobalGameData";
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	kha_System.start(new kha_SystemOptions("Venari Strigas",1280,720,new kha_WindowOptions("Venari Strigas",0,0,1280,720,null,true,1,0),new kha_FramebufferOptions(60,true,32,16,8,0)),function(w) {
		new com_framework_Simulation(states_Intro,1280,720,1,0);
	});
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s1 = _g_s;
		var index = _g_offset++;
		var c = s1.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s1.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = "_UInt.UInt_Impl_";
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	if(this1 < 0) {
		return 4294967296.0 + this1;
	} else {
		return this1 + 0.0;
	}
};
var _$Xml_XmlType_$Impl_$ = {};
$hxClasses["_Xml.XmlType_Impl_"] = _$Xml_XmlType_$Impl_$;
_$Xml_XmlType_$Impl_$.__name__ = "_Xml.XmlType_Impl_";
_$Xml_XmlType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(child.nodeType));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		return HxOverrides.iter(_g);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var com_framework_utils_Entity = function() {
	this.toDelete = [];
	this.childrenInLimbo = 0;
	this.limbo = false;
	this.dead = false;
	this.children = [];
	this.parent = null;
};
$hxClasses["com.framework.utils.Entity"] = com_framework_utils_Entity;
com_framework_utils_Entity.__name__ = "com.framework.utils.Entity";
com_framework_utils_Entity.prototype = {
	update: function(dt) {
		var counter = 0;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.limbo) {
				++counter;
				continue;
			}
			child.update(dt);
			if(child.isDead()) {
				if(this.pool) {
					child.limbo = true;
					child.limboStart();
					++this.childrenInLimbo;
				} else {
					child.destroy();
					this.toDelete.push(counter);
				}
			}
			++counter;
		}
		var offset = 0;
		var _g2 = 0;
		var _g3 = this.toDelete;
		while(_g2 < _g3.length) {
			this.children.splice(_g3[_g2++] - offset,1);
			++offset;
		}
		this.toDelete.splice(0,this.toDelete.length);
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(!child.limbo) {
				child.render();
			}
		}
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) _g1[_g++].destroy();
		this.parent = null;
	}
	,limboStart: function() {
		throw new js__$Boot_HaxeError("override this function recycle object");
	}
	,recycle: function(type,arg) {
		if(this.childrenInLimbo > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(!child.limbo) {
					continue;
				}
				child.limbo = false;
				child.dead = false;
				--this.childrenInLimbo;
				return child;
			}
		}
		var obj = Type.createInstance(type,arg == null ? [] : arg);
		this.addChild(obj);
		return obj;
	}
	,die: function() {
		this.dead = true;
	}
	,isDead: function() {
		return this.dead;
	}
	,addChild: function(entity) {
		this.children.push(entity);
		entity.parent = this;
	}
	,__class__: com_framework_utils_Entity
};
var cinematic_Dialog = function(text,x,y,width,height,did) {
	this.currentLetter = 0;
	this.playerInside = false;
	this.showingText = false;
	com_framework_utils_Entity.call(this);
	this.text = text;
	this.collider = new com_collision_platformer_CollisionBox();
	this.collider.x = x;
	this.collider.y = y;
	this.collider.userData = this;
	this.collider.width = width;
	this.collider.height = height;
	this.displayText = new com_gEngine_display_Text("Kenney_Pixel");
	this.displayText.set_text(text);
	this.displayText.x = x;
	this.displayText.y = y;
	this.sequence = new com_sequencer_SequenceCode();
	this.id = did;
};
$hxClasses["cinematic.Dialog"] = cinematic_Dialog;
cinematic_Dialog.__name__ = "cinematic.Dialog";
cinematic_Dialog.__super__ = com_framework_utils_Entity;
cinematic_Dialog.prototype = $extend(com_framework_utils_Entity.prototype,{
	update: function(dt) {
		com_framework_utils_Entity.prototype.update.call(this,dt);
		this.sequence.update(dt);
		if(this.showingText && !this.playerInside) {
			this.displayText.removeFromParent();
			this.showingText = false;
			this.sequence.flush();
		}
		this.playerInside = false;
	}
	,showText: function(layer) {
		this.playerInside = true;
		if(!this.showingText) {
			this.currentLetter = 0;
			this.showingText = true;
			layer.addChild(this.displayText);
			var _g = 0;
			var _g1 = this.displayText.mLetters.length;
			while(_g < _g1) {
				this.displayText.getLetter(_g++).visible = false;
				this.sequence.addFunction($bind(this,this.showLetter));
				this.sequence.addWait(0.05);
			}
		}
	}
	,showLetter: function(dt) {
		this.displayText.getLetter(this.currentLetter).visible = true;
		++this.currentLetter;
		return true;
	}
	,__class__: cinematic_Dialog
});
var cinematic_Doom = function(x,y,width,height) {
	this.currentLetter = 0;
	this.playerInside = false;
	this.showingText = false;
	com_framework_utils_Entity.call(this);
	this.text = "\n        You plummet \n        into the void \n        below";
	this.collider = new com_collision_platformer_CollisionBox();
	this.collider.x = x;
	this.collider.y = y;
	this.collider.userData = this;
	this.collider.width = width;
	this.collider.height = height;
	this.displayText = new com_gEngine_display_Text("Kenney_Pixel");
	this.displayText.set_text(this.text);
	this.displayText.x = x;
	this.displayText.y = y;
	this.sequence = new com_sequencer_SequenceCode();
};
$hxClasses["cinematic.Doom"] = cinematic_Doom;
cinematic_Doom.__name__ = "cinematic.Doom";
cinematic_Doom.__super__ = com_framework_utils_Entity;
cinematic_Doom.prototype = $extend(com_framework_utils_Entity.prototype,{
	update: function(dt) {
		com_framework_utils_Entity.prototype.update.call(this,dt);
		this.sequence.update(dt);
		this.playerInside = false;
	}
	,showText: function(layer) {
		this.playerInside = true;
		if(!this.showingText) {
			this.currentLetter = 0;
			this.showingText = true;
			layer.addChild(this.displayText);
			var _g = 0;
			var _g1 = this.displayText.mLetters.length;
			while(_g < _g1) {
				this.displayText.getLetter(_g++).visible = false;
				this.sequence.addFunction($bind(this,this.showLetter));
				this.sequence.addWait(0.05);
			}
		}
	}
	,showLetter: function(dt) {
		this.displayText.getLetter(this.currentLetter).visible = true;
		++this.currentLetter;
		return true;
	}
	,__class__: cinematic_Doom
});
var com_TimeManager = function() { };
$hxClasses["com.TimeManager"] = com_TimeManager;
com_TimeManager.__name__ = "com.TimeManager";
com_TimeManager.setDelta = function(delta,realTime) {
	com_TimeManager.time = realTime;
	com_TimeManager.realDelta = delta;
	if(delta > 0.05) {
		delta = 0.05;
	}
	com_TimeManager.delta = delta;
};
var com_loading_ResourceHandler = function() { };
$hxClasses["com.loading.ResourceHandler"] = com_loading_ResourceHandler;
com_loading_ResourceHandler.__name__ = "com.loading.ResourceHandler";
com_loading_ResourceHandler.__isInterface__ = true;
com_loading_ResourceHandler.prototype = {
	__class__: com_loading_ResourceHandler
};
var com_basicDisplay_SpriteSheetDB = function() {
	this.animations = [];
	com_framework_Simulation.i.addResourceHandler(this);
};
$hxClasses["com.basicDisplay.SpriteSheetDB"] = com_basicDisplay_SpriteSheetDB;
com_basicDisplay_SpriteSheetDB.__name__ = "com.basicDisplay.SpriteSheetDB";
com_basicDisplay_SpriteSheetDB.__interfaces__ = [com_loading_ResourceHandler];
com_basicDisplay_SpriteSheetDB.get_i = function() {
	if(com_basicDisplay_SpriteSheetDB.i == null) {
		com_basicDisplay_SpriteSheetDB.i = new com_basicDisplay_SpriteSheetDB();
	}
	return com_basicDisplay_SpriteSheetDB.i;
};
com_basicDisplay_SpriteSheetDB.prototype = {
	add: function(data) {
		this.animations.push(data);
	}
	,getData: function(name) {
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var animation = _g1[_g];
			++_g;
			if(animation.name == name) {
				return animation;
			}
		}
		throw new js__$Boot_HaxeError("spriteSheet with name " + name + " not found. Make sure it's loaded");
	}
	,clear: function() {
		this.animations.splice(0,this.animations.length);
	}
	,__class__: com_basicDisplay_SpriteSheetDB
};
var com_collision_platformer_Body = function() {
	this.touching = 0;
	this.maxVelocityY = Infinity;
	this.maxVelocityX = Infinity;
	this.staticObject = false;
	this.dragY = 1;
	this.dragX = 1;
	this.accelerationY = 0;
	this.accelerationX = 0;
	this.bounce = 0;
	this.lastVelocityY = 0;
	this.lastVelocityX = 0;
	this.velocityY = 0;
	this.velocityX = 0;
	this.y = 0;
	this.x = 0;
	this.lastY = 0;
	this.lastX = 0;
};
$hxClasses["com.collision.platformer.Body"] = com_collision_platformer_Body;
com_collision_platformer_Body.__name__ = "com.collision.platformer.Body";
com_collision_platformer_Body.prototype = {
	update: function(dt) {
		this.touching = 0;
		this.lastX = this.x;
		this.lastY = this.y;
		this.lastVelocityX = this.velocityX;
		this.lastVelocityY = this.velocityY;
		this.velocityX += this.accelerationX * dt;
		this.velocityY += this.accelerationY * dt;
		if(Math.abs(this.velocityX) > this.maxVelocityX) {
			if(this.velocityX > 0) {
				this.velocityX = this.maxVelocityX;
			} else {
				this.velocityX = -this.maxVelocityX;
			}
		}
		if(Math.abs(this.velocityY) > this.maxVelocityY) {
			if(this.velocityY > 0) {
				this.velocityY = this.maxVelocityY;
			} else {
				this.velocityY = -this.maxVelocityY;
			}
		}
		this.x += this.velocityX * dt;
		this.y += this.velocityY * dt;
		if(this.accelerationX == 0) {
			this.velocityX *= this.dragX;
			if(Math.abs(this.velocityX) < 70) {
				this.velocityX = 0;
			}
		}
		if(this.accelerationY == 0) {
			this.velocityY *= this.dragY;
			if(Math.abs(this.velocityY) < 70) {
				this.velocityY = 0;
			}
		}
	}
	,__class__: com_collision_platformer_Body
};
var com_collision_platformer_ICollider = function() { };
$hxClasses["com.collision.platformer.ICollider"] = com_collision_platformer_ICollider;
com_collision_platformer_ICollider.__name__ = "com.collision.platformer.ICollider";
com_collision_platformer_ICollider.__isInterface__ = true;
com_collision_platformer_ICollider.prototype = {
	__class__: com_collision_platformer_ICollider
};
var com_collision_platformer_CollisionBox = function() {
	this.collisionAllow = 15;
	this.height = 10;
	this.width = 10;
	com_collision_platformer_Body.call(this);
};
$hxClasses["com.collision.platformer.CollisionBox"] = com_collision_platformer_CollisionBox;
com_collision_platformer_CollisionBox.__name__ = "com.collision.platformer.CollisionBox";
com_collision_platformer_CollisionBox.__interfaces__ = [com_collision_platformer_ICollider];
com_collision_platformer_CollisionBox.__super__ = com_collision_platformer_Body;
com_collision_platformer_CollisionBox.prototype = $extend(com_collision_platformer_Body.prototype,{
	removeFromParent: function() {
		if(this.parent != null) {
			this.parent.remove(this);
		}
	}
	,collisionType: function() {
		return com_collision_platformer_CollisionType.Box;
	}
	,isTouching: function(side) {
		return (side & this.touching) > 0;
	}
	,collide: function(collider,notifyCallback) {
		if(collider == this) {
			return false;
		}
		if(collider.collisionType() == com_collision_platformer_CollisionType.Box) {
			var boxCollider = collider;
			var myPonderation = 0.5;
			var colliderPonderation = 0.5;
			if(this.staticObject) {
				myPonderation = 0;
				colliderPonderation = 1;
			} else if(boxCollider.staticObject) {
				myPonderation = 1;
				colliderPonderation = 0;
			}
			if(this.overlapVsBox(boxCollider)) {
				var overlapX = this.width * 0.5 + boxCollider.width * 0.5 - Math.abs(this.x + this.width * 0.5 - (boxCollider.x + boxCollider.width * 0.5));
				var overlapY = this.height * 0.5 + boxCollider.height * 0.5 - Math.abs(this.y + this.height * 0.5 - (boxCollider.y + boxCollider.height * 0.5));
				var overlapXSmaller = overlapX < overlapY;
				var myCollisionNeededX = 1;
				var colliderNeededX = 2;
				var myCollisionNeededY = 4;
				var colliderNeededY = 8;
				if(this.x + this.width * 0.5 < boxCollider.x + boxCollider.width * 0.5) {
					myCollisionNeededX = 2;
					colliderNeededX = 1;
					overlapX *= -1;
				}
				if(this.y + this.height * 0.5 < boxCollider.y + boxCollider.height * 0.5) {
					myCollisionNeededY = 8;
					colliderNeededY = 4;
					overlapY *= -1;
				}
				if(overlapXSmaller && (this.collisionAllow & myCollisionNeededX) > 0 && (boxCollider.collisionAllow & colliderNeededX) > 0) {
					this.x += overlapX * myPonderation;
					boxCollider.x -= overlapX * colliderPonderation;
					if(this.velocityX * overlapX >= 0) {
						this.velocityX *= -this.bounce;
					}
					if(boxCollider.velocityX * overlapX >= 0) {
						boxCollider.velocityX *= -boxCollider.bounce;
					}
					this.touching |= myCollisionNeededX;
					boxCollider.touching |= colliderNeededX;
					if(notifyCallback != null) {
						notifyCallback(this,collider);
					}
					return true;
				} else if((this.collisionAllow & myCollisionNeededY) > 0 && (boxCollider.collisionAllow & colliderNeededY) > 0) {
					this.y += overlapY * myPonderation;
					boxCollider.y -= overlapY * colliderPonderation;
					if(this.velocityY * overlapY >= 0) {
						this.velocityY *= -this.bounce;
					}
					if(boxCollider.velocityY * overlapY >= 0) {
						boxCollider.velocityY *= -boxCollider.bounce;
					}
					this.touching |= myCollisionNeededY;
					boxCollider.touching |= colliderNeededY;
					if(notifyCallback != null) {
						notifyCallback(this,collider);
					}
					return true;
				}
			}
			return false;
		} else if(collider.collisionType() == com_collision_platformer_CollisionType.TileMap) {
			return collider.collide(this,notifyCallback);
		} else if(collider.collisionType() == com_collision_platformer_CollisionType.Group) {
			return collider.collide(this,notifyCallback);
		}
		return false;
	}
	,overlap: function(collider,NotifyCallback) {
		if(collider.collisionType() == com_collision_platformer_CollisionType.Box) {
			var box = collider;
			if(box.x < this.x + this.width && box.x + box.width > this.x && box.y < this.y + this.height && box.y + box.height > this.y) {
				if(NotifyCallback != null) {
					NotifyCallback(this,collider);
				}
				return true;
			}
		} else if(collider.collisionType() == com_collision_platformer_CollisionType.TileMap) {
			return collider.overlap(this,NotifyCallback);
		} else if(collider.collisionType() == com_collision_platformer_CollisionType.Group) {
			collider.overlap(this,NotifyCallback);
		}
		return false;
	}
	,overlapVsBox: function(box) {
		if(box.x < this.x + this.width && box.x + box.width > this.x && box.y < this.y + this.height) {
			return box.y + box.height > this.y;
		} else {
			return false;
		}
	}
	,__class__: com_collision_platformer_CollisionBox
});
var com_collision_platformer_CollisionEngine = function() { };
$hxClasses["com.collision.platformer.CollisionEngine"] = com_collision_platformer_CollisionEngine;
com_collision_platformer_CollisionEngine.__name__ = "com.collision.platformer.CollisionEngine";
com_collision_platformer_CollisionEngine.collide = function(A,B,aCallBack) {
	com_collision_platformer_CollisionEngine.colliders.push(A);
	com_collision_platformer_CollisionEngine.colliders.push(B);
	return A.collide(B,aCallBack);
};
com_collision_platformer_CollisionEngine.overlap = function(A,B,aCallBack) {
	com_collision_platformer_CollisionEngine.colliders.push(A);
	com_collision_platformer_CollisionEngine.colliders.push(B);
	return A.overlap(B,aCallBack);
};
var com_collision_platformer_CollisionGroup = function() {
	this.colliders = [];
};
$hxClasses["com.collision.platformer.CollisionGroup"] = com_collision_platformer_CollisionGroup;
com_collision_platformer_CollisionGroup.__name__ = "com.collision.platformer.CollisionGroup";
com_collision_platformer_CollisionGroup.__interfaces__ = [com_collision_platformer_ICollider];
com_collision_platformer_CollisionGroup.prototype = {
	add: function(aCollider) {
		if(aCollider.parent == this) {
			return;
		}
		this.colliders.push(aCollider);
		aCollider.parent = this;
	}
	,remove: function(aCollider) {
		aCollider.parent = null;
		HxOverrides.remove(this.colliders,aCollider);
	}
	,collide: function(aCollider,NotifyCallback) {
		var toReturn = false;
		if(aCollider.collisionType() == com_collision_platformer_CollisionType.Group) {
			var group = aCollider;
			var _g = 0;
			var _g1 = this.colliders;
			while(_g < _g1.length) {
				var col1 = _g1[_g++];
				var _g2 = 0;
				var _g11 = group.colliders;
				while(_g2 < _g11.length) toReturn = col1.collide(_g11[_g2++],NotifyCallback) || toReturn;
			}
		} else {
			var _g3 = 0;
			var _g12 = this.colliders;
			while(_g3 < _g12.length) toReturn = _g12[_g3++].collide(aCollider,NotifyCallback) || toReturn;
		}
		return toReturn;
	}
	,overlap: function(aCollider,NotifyCallback) {
		var toReturn = false;
		if(aCollider.collisionType() == com_collision_platformer_CollisionType.Group) {
			var group = aCollider;
			var _g = 0;
			var _g1 = this.colliders;
			while(_g < _g1.length) {
				var col1 = _g1[_g++];
				var _g2 = 0;
				var _g11 = group.colliders;
				while(_g2 < _g11.length) toReturn = col1.overlap(_g11[_g2++],NotifyCallback) || toReturn;
			}
		} else {
			var _g3 = 0;
			var _g12 = this.colliders;
			while(_g3 < _g12.length) toReturn = _g12[_g3++].overlap(aCollider,NotifyCallback) || toReturn;
		}
		return toReturn;
	}
	,collisionType: function() {
		return com_collision_platformer_CollisionType.Group;
	}
	,__class__: com_collision_platformer_CollisionGroup
};
var com_collision_platformer_CollisionTileMap = function(aTiles,aTileWidth,aTileHeight,aWidthInTiles,aHeightInTiles) {
	this.startingCollisionIndex = 1;
	this.tiles = aTiles;
	this.tileWidth = aTileWidth;
	this.tileHeight = aTileHeight;
	this.widthIntTiles = aWidthInTiles;
	this.heightInTiles = aHeightInTiles;
	this.helperTile = new com_collision_platformer_CollisionBox();
	this.helperTile.width = aTileWidth;
	this.helperTile.height = aTileHeight;
	this.helperTile.staticObject = true;
	this.edges = [];
	var _g = 0;
	var _g1 = this.tiles.length;
	while(_g < _g1) {
		++_g;
		this.edges.push(0);
	}
	this.calculateEdges(0,0,aWidthInTiles,aHeightInTiles);
};
$hxClasses["com.collision.platformer.CollisionTileMap"] = com_collision_platformer_CollisionTileMap;
com_collision_platformer_CollisionTileMap.__name__ = "com.collision.platformer.CollisionTileMap";
com_collision_platformer_CollisionTileMap.__interfaces__ = [com_collision_platformer_ICollider];
com_collision_platformer_CollisionTileMap.prototype = {
	calculateEdges: function(minX,minY,maxX,maxY) {
		var _g = minY;
		var _g1 = maxY + 1;
		while(_g < _g1) {
			var tileY = _g++;
			var _g2 = minX;
			var _g11 = maxX + 1;
			while(_g2 < _g11) {
				var tileX = _g2++;
				var edge = 0;
				if(this.getTileId(tileX,tileY - 1) < this.startingCollisionIndex) {
					edge = 4;
				}
				if(this.getTileId(tileX - 1,tileY) < this.startingCollisionIndex) {
					edge |= 1;
				}
				if(this.getTileId(tileX + 1,tileY) < this.startingCollisionIndex) {
					edge |= 2;
				}
				if(this.getTileId(tileX,tileY + 1) < this.startingCollisionIndex) {
					edge |= 8;
				}
				this.edges[tileX + tileY * this.widthIntTiles] = edge;
			}
		}
	}
	,collide: function(aCollider,NotifyCallback) {
		if(aCollider.collisionType() == com_collision_platformer_CollisionType.Box) {
			var box = aCollider;
			var minX = box.x / this.tileWidth | 0;
			var maxX = ((box.x + box.width) / this.tileWidth | 0) + 1;
			var maxY = ((box.y + box.height) / this.tileHeight | 0) + 1;
			var toReturn = false;
			var _g = box.y / this.tileHeight | 0;
			while(_g < maxY) {
				var tileY = _g++;
				var _g1 = minX;
				while(_g1 < maxX) {
					var tileX = _g1++;
					if(this.getTileId(tileX,tileY) >= this.startingCollisionIndex) {
						this.helperTile.collisionAllow = this.edges[tileX + tileY * this.widthIntTiles];
						this.helperTile.x = tileX * this.tileWidth;
						this.helperTile.y = tileY * this.tileHeight;
						toReturn = this.helperTile.collide(box,NotifyCallback) || toReturn;
					}
				}
			}
			return toReturn;
		} else if(aCollider.collisionType() == com_collision_platformer_CollisionType.Group) {
			return aCollider.collide(this,NotifyCallback);
		}
		return false;
	}
	,getTileId: function(aX,aY) {
		if(aX >= 0 && aY >= 0 && aX < this.widthIntTiles && aY < this.heightInTiles) {
			return this.tiles[aX + aY * this.widthIntTiles];
		}
		return 0;
	}
	,overlap: function(aCollider,NotifyCallback) {
		var toReturn = false;
		if(aCollider.collisionType() == com_collision_platformer_CollisionType.Box) {
			var box = aCollider;
			var minX = box.x / this.tileWidth | 0;
			var maxX = ((box.x + box.width) / this.tileWidth | 0) + 1;
			var maxY = ((box.y + box.height) / this.tileHeight | 0) + 1;
			var _g = box.y / this.tileHeight | 0;
			while(_g < maxY) {
				var tileY = _g++;
				var _g1 = minX;
				while(_g1 < maxX) {
					var tileX = _g1++;
					if(this.getTileId(tileX,tileY) >= this.startingCollisionIndex) {
						this.helperTile.collisionAllow = this.edges[tileX + tileY * this.widthIntTiles];
						this.helperTile.x = tileX * this.tileWidth;
						this.helperTile.y = tileY * this.tileHeight;
						toReturn = this.helperTile.overlap(box,NotifyCallback) || toReturn;
					}
				}
			}
		}
		return toReturn;
	}
	,collisionType: function() {
		return com_collision_platformer_CollisionType.TileMap;
	}
	,__class__: com_collision_platformer_CollisionTileMap
};
var com_collision_platformer_CollisionType = $hxEnums["com.collision.platformer.CollisionType"] = { __ename__ : true, __constructs__ : ["Box","TileMap","Group","Circle"]
	,Box: {_hx_index:0,__enum__:"com.collision.platformer.CollisionType",toString:$estr}
	,TileMap: {_hx_index:1,__enum__:"com.collision.platformer.CollisionType",toString:$estr}
	,Group: {_hx_index:2,__enum__:"com.collision.platformer.CollisionType",toString:$estr}
	,Circle: {_hx_index:3,__enum__:"com.collision.platformer.CollisionType",toString:$estr}
};
var com_collision_platformer_Tilemap = function(tmxData,scale) {
	if(scale == null) {
		scale = 1;
	}
	this.heightInTiles = 0;
	this.widthIntTiles = 0;
	this.tmxData = tmxData;
	this.scale = scale;
	this.collision = new com_collision_platformer_CollisionGroup();
	this.display = new com_gEngine_display_Layer();
};
$hxClasses["com.collision.platformer.Tilemap"] = com_collision_platformer_Tilemap;
com_collision_platformer_Tilemap.__name__ = "com.collision.platformer.Tilemap";
com_collision_platformer_Tilemap.prototype = {
	createCollisions: function(tileMap) {
		var tiles = [];
		var _g = 0;
		var _g1 = tileMap.data.tiles;
		while(_g < _g1.length) tiles.push(_g1[_g++] & 536870911);
		var collision = new com_collision_platformer_CollisionTileMap(tiles,this.tileWidth * this.scale,this.tileHeight * this.scale,tileMap.width,tileMap.height);
		this.collision.add(collision);
		return collision;
	}
	,createDisplay: function(tileMap,display) {
		var tiles = tileMap.data.tiles;
		var tileMapDisplay = new com_gEngine_display_extra_TileMapDisplay(display,tileMap.width,tileMap.height,this.tileWidth,this.tileHeight);
		tileMapDisplay.scaleX = tileMapDisplay.scaleY = this.scale;
		var counter = 0;
		var _g = 0;
		while(_g < tiles.length) {
			var tile = tiles[_g];
			++_g;
			tileMapDisplay.setTile2(counter++,this.idToFrame(tile & 536870911 & 536870911),(tile & 536870911 & -2147483648) != 0,(tile & 536870911 & 1073741824) != 0,(tile & 536870911 & 536870912) != 0);
		}
		this.display.addChild(tileMapDisplay);
		return tileMapDisplay;
	}
	,idToFrame: function(id) {
		var length = this.tileIdStart.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(i == length - 1 || this.tileIdStart[i + 1] > id) {
				return id - this.tileIdStart[i];
			}
		}
		throw new js__$Boot_HaxeError("tile id can't be map to tilset");
	}
	,init: function(processTileMap,processObject) {
		this.tileIdStart = [];
		var t = new format_tmx_Reader().read(Xml.parse(kha_Assets.blobs.get(this.tmxData).toString()));
		this.tileWidth = t.tileWidth;
		this.tileHeight = t.tileHeight;
		this.widthIntTiles = t.width;
		this.heightInTiles = t.height;
		var collision = null;
		var _g = 0;
		var _g1 = t.tilesets;
		while(_g < _g1.length) this.tileIdStart.push(_g1[_g++].firstGID);
		var _g2 = 0;
		var _g3 = t.layers;
		while(_g2 < _g3.length) {
			var layer = _g3[_g2];
			++_g2;
			switch(layer._hx_index) {
			case 0:
				if(processTileMap != null) {
					processTileMap(this,layer.layer);
				}
				break;
			case 1:
				if(processObject != null) {
					var _g21 = 0;
					var _g31 = layer.group.objects;
					while(_g21 < _g31.length) processObject(this,_g31[_g21++]);
				}
				break;
			default:
			}
		}
		return collision;
	}
	,__class__: com_collision_platformer_Tilemap
};
var com_framework_Simulation = function(initialState,virtualWidth,virtualHeight,oversample,antiAlias) {
	if(antiAlias == null) {
		antiAlias = 0;
	}
	if(oversample == null) {
		oversample = 1;
	}
	this.mLastFrameTime = 0;
	this.mFrameByFrameTime = 0;
	this.iterationRest = 0;
	this.initialized = false;
	this.startingSeed = Math.random() * 3000;
	kha_math_Random.init(this.startingSeed | 0);
	this.initialState = initialState;
	this.resourcesHandlers = [];
	com_framework_Simulation.i = this;
	this.virtualHeight = virtualHeight;
	this.virtualWidth = virtualWidth;
	this.resources = new com_loading_Resources();
	com_framework_utils_Input.init();
	var tmp = kha_System.windowWidth();
	com_framework_utils_Input.i.screenScale.x = virtualWidth / tmp;
	var tmp1 = kha_System.windowHeight();
	com_framework_utils_Input.i.screenScale.y = virtualHeight / tmp1;
	com_gEngine_GEngine.init(virtualWidth,virtualHeight,oversample,antiAlias);
	com_gEngine_GEngine.get_i().createDefaultPainters();
	com_soundLib_SoundManager.init();
	this.init();
};
$hxClasses["com.framework.Simulation"] = com_framework_Simulation;
com_framework_Simulation.__name__ = "com.framework.Simulation";
com_framework_Simulation.prototype = {
	get_manualLoad: function() {
		return this.mManualLoad;
	}
	,init: function() {
		this.changeState(Type.createInstance(this.initialState,[]));
		kha_Scheduler.addTimeTask($bind(this,this.onEnterFrame),0,0.016666666666666666);
		kha_System.notifyOnFrames($bind(this,this.onRender));
	}
	,onEnterFrame: function() {
		var _this = com_framework_utils_Input.i.screenScale;
		var x = this.virtualWidth / kha_System.windowWidth(0);
		var y = this.virtualHeight / kha_System.windowHeight(0);
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		_this.x = x;
		_this.y = y;
		var time = kha_Scheduler.time();
		this.mFrameByFrameTime = time - this.mLastFrameTime;
		this.mLastFrameTime = time;
		if(!this.isPause) {
			com_TimeManager.setDelta(this.mFrameByFrameTime,kha_Scheduler.realTime());
			this.update(this.mFrameByFrameTime);
		}
		if(this.requestChangeState) {
			this.requestChangeState = false;
			this.loadState(this.nextState);
			this.nextState = null;
			return;
		}
	}
	,onRender: function(framebuffers) {
		var framebuffer = framebuffers[0];
		if(!this.initialized) {
			return;
		}
		this.currentState.render();
		com_gEngine_GEngine.get_i().draw(framebuffer);
		this.currentState.draw(framebuffer);
		if(this.isPause) {
			var g2 = framebuffer.get_g2();
			g2.begin(false);
			var transformation = new kha_math_FastMatrix3(0.75,0,0,0,0.75,0,0,0,1);
			g2.setTransformation(transformation);
			var _this = g2.transformations[g2.transformationIndex];
			_this._00 = transformation._00;
			_this._10 = transformation._10;
			_this._20 = transformation._20;
			_this._01 = transformation._01;
			_this._11 = transformation._11;
			_this._21 = transformation._21;
			_this._02 = transformation._02;
			_this._12 = transformation._12;
			_this._22 = transformation._22;
			g2.set_color(kha__$Color_Color_$Impl_$.fromFloats(0.5,0.5,0.5,0.5));
			g2.fillRect(0,0,1280,720);
			g2.set_color(kha__$Color_Color_$Impl_$.fromFloats(1,1,1,1));
			g2.fillTriangle(485,270,740,390,485,510);
			g2.end();
		}
	}
	,update: function(dt) {
		if(!this.initialized) {
			return;
		}
		var fullIterations = Math.floor(com_TimeManager.multiplier + this.iterationRest);
		var _g = 0;
		while(_g < fullIterations) {
			++_g;
			this.currentState.update(dt);
			com_gEngine_GEngine.get_i().update();
			com_framework_utils_Input.i.update();
		}
		this.iterationRest = com_TimeManager.multiplier + this.iterationRest - fullIterations;
	}
	,loadState: function(state) {
		this.initialized = false;
		if(this.currentState != null) {
			com_soundLib_SoundManager.reset();
			com_framework_utils_Input.i.clearInput();
			this.currentState.destroy();
			this.resources.unload();
			this.unloadResourceHandlers();
			com_gEngine_GEngine.get_i().unload();
		}
		this.currentState = state;
		this.currentState.load(this.resources);
		if(this.get_manualLoad()) {
			this.resources.loadLocal($bind(this,this.finishUpload));
		} else {
			this.resources.load($bind(this,this.finishUpload));
		}
	}
	,addResourceHandler: function(resourceHandler) {
		this.resourcesHandlers.push(resourceHandler);
	}
	,unloadResourceHandlers: function() {
		var _g = 0;
		var _g1 = this.resourcesHandlers;
		while(_g < _g1.length) _g1[_g++].clear();
	}
	,finishUpload: function() {
		this.initialized = true;
		this.currentState.stage = com_gEngine_GEngine.get_i().stage;
		this.currentState.init();
		com_gEngine_GEngine.get_i().update();
	}
	,changeState: function(state) {
		this.requestChangeState = true;
		this.nextState = state;
	}
	,__class__: com_framework_Simulation
};
var com_framework_utils_Input = function() {
	this.mouseDeltaY = 0;
	this.mouseDeltaX = 0;
	this.screenScale = new com_helpers_FastPoint(1,1);
	this.mouseIsDown = false;
	this.mousePressed = false;
	this.mouseReleased = false;
	this.keysDown = [];
	this.keysPressed = [];
	this.keysReleased = [];
	this.activeTouchSpots = 0;
	this.touchActive = [];
	this.touchPos = [];
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.touchPos.push(0);
	this.mousePosition = new com_helpers_FastPoint();
	this.joysticks = [];
};
$hxClasses["com.framework.utils.Input"] = com_framework_utils_Input;
com_framework_utils_Input.__name__ = "com.framework.utils.Input";
com_framework_utils_Input.init = function() {
	com_framework_utils_Input.i = new com_framework_utils_Input();
	com_framework_utils_Input.i.subscibeInput();
};
com_framework_utils_Input.prototype = {
	subscibeInput: function() {
		kha_input_Keyboard.get().notify($bind(this,this.onKeyDown),$bind(this,this.onKeyUp));
		kha_input_Mouse.get().notify($bind(this,this.onMouseDown),$bind(this,this.onMouseUp),$bind(this,this.onMouseMove),null);
		var surface = kha_input_Surface.get();
		if(surface != null) {
			surface.notify($bind(this,this.onTouchStart),$bind(this,this.onTouchEnd),$bind(this,this.onTouchMove));
		}
		this.joysticks.push(new com_framework_utils_JoystickProxy(0));
		this.joysticks.push(new com_framework_utils_JoystickProxy(1));
		this.joysticks.push(new com_framework_utils_JoystickProxy(2));
		this.joysticks.push(new com_framework_utils_JoystickProxy(3));
		kha_input_Gamepad.notifyOnConnect($bind(this,this.onConnect),$bind(this,this.onDisconnect));
	}
	,onConnect: function(aId) {
		haxe_Log.trace("gamepad " + aId,{ fileName : "com/framework/utils/Input.hx", lineNumber : 86, className : "com.framework.utils.Input", methodName : "onConnect"});
		this.joysticks[aId].onConnect();
	}
	,onDisconnect: function(gamePad) {
		this.joysticks[gamePad].onDisconnect();
	}
	,onTouchMove: function(id,x,y) {
		this.touchPos[id * 2] = x;
		this.touchPos[id * 2 + 1] = y;
		if(id == 0) {
			var _this = this.mousePosition;
			var x1 = x;
			var y1 = y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this.x = x1;
			_this.y = y1;
		}
	}
	,onTouchEnd: function(id,x,y) {
		HxOverrides.remove(this.touchActive,id);
		this.touchPos[id * 2] = x;
		this.touchPos[id * 2 + 1] = y;
		--this.activeTouchSpots;
		if(id == 0) {
			var _this = this.mousePosition;
			var x1 = x;
			var y1 = y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this.x = x1;
			_this.y = y1;
			this.mouseIsDown = false;
			this.mouseReleased = true;
		}
	}
	,onTouchStart: function(id,x,y) {
		++this.activeTouchSpots;
		this.touchActive.push(id);
		this.touchPos[id * 2] = x;
		this.touchPos[id * 2 + 1] = y;
		if(id == 0) {
			var _this = this.mousePosition;
			var x1 = x;
			var y1 = y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this.x = x1;
			_this.y = y1;
			this.mouseIsDown = true;
			this.mousePressed = true;
		}
	}
	,onMouseMove: function(x,y,moveX,moveY) {
		this.touchPos[0] = x;
		this.touchPos[1] = y;
		this.mousePosition.x = x;
		this.mousePosition.y = y;
		this.mouseDeltaX = moveX;
		this.mouseDeltaY = moveY;
	}
	,onMouseUp: function(button,x,y) {
		HxOverrides.remove(this.touchActive,0);
		--this.activeTouchSpots;
		this.mousePosition.x = x;
		this.mousePosition.y = y;
		this.mouseReleased = button == 0;
		this.mouseIsDown = button != 0;
	}
	,onMouseDown: function(button,x,y) {
		++this.activeTouchSpots;
		this.touchActive.push(0);
		this.touchPos[0] = x;
		this.touchPos[1] = y;
		this.mousePosition.x = x;
		this.mousePosition.y = y;
		this.mousePressed = this.mouseIsDown = button == 0;
	}
	,onKeyDown: function(key) {
		if(this.keysDown.indexOf(key) == -1) {
			this.keysDown.push(key);
			this.keysPressed.push(key);
		}
	}
	,onKeyUp: function(key) {
		var vIndex = this.keysDown.indexOf(key);
		if(vIndex != -1) {
			this.keysDown.splice(vIndex,1);
		}
		this.keysReleased.push(key);
	}
	,update: function() {
		this.mousePressed = false;
		this.mouseReleased = false;
		this.keysPressed.splice(0,this.keysPressed.length);
		this.keysReleased.splice(0,this.keysReleased.length);
		var _g = 0;
		var _g1 = this.joysticks;
		while(_g < _g1.length) _g1[_g++].update();
		this.mouseDeltaX = 0;
		this.mouseDeltaY = 0;
	}
	,clearInput: function() {
		this.mousePressed = false;
		this.mouseReleased = false;
		this.activeTouchSpots = 0;
		this.keysPressed.splice(0,this.keysPressed.length);
		this.keysReleased.splice(0,this.keysReleased.length);
		this.keysDown.splice(0,this.keysDown.length);
		var _g = 0;
		var _g1 = this.joysticks;
		while(_g < _g1.length) _g1[_g++].clearInput();
	}
	,isKeyCodeDown: function(keyCode) {
		return this.keysDown.indexOf(keyCode) != -1;
	}
	,isKeyCodePressed: function(keyCode) {
		return this.keysPressed.indexOf(keyCode) != -1;
	}
	,isMousePressed: function() {
		return this.mousePressed;
	}
	,__class__: com_framework_utils_Input
};
var com_framework_utils_JoystickProxy = function(id) {
	this.id = id;
	this.buttons = [];
	this.axes = [];
	this.pressed = [];
	this.released = [];
	this.onConnect();
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.buttons.push(0);
	this.axes.push(0);
	this.axes.push(0);
	this.axes.push(0);
	this.axes.push(0);
	this.axes.push(0);
	this.axes.push(0);
	this.axes.push(0);
};
$hxClasses["com.framework.utils.JoystickProxy"] = com_framework_utils_JoystickProxy;
com_framework_utils_JoystickProxy.__name__ = "com.framework.utils.JoystickProxy";
com_framework_utils_JoystickProxy.prototype = {
	onConnect: function() {
		if(!this.active) {
			this.gamepad = kha_input_Gamepad.get(this.id);
			if(this.gamepad != null) {
				this.gamepad.notify($bind(this,this.onAxis),$bind(this,this.onButton));
				this.active = true;
			}
		}
	}
	,onDisconnect: function() {
		if(this.active) {
			this.gamepad = kha_input_Gamepad.get(this.id);
			if(this.gamepad != null) {
				this.gamepad.remove($bind(this,this.onAxis),$bind(this,this.onButton));
				this.active = false;
			}
		}
	}
	,onAxis: function(id,value) {
		this.axes[id] = value;
		if(this.onAxisChange != null) {
			this.onAxisChange(id,value);
		}
	}
	,onButton: function(id,value) {
		this.buttons[id] = value;
		if(value == 0) {
			this.released.push(id);
		} else {
			this.pressed.push(id);
		}
		if(this.onButtonChange != null) {
			this.onButtonChange(id,value);
		}
	}
	,update: function() {
		this.released.splice(0,this.released.length);
		this.pressed.splice(0,this.pressed.length);
	}
	,clearInput: function() {
		this.released.splice(0,this.released.length);
		this.pressed.splice(0,this.pressed.length);
		var _g = 0;
		var _g1 = this.buttons.length;
		while(_g < _g1) this.buttons[_g++] = 0;
		this.onButtonChange = null;
		this.onAxisChange = null;
	}
	,__class__: com_framework_utils_JoystickProxy
};
var com_framework_utils_Perlin = function(repeat) {
	if(repeat == null) {
		repeat = -1;
	}
	this.repeat = repeat;
	if(com_framework_utils_Perlin.P == null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < 512) _g.push(com_framework_utils_Perlin.PERMUTATIONS[_g1++ % 256]);
		com_framework_utils_Perlin.P = _g;
	}
};
$hxClasses["com.framework.utils.Perlin"] = com_framework_utils_Perlin;
com_framework_utils_Perlin.__name__ = "com.framework.utils.Perlin";
com_framework_utils_Perlin.grad = function(hash,x,y,z) {
	var h = hash & 15;
	var u = h < 8 ? x : y;
	var v;
	if(h < 4) {
		v = y;
	} else if(h == 12 || h == 14) {
		v = x;
	} else {
		v = z;
	}
	return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
};
com_framework_utils_Perlin.prototype = {
	perlin: function(x,y,z) {
		if(this.repeat > 0) {
			x %= this.repeat;
			y %= this.repeat;
			z %= this.repeat;
		}
		var xi = Math.floor(x) & 255;
		var yi = Math.floor(y) & 255;
		var zi = Math.floor(z) & 255;
		var xf = x - Math.floor(x);
		var yf = y - Math.floor(y);
		var zf = z - Math.floor(z);
		var u = this.fade(xf);
		var v = this.fade(yf);
		var x1 = this.lerp(com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[xi] + yi] + zi],xf,yf,zf),com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[this.inc(xi)] + yi] + zi],xf - 1,yf,zf),u);
		var x2 = this.lerp(com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[xi] + this.inc(yi)] + zi],xf,yf - 1,zf),com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[this.inc(xi)] + this.inc(yi)] + zi],xf - 1,yf - 1,zf),u);
		var y1 = this.lerp(x1,x2,v);
		x1 = this.lerp(com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[xi] + yi] + this.inc(zi)],xf,yf,zf - 1),com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[this.inc(xi)] + yi] + this.inc(zi)],xf - 1,yf,zf - 1),u);
		x2 = this.lerp(com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[xi] + this.inc(yi)] + this.inc(zi)],xf,yf - 1,zf - 1),com_framework_utils_Perlin.grad(com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[com_framework_utils_Perlin.P[this.inc(xi)] + this.inc(yi)] + this.inc(zi)],xf - 1,yf - 1,zf - 1),u);
		return (this.lerp(y1,this.lerp(x1,x2,v),this.fade(zf)) + 1) / 2;
	}
	,OctavePerlin: function(x,y,z,octaves,persistence,frequency) {
		var total = 0.0;
		var maxValue = 0.0;
		var amplitude = 1.0;
		var _g = 0;
		while(_g < octaves) {
			++_g;
			total += this.perlin(x * frequency,y * frequency,z * frequency) * amplitude;
			maxValue += amplitude;
			amplitude *= persistence;
			frequency *= 2.0;
		}
		return total / maxValue;
	}
	,fade: function(t) {
		return t * t * t * (t * (t * 6 - 15) + 10);
	}
	,inc: function(num) {
		++num;
		if(this.repeat > 0) {
			num %= this.repeat;
		}
		return num;
	}
	,lerp: function(a,b,x) {
		return a + x * (b - a);
	}
	,__class__: com_framework_utils_Perlin
};
var com_framework_utils_State = function() {
	this.timeScale = 1;
	com_framework_utils_Entity.call(this);
	this.subStates = [];
};
$hxClasses["com.framework.utils.State"] = com_framework_utils_State;
com_framework_utils_State.__name__ = "com.framework.utils.State";
com_framework_utils_State.__super__ = com_framework_utils_Entity;
com_framework_utils_State.prototype = $extend(com_framework_utils_Entity.prototype,{
	load: function(resources) {
	}
	,init: function() {
	}
	,removeSubState: function(state) {
		HxOverrides.remove(this.subStates,state);
		this.stage.removeSubStage(state.stage);
		state.parentState = null;
		state.die();
		state.destroy();
	}
	,changeState: function(state) {
		com_framework_Simulation.i.changeState(state);
	}
	,stageColor: function(r,g,b,a) {
		if(a == null) {
			a = 1;
		}
		if(b == null) {
			b = 0;
		}
		if(g == null) {
			g = 0;
		}
		if(r == null) {
			r = 0;
		}
		this.stage.set_color(kha__$Color_Color_$Impl_$.fromFloats(r,g,b,a));
	}
	,draw: function(framebuffer) {
		var _g = 0;
		var _g1 = this.subStates;
		while(_g < _g1.length) _g1[_g++].draw(framebuffer);
	}
	,destroy: function() {
		if(this.resources != null) {
			this.resources.unload();
		}
		while(this.subStates.length > 0) this.removeSubState(this.subStates[0]);
		this.stage.destroy();
		if(this.parentState != null) {
			this.parentState.removeSubState(this);
		}
		com_framework_utils_Entity.prototype.destroy.call(this);
	}
	,update: function(dt) {
		var dt1 = com_TimeManager.delta * this.timeScale;
		com_framework_utils_Entity.prototype.update.call(this,dt1);
		var _g = 0;
		var _g1 = this.subStates;
		while(_g < _g1.length) _g1[_g++].update(dt1);
	}
	,__class__: com_framework_utils_State
});
var com_gEngine_AnimationData = function() {
	this.texturesID = -1;
};
$hxClasses["com.gEngine.AnimationData"] = com_gEngine_AnimationData;
com_gEngine_AnimationData.__name__ = "com.gEngine.AnimationData";
com_gEngine_AnimationData.prototype = {
	__class__: com_gEngine_AnimationData
};
var com_gEngine_DrawArea = function(minX,minY,maxX,maxY) {
	this.minX = minX;
	this.minY = minY;
	this.maxY = maxY;
	this.maxX = maxX;
};
$hxClasses["com.gEngine.DrawArea"] = com_gEngine_DrawArea;
com_gEngine_DrawArea.__name__ = "com.gEngine.DrawArea";
com_gEngine_DrawArea.prototype = {
	get_width: function() {
		return this.maxX - this.minX;
	}
	,__class__: com_gEngine_DrawArea
};
var com_gEngine_Filter = function(filters,cropScreen) {
	if(cropScreen == null) {
		cropScreen = true;
	}
	this.alpha = 0;
	this.blue = 0;
	this.green = 0;
	this.red = 0;
	this.cropScreen = cropScreen;
	this.renderPass = [];
	this.drawArea = new com_helpers_MinMax();
	if(filters != null) {
		this.setPasses(filters);
	}
};
$hxClasses["com.gEngine.Filter"] = com_gEngine_Filter;
com_gEngine_Filter.__name__ = "com.gEngine.Filter";
com_gEngine_Filter.prototype = {
	setPasses: function(filters) {
		var passFilters = [];
		this.renderPass = [];
		var _g = 0;
		while(_g < filters.length) {
			var filter = filters[_g];
			++_g;
			if(((filter) instanceof com_gEngine_shaders_ShRender)) {
				this.renderPass.push(new com_gEngine_shaders_RenderPass(passFilters,true));
				passFilters = [];
				continue;
			}
			if(((filter) instanceof com_gEngine_shaders_ShDontRender)) {
				this.renderPass.push(new com_gEngine_shaders_RenderPass(passFilters,false));
				passFilters = [];
				continue;
			}
			passFilters.push(filter);
		}
		if(passFilters.length != 0) {
			this.renderPass.push(new com_gEngine_shaders_RenderPass(passFilters,true));
		}
		var _g1 = 0;
		var _g2 = this.renderPass;
		while(_g1 < _g2.length) _g1++;
	}
	,filterStart: function(display,paintMode,transform) {
		if(!this.cropScreen) {
			var _this = this.drawArea.min;
			_this.x = 0;
			_this.y = 0;
			var _this1 = this.drawArea.max;
			var x = paintMode.camera.width;
			var y = paintMode.camera.height;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			_this1.x = x;
			_this1.y = y;
		}
		if(this.renderPass.length == 0) {
			return;
		}
		paintMode.render();
		this.finishTarget = com_gEngine_GEngine.get_i().currentRenderTargetId;
		var finshTargetImage = com_gEngine_GEngine.get_i().currentCanvas();
		this.workTargetId = com_gEngine_GEngine.get_i().getRenderTarget(paintMode.camera.width,paintMode.camera.height);
		com_gEngine_GEngine.get_i().endCanvas();
		com_gEngine_GEngine.get_i().setCanvas(this.workTargetId);
		var g4 = com_gEngine_GEngine.get_i().currentCanvas().get_g4();
		com_gEngine_GEngine.get_i().currentCanvas().setDepthStencilFrom(finshTargetImage);
		com_gEngine_GEngine.get_i().beginCanvas();
		g4.clear(kha__$Color_Color_$Impl_$.fromFloats(this.red,this.green,this.blue,this.alpha));
		if(this.cropScreen) {
			var _this2 = this.drawArea;
			var _this3 = _this2.min;
			var x1 = Infinity;
			var y1 = Infinity;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this3.x = x1;
			_this3.y = y1;
			var _this4 = _this2.max;
			var x2 = -Infinity;
			var y2 = -Infinity;
			if(y2 == null) {
				y2 = 0;
			}
			if(x2 == null) {
				x2 = 0;
			}
			_this4.x = x2;
			_this4.y = y2;
			_this2.minZ = Infinity;
			_this2.maxZ = -Infinity;
			_this2.isEmpty = true;
			display.getDrawArea(this.drawArea,transform);
			if(paintMode.hasRenderArea()) {
				this.drawArea.intersection(paintMode.getRenderArea());
			}
		}
		if(this.drawArea.isEmpty) {
			com_gEngine_GEngine.get_i().endCanvas();
			com_gEngine_GEngine.get_i().releaseRenderTarget(this.workTargetId);
			com_gEngine_GEngine.get_i().setCanvas(this.finishTarget);
			com_gEngine_GEngine.get_i().beginCanvas();
		}
	}
	,filterEnd: function(paintMode) {
		if(this.drawArea.isEmpty) {
			return;
		}
		paintMode.render();
		com_gEngine_GEngine.get_i().endCanvas();
		var counter = this.renderPass.length;
		var _g = 0;
		var _g1 = this.renderPass;
		while(_g < _g1.length) {
			var renderPass = _g1[_g];
			++_g;
			--counter;
			var filters = renderPass.filters;
			var resolution = 1;
			var length;
			if(renderPass.renderAtEnd) {
				length = filters.length - 1;
			} else {
				length = filters.length;
			}
			var _g2 = 0;
			var _g11 = length;
			while(_g2 < _g11) {
				var sourceImg = this.workTargetId;
				this.workTargetId = com_gEngine_GEngine.get_i().getRenderTarget(paintMode.camera.width,paintMode.camera.height);
				com_gEngine_GEngine.get_i().setCanvas(this.workTargetId);
				com_gEngine_GEngine.get_i().beginCanvas();
				var filter = filters[_g2++];
				filter.setProjection(paintMode.camera.screenTransform);
				filter.adjustRenderArea(this.drawArea);
				this.renderBuffer(sourceImg,filter,this.drawArea.min.x,this.drawArea.min.y,this.drawArea.width(),this.drawArea.height(),1 / resolution,true,resolution * filter.resolution);
				resolution *= filter.resolution;
				if(filter.releaseTexture()) {
					com_gEngine_GEngine.get_i().releaseRenderTarget(sourceImg);
				}
				com_gEngine_GEngine.get_i().endCanvas();
			}
			if(renderPass.renderAtEnd) {
				com_gEngine_GEngine.get_i().setCanvas(this.finishTarget);
				com_gEngine_GEngine.get_i().beginCanvas();
				var filter1 = filters[filters.length - 1];
				filter1.setProjection(paintMode.camera.screenTransform);
				filter1.adjustRenderArea(this.drawArea);
				this.renderBuffer(this.workTargetId,filter1,this.drawArea.min.x,this.drawArea.min.y,this.drawArea.width(),this.drawArea.height(),1 / resolution,false);
				if(filter1.releaseTexture() && counter == 0) {
					com_gEngine_GEngine.get_i().releaseRenderTarget(this.workTargetId);
				}
				if(0 != counter) {
					com_gEngine_GEngine.get_i().endCanvas();
				}
			}
		}
	}
	,renderBuffer: function(source,painter,x,y,width,height,sourceScale,clear,outScale) {
		if(outScale == null) {
			outScale = 1;
		}
		painter.textureID = source;
		var tex = com_gEngine_GEngine.get_i().getTexture(source);
		var texWidth = tex.get_realWidth() * sourceScale;
		var texHeight = tex.get_realHeight() * sourceScale;
		outScale *= com_gEngine_GEngine.get_i().oversample;
		painter.write(x * outScale);
		painter.write(y * outScale);
		painter.write(0);
		painter.write(x * outScale / texWidth);
		painter.write(y * outScale / texHeight);
		var x1 = x + width;
		painter.write(x1 * outScale);
		painter.write(y * outScale);
		painter.write(0);
		painter.write(x1 * outScale / texWidth);
		painter.write(y * outScale / texHeight);
		var y1 = y + height;
		painter.write(x * outScale);
		painter.write(y1 * outScale);
		painter.write(0);
		painter.write(x * outScale / texWidth);
		painter.write(y1 * outScale / texHeight);
		var x2 = x + width;
		var y2 = y + height;
		painter.write(x2 * outScale);
		painter.write(y2 * outScale);
		painter.write(0);
		painter.write(x2 * outScale / texWidth);
		painter.write(y2 * outScale / texHeight);
		painter.render(clear);
	}
	,__class__: com_gEngine_Filter
};
var com_gEngine_FontData = function(fontSize) {
	this.fontSize = 0;
	com_gEngine_AnimationData.call(this);
	this.fontSize = fontSize;
};
$hxClasses["com.gEngine.FontData"] = com_gEngine_FontData;
com_gEngine_FontData.__name__ = "com.gEngine.FontData";
com_gEngine_FontData.__super__ = com_gEngine_AnimationData;
com_gEngine_FontData.prototype = $extend(com_gEngine_AnimationData.prototype,{
	__class__: com_gEngine_FontData
});
var com_gEngine_Frame = function() {
};
$hxClasses["com.gEngine.Frame"] = com_gEngine_Frame;
com_gEngine_Frame.__name__ = "com.gEngine.Frame";
com_gEngine_Frame.prototype = {
	__class__: com_gEngine_Frame
};
var com_gEngine_GEngine = function(oversample,antiAlias) {
	this.currentCanvasActive = false;
	this.scaleHeigth = 1;
	this.scaleWidth = 1;
	this.antiAliasing = 0;
	this.identity3x3 = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
	this.fps = 0;
	this.previousTime = 0.0;
	this.elapsedTime = 0.0;
	this.totalFrames = 0;
	this.deltaTime = 0.0;
	this.currentRenderTargetId = -1;
	this.oversample = 1;
	this.directRender = true;
	this.clearColor = kha__$Color_Color_$Impl_$.fromFloats(0,0,0,1);
	this.antiAliasing = antiAlias;
	this.oversample = oversample;
	com_gEngine_PainterGarbage.init();
	this.renderTargetPool = new com_helpers_RenderTargetPool();
	this.textures = [];
	this.createPainters();
	haxe_Log.trace(kha_System.windowWidth() + "x" + kha_System.windowHeight(),{ fileName : "com/gEngine/GEngine.hx", lineNumber : 90, className : "com.gEngine.GEngine", methodName : "new"});
	this.createBuffer(kha_System.windowWidth(),kha_System.windowHeight());
	var recTexture = kha_Image.createRenderTarget(1,1);
	recTexture.get_g2().begin(true,-1);
	recTexture.get_g2().end();
	this.textures.push(recTexture);
	com_gEngine_helper_RectangleDisplay.init(1);
};
$hxClasses["com.gEngine.GEngine"] = com_gEngine_GEngine;
com_gEngine_GEngine.__name__ = "com.gEngine.GEngine";
com_gEngine_GEngine.get_i = function() {
	return com_gEngine_GEngine.i;
};
com_gEngine_GEngine.init = function(virtualWidth,virtualHeight,oversample,antiAlias) {
	com_gEngine_GEngine.virtualWidth = virtualWidth;
	com_gEngine_GEngine.virtualHeight = virtualHeight;
	com_gEngine_GEngine.i = new com_gEngine_GEngine(oversample,antiAlias);
	kha_Assets.loadFont("mainfont",com_gEngine_GEngine.setFont,null,{ fileName : "com/gEngine/GEngine.hx", lineNumber : 156, className : "com.gEngine.GEngine", methodName : "init"});
};
com_gEngine_GEngine.setFont = function(aFont) {
	com_gEngine_GEngine.get_i().font = aFont;
	com_gEngine_GEngine.get_i().fontLoaded = true;
};
com_gEngine_GEngine.prototype = {
	getSimplePainter: function(blend) {
		return this.simplePainters[blend];
	}
	,getAlphaPainter: function(blend) {
		return this.alphaPainters[blend];
	}
	,getColorTransformPainter: function(blend) {
		return this.colorPainters[blend];
	}
	,createBuffer: function(targetWidth,targetHeight) {
		if(this.width == targetWidth && this.height == targetHeight) {
			return false;
		}
		this.width = targetWidth * this.oversample | 0;
		this.height = targetHeight * this.oversample | 0;
		if(this.mTempBuffer != null) {
			this.mTempBuffer.unload();
		}
		this.mTempBuffer = kha_Image.createRenderTarget(this.width,this.height,null,1,this.antiAliasing);
		if(this.textures.length == 0) {
			this.currentRenderTargetId = this.mTempBufferID = this.textures.push(this.mTempBuffer) - 1;
		} else {
			this.textures[this.mTempBufferID] = this.mTempBuffer;
		}
		this.realWidth = this.mTempBuffer.get_realWidth();
		this.realHeight = this.mTempBuffer.get_realHeight();
		var renderScale = 1;
		this.realU = this.width / this.realWidth;
		this.realV = this.height / this.realHeight;
		this.scaleWidth = this.width / this.realWidth;
		this.scaleHeigth = this.height / this.realHeight;
		var right = com_gEngine_GEngine.virtualWidth / this.scaleWidth / renderScale;
		var bottom = com_gEngine_GEngine.virtualHeight / this.scaleHeigth / renderScale;
		this.modelViewMatrix = new kha_math_FastMatrix4(2 / right,0,0,-right / right,0,2.0 / (0 - bottom),0,-bottom / (0 - bottom),0,0,-0.0004,-1.,0,0,0,1);
		if(kha_Image.renderTargetsInvertedY()) {
			var _this = this.modelViewMatrix;
			var _this__00 = 1;
			var _this__10 = 0;
			var _this__20 = 0;
			var _this__30 = 0;
			var _this__01 = 0;
			var _this__11 = -1;
			var _this__21 = 0;
			var _this__31 = 0;
			var _this__02 = 0;
			var _this__12 = 0;
			var _this__22 = 1;
			var _this__32 = 0;
			var _this__03 = 0;
			var _this__13 = 0;
			var _this__23 = 0;
			var _this__33 = 1;
			var m = this.modelViewMatrix;
			var _01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02 + _this__31 * m._03;
			var _11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12 + _this__31 * m._13;
			var _21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22 + _this__31 * m._23;
			var _31 = _this__01 * m._30 + _this__11 * m._31 + _this__21 * m._32 + _this__31 * m._33;
			var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02 + _this__32 * m._03;
			var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12 + _this__32 * m._13;
			var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22 + _this__32 * m._23;
			var _32 = _this__02 * m._30 + _this__12 * m._31 + _this__22 * m._32 + _this__32 * m._33;
			var _03 = _this__03 * m._00 + _this__13 * m._01 + _this__23 * m._02 + _this__33 * m._03;
			var _13 = _this__03 * m._10 + _this__13 * m._11 + _this__23 * m._12 + _this__33 * m._13;
			var _23 = _this__03 * m._20 + _this__13 * m._21 + _this__23 * m._22 + _this__33 * m._23;
			var _33 = _this__03 * m._30 + _this__13 * m._31 + _this__23 * m._32 + _this__33 * m._33;
			_this._00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02 + _this__30 * m._03;
			_this._10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12 + _this__30 * m._13;
			_this._20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22 + _this__30 * m._23;
			_this._30 = _this__00 * m._30 + _this__10 * m._31 + _this__20 * m._32 + _this__30 * m._33;
			_this._01 = _01;
			_this._11 = _11;
			_this._21 = _21;
			_this._31 = _31;
			_this._02 = _02;
			_this._12 = _12;
			_this._22 = _22;
			_this._32 = _32;
			_this._03 = _03;
			_this._13 = _13;
			_this._23 = _23;
			_this._33 = _33;
		}
		return true;
	}
	,createDefaultPainters: function() {
		this.stage = new com_gEngine_display_Stage();
		this.painter = new com_gEngine_painters_Painter(false,com_gEngine_display_Blend.blendNone());
		this.painter.setProjection(new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));
		this.painter.filter = 1;
	}
	,resize: function(availWidth,availHeight) {
		if(availWidth == 0 || availWidth == 0) {
			return;
		}
		var _this = com_framework_utils_Input.i.screenScale;
		var x = com_gEngine_GEngine.virtualWidth / availWidth;
		var y = com_gEngine_GEngine.virtualHeight / availHeight;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		_this.x = x;
		_this.y = y;
	}
	,addTexture: function(texture) {
		return this.textures.push(texture) - 1;
	}
	,changeToBuffer: function() {
		this.currentRenderTargetId = this.mTempBufferID;
		this.renderCustomBuffer = false;
	}
	,setCanvas: function(id) {
		this.currentRenderTargetId = id;
		if(this.currentRenderTargetId != this.mTempBufferID) {
			this.renderCustomBuffer = true;
			this.customBuffer = this.textures[id];
		} else {
			this.changeToBuffer();
		}
	}
	,createPainters: function() {
		var defaultBlend = com_gEngine_display_Blend.blendDefault();
		var multipassBlend = com_gEngine_display_Blend.blendMultipass();
		var addBlend = com_gEngine_display_Blend.blendAdd();
		var multiplyBlend = com_gEngine_display_Blend.blendMultiply();
		var screenBlend = com_gEngine_display_Blend.blendScreen();
		this.simplePainters = [new com_gEngine_painters_Painter(false,defaultBlend),new com_gEngine_painters_Painter(false,multipassBlend),new com_gEngine_painters_Painter(false,addBlend),new com_gEngine_painters_Painter(false,multiplyBlend),new com_gEngine_painters_Painter(false,screenBlend)];
		this.alphaPainters = [new com_gEngine_painters_PainterAlpha(false,defaultBlend),new com_gEngine_painters_PainterAlpha(false,multipassBlend),new com_gEngine_painters_PainterAlpha(false,addBlend),new com_gEngine_painters_PainterAlpha(false,multiplyBlend),new com_gEngine_painters_PainterAlpha(false,screenBlend)];
		this.colorPainters = [new com_gEngine_painters_PainterColorTransform(false,defaultBlend),new com_gEngine_painters_PainterColorTransform(false,multipassBlend),new com_gEngine_painters_PainterColorTransform(false,addBlend),new com_gEngine_painters_PainterColorTransform(false,multiplyBlend),new com_gEngine_painters_PainterColorTransform(false,screenBlend)];
	}
	,endCanvas: function() {
		if(this.currentCanvasActive) {
			this.currentCanvas().get_g4().end();
			this.currentCanvasActive = false;
		}
	}
	,beginCanvas: function() {
		if(!this.currentCanvasActive) {
			this.currentCanvas().get_g4().begin();
			this.currentCanvasActive = true;
		}
	}
	,currentCanvas: function() {
		if(this.renderCustomBuffer) {
			return this.customBuffer;
		}
		if(this.renderFinal || this.directRender) {
			return this.mFrameBuffer;
		}
		return this.mTempBuffer;
	}
	,getMatrix: function() {
		return this.modelViewMatrix;
	}
	,renderBufferFull: function(source,painter,x,y,width,height,sourceScale,clear,outScale) {
		if(outScale == null) {
			outScale = 1;
		}
		painter.textureID = source;
		painter.setProjection(this.getMatrix());
		var text = this.getTexture(source);
		painter.write(x * outScale);
		painter.write(y * outScale);
		painter.write(0);
		painter.write(0);
		painter.write(0);
		var y1 = y * this.scaleHeigth;
		var sWidth = width * this.oversample / text.get_realWidth();
		painter.write((x + width) * this.scaleWidth * outScale);
		painter.write(y1 * outScale);
		painter.write(0);
		painter.write(sWidth);
		painter.write(0);
		var y2 = (y + height) * this.scaleHeigth;
		var sHeight = height * this.oversample / text.get_realHeight();
		painter.write(x * this.scaleWidth * outScale);
		painter.write(y2 * outScale);
		painter.write(0);
		painter.write(0);
		painter.write(sHeight);
		var y3 = (y + height) * this.scaleHeigth;
		var sWidth1 = width * this.oversample / text.get_realWidth();
		var sHeight1 = height * this.oversample / text.get_realHeight();
		painter.write((x + width) * this.scaleWidth * outScale);
		painter.write(y3 * outScale);
		painter.write(0);
		painter.write(sWidth1);
		painter.write(sHeight1);
		painter.render(clear);
	}
	,getTexture: function(id) {
		return this.textures[id];
	}
	,update: function() {
		this.stage.update();
	}
	,draw: function(frameBuffer,clear) {
		if(clear == null) {
			clear = true;
		}
		if(frameBuffer.get_width() * this.oversample != this.width || frameBuffer.get_height() * this.oversample != this.height) {
			this.resize(frameBuffer.get_width(),frameBuffer.get_height());
		}
		var currentTime = kha_Scheduler.realTime();
		this.deltaTime = currentTime - this.previousTime;
		this.elapsedTime += this.deltaTime;
		if(this.elapsedTime >= 1.0) {
			this.fps = this.totalFrames;
			this.totalFrames = 0;
			this.elapsedTime = 0;
		}
		this.totalFrames++;
		this.previousTime = currentTime;
		this.mFrameBuffer = frameBuffer;
		if(this.mTempBuffer == null) {
			return;
		}
		var g;
		if(this.directRender) {
			g = this.mFrameBuffer.get_g4();
		} else {
			g = this.mTempBuffer.get_g4();
		}
		g.begin();
		if(clear) {
			g.clear(this.clearColor,1);
		}
		g.end();
		this.stage.render();
		this.changeToBuffer();
		if(!this.directRender) {
			this.painter.textureID = this.mTempBufferID;
			this.renderFinal = true;
			this.beginCanvas();
			if(kha_Image.renderTargetsInvertedY()) {
				var _this = this.painter;
				_this.buffer[_this.counter++] = -1;
				var _this1 = this.painter;
				_this1.buffer[_this1.counter++] = -1;
				var _this2 = this.painter;
				_this2.buffer[_this2.counter++] = 0;
				var _this3 = this.painter;
				_this3.buffer[_this3.counter++] = 0;
				var _this4 = this.painter;
				_this4.buffer[_this4.counter++] = this.realV;
				var _this5 = this.painter;
				_this5.buffer[_this5.counter++] = 1;
				var _this6 = this.painter;
				_this6.buffer[_this6.counter++] = -1;
				var _this7 = this.painter;
				_this7.buffer[_this7.counter++] = 0;
				var _this8 = this.painter;
				_this8.buffer[_this8.counter++] = this.realU;
				var _this9 = this.painter;
				_this9.buffer[_this9.counter++] = this.realV;
				var _this10 = this.painter;
				_this10.buffer[_this10.counter++] = -1;
				var _this11 = this.painter;
				_this11.buffer[_this11.counter++] = 1;
				var _this12 = this.painter;
				_this12.buffer[_this12.counter++] = 0;
				var _this13 = this.painter;
				_this13.buffer[_this13.counter++] = 0;
				var _this14 = this.painter;
				_this14.buffer[_this14.counter++] = 0;
				var _this15 = this.painter;
				_this15.buffer[_this15.counter++] = 1;
				var _this16 = this.painter;
				_this16.buffer[_this16.counter++] = 1;
				var _this17 = this.painter;
				_this17.buffer[_this17.counter++] = 0;
				var _this18 = this.painter;
				_this18.buffer[_this18.counter++] = this.realU;
				var _this19 = this.painter;
				_this19.buffer[_this19.counter++] = 0;
			} else {
				var _this20 = this.painter;
				_this20.buffer[_this20.counter++] = -1;
				var _this21 = this.painter;
				_this21.buffer[_this21.counter++] = -1;
				var _this22 = this.painter;
				_this22.buffer[_this22.counter++] = 0;
				var _this23 = this.painter;
				_this23.buffer[_this23.counter++] = 0;
				var _this24 = this.painter;
				_this24.buffer[_this24.counter++] = 0;
				var _this25 = this.painter;
				_this25.buffer[_this25.counter++] = 1;
				var _this26 = this.painter;
				_this26.buffer[_this26.counter++] = -1;
				var _this27 = this.painter;
				_this27.buffer[_this27.counter++] = 0;
				var _this28 = this.painter;
				_this28.buffer[_this28.counter++] = this.realU;
				var _this29 = this.painter;
				_this29.buffer[_this29.counter++] = 0;
				var _this30 = this.painter;
				_this30.buffer[_this30.counter++] = -1;
				var _this31 = this.painter;
				_this31.buffer[_this31.counter++] = 1;
				var _this32 = this.painter;
				_this32.buffer[_this32.counter++] = 0;
				var _this33 = this.painter;
				_this33.buffer[_this33.counter++] = 0;
				var _this34 = this.painter;
				_this34.buffer[_this34.counter++] = this.realV;
				var _this35 = this.painter;
				_this35.buffer[_this35.counter++] = 1;
				var _this36 = this.painter;
				_this36.buffer[_this36.counter++] = 1;
				var _this37 = this.painter;
				_this37.buffer[_this37.counter++] = 0;
				var _this38 = this.painter;
				_this38.buffer[_this38.counter++] = this.realU;
				var _this39 = this.painter;
				_this39.buffer[_this39.counter++] = this.realV;
			}
			this.painter.render(true);
			this.endCanvas();
			this.renderFinal = false;
			--com_gEngine_GEngine.drawCount;
		}
		if(this.fontLoaded) {
			var g2 = frameBuffer.get_g2();
			g2.begin(false);
			var transformation = this.identity3x3;
			g2.setTransformation(transformation);
			var _this40 = g2.transformations[g2.transformationIndex];
			_this40._00 = transformation._00;
			_this40._10 = transformation._10;
			_this40._20 = transformation._20;
			_this40._01 = transformation._01;
			_this40._11 = transformation._11;
			_this40._21 = transformation._21;
			_this40._02 = transformation._02;
			_this40._12 = transformation._12;
			_this40._22 = transformation._22;
			g2.set_font(this.font);
			g2.set_fontSize(16);
			g2.set_color(-16777216);
			g2.fillRect(0,0,250,20);
			g2.set_color(-1);
			g2.drawString("drawCount: " + com_gEngine_GEngine.drawCount + "         fps: " + this.fps + " " + com_gEngine_GEngine.extraInfo,10,2);
			g2.end();
		}
		com_gEngine_GEngine.drawCount = 0;
	}
	,getRenderTarget: function(width,height) {
		var id = this.renderTargetPool.getFreeImageId(width,height);
		if(id == -1) {
			var target = kha_Image.createRenderTarget(width * this.oversample | 0,height * this.oversample | 0,null,1,this.antiAliasing);
			id = this.textures.push(target) - 1;
			this.renderTargetPool.addRenderTarget(id,width,height);
		}
		return id;
	}
	,releaseRenderTarget: function(id) {
		this.renderTargetPool.release(id);
	}
	,unload: function() {
		var _g = 0;
		var _g1 = this.renderTargetPool.targets;
		while(_g < _g1.length) this.textures[_g1[_g++].textureId].unload();
		com_gEngine_PainterGarbage.get_i().clear();
		this.renderTargetPool.clear();
		this.stage = new com_gEngine_display_Stage();
	}
	,__class__: com_gEngine_GEngine
};
var com_gEngine_Label = function(text,frame) {
	this.text = text;
	this.frame = frame;
};
$hxClasses["com.gEngine.Label"] = com_gEngine_Label;
com_gEngine_Label.__name__ = "com.gEngine.Label";
com_gEngine_Label.prototype = {
	__class__: com_gEngine_Label
};
var com_gEngine_PainterGarbage = function() {
	this.painters = [];
};
$hxClasses["com.gEngine.PainterGarbage"] = com_gEngine_PainterGarbage;
com_gEngine_PainterGarbage.__name__ = "com.gEngine.PainterGarbage";
com_gEngine_PainterGarbage.get_i = function() {
	return com_gEngine_PainterGarbage.i;
};
com_gEngine_PainterGarbage.init = function() {
	com_gEngine_PainterGarbage.i = new com_gEngine_PainterGarbage();
};
com_gEngine_PainterGarbage.prototype = {
	add: function(painter) {
		this.painters.push(painter);
	}
	,clear: function() {
		var _g = 0;
		var _g1 = this.painters;
		while(_g < _g1.length) _g1[_g++].destroy();
		this.painters.splice(0,this.painters.length);
	}
	,__class__: com_gEngine_PainterGarbage
};
var com_gEngine_display_Blend = function() {
	this.blendOperation = 0;
};
$hxClasses["com.gEngine.display.Blend"] = com_gEngine_display_Blend;
com_gEngine_display_Blend.__name__ = "com.gEngine.display.Blend";
com_gEngine_display_Blend.blendAdd = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 1;
	blend.blendDestination = 1;
	blend.alphaBlendSource = 1;
	blend.alphaBlendDestination = 1;
	return blend;
};
com_gEngine_display_Blend.blendMultiply = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 8;
	blend.blendDestination = 5;
	blend.alphaBlendSource = 4;
	blend.alphaBlendDestination = 5;
	return blend;
};
com_gEngine_display_Blend.blendScreen = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 1;
	blend.blendDestination = 9;
	blend.alphaBlendSource = 1;
	blend.alphaBlendDestination = 1;
	return blend;
};
com_gEngine_display_Blend.blendMultipass = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 1;
	blend.blendDestination = 2;
	blend.alphaBlendSource = 1;
	blend.alphaBlendDestination = 2;
	return blend;
};
com_gEngine_display_Blend.blendDefault = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 1;
	blend.blendDestination = 5;
	blend.alphaBlendSource = 1;
	blend.alphaBlendDestination = 5;
	return blend;
};
com_gEngine_display_Blend.blendNone = function() {
	var blend = new com_gEngine_display_Blend();
	blend.blendSource = 1;
	blend.blendDestination = 2;
	blend.alphaBlendSource = 1;
	blend.alphaBlendDestination = 2;
	return blend;
};
com_gEngine_display_Blend.prototype = {
	__class__: com_gEngine_display_Blend
};
var com_gEngine_display_Camera = function(width,height) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	this.projectionIsOrthogonal = false;
	this.camera2d = true;
	this.blend = 0;
	this.textureFilter = 1;
	this.shakeY = 0;
	this.shakeX = 0;
	this.pixelSnap = false;
	this.postProcess = null;
	this.renderTarget = -1;
	this.finalY = 0;
	this.finalX = 0;
	this.clearColor = kha__$Color_Color_$Impl_$.fromFloats(0,0,0,0);
	this.offsetEye = new kha_math_FastVector3();
	this.z = 0;
	this.y = 0;
	this.x = 0;
	this.shakeInterval = 0;
	this.time = 0;
	this.scale = 1;
	if(width < 0 || height < 0) {
		width = com_gEngine_GEngine.virtualWidth;
		height = com_gEngine_GEngine.virtualHeight;
	}
	this.eye = new kha_math_FastVector3(0,0,646.1168);
	this.at = new kha_math_FastVector3(0,0,0);
	this.up = new kha_math_FastVector3(0,1,0);
	this.view = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.updateView();
	this.targetPos = new com_helpers_FastPoint(width * 0.5,height * 0.5);
	this.drawArea = com_helpers_MinMax.from(0,0,width,height);
	this.finalX = 0;
	this.finalY = 0;
	this.width = width;
	this.height = height;
	this.renderTarget = com_gEngine_GEngine.get_i().getRenderTarget(width,height);
	this.setOrthogonalProjection();
	this.projection = this.orthogonal;
	this.projectionIsOrthogonal = true;
	this.screenTransform = this.createScreenTransform();
	this.perlin = new com_framework_utils_Perlin(1);
};
$hxClasses["com.gEngine.display.Camera"] = com_gEngine_display_Camera;
com_gEngine_display_Camera.__name__ = "com.gEngine.display.Camera";
com_gEngine_display_Camera.prototype = {
	updateView: function() {
		var _this = this.view;
		var eye = this.eye;
		var at = this.at;
		var up = this.up;
		var x = at.x - eye.x;
		var y = at.y - eye.y;
		var z = at.z - eye.z;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var _this_x = x;
		var _this_y = y;
		var _this_z = z;
		var x1 = _this_x;
		var y1 = _this_y;
		var z1 = _this_z;
		if(_this_z == null) {
			z1 = 0;
		}
		if(_this_y == null) {
			y1 = 0;
		}
		if(_this_x == null) {
			x1 = 0;
		}
		var zaxis_x = x1;
		var zaxis_y = y1;
		var zaxis_z = z1;
		var currentLength = Math.sqrt(zaxis_x * zaxis_x + zaxis_y * zaxis_y + zaxis_z * zaxis_z);
		if(currentLength != 0) {
			var mul = 1 / currentLength;
			zaxis_x *= mul;
			zaxis_y *= mul;
			zaxis_z *= mul;
		}
		var _x = zaxis_y * up.z - zaxis_z * up.y;
		var _y = zaxis_z * up.x - zaxis_x * up.z;
		var _z = zaxis_x * up.y - zaxis_y * up.x;
		var x2 = _x;
		var y2 = _y;
		var z2 = _z;
		if(_z == null) {
			z2 = 0;
		}
		if(_y == null) {
			y2 = 0;
		}
		if(_x == null) {
			x2 = 0;
		}
		var _this_x1 = x2;
		var _this_y1 = y2;
		var _this_z1 = z2;
		var x3 = _this_x1;
		var y3 = _this_y1;
		var z3 = _this_z1;
		if(_this_z1 == null) {
			z3 = 0;
		}
		if(_this_y1 == null) {
			y3 = 0;
		}
		if(_this_x1 == null) {
			x3 = 0;
		}
		var xaxis_x = x3;
		var xaxis_y = y3;
		var xaxis_z = z3;
		var currentLength1 = Math.sqrt(xaxis_x * xaxis_x + xaxis_y * xaxis_y + xaxis_z * xaxis_z);
		if(currentLength1 != 0) {
			var mul1 = 1 / currentLength1;
			xaxis_x *= mul1;
			xaxis_y *= mul1;
			xaxis_z *= mul1;
		}
		var _x1 = xaxis_y * zaxis_z - xaxis_z * zaxis_y;
		var _y1 = xaxis_z * zaxis_x - xaxis_x * zaxis_z;
		var _z1 = xaxis_x * zaxis_y - xaxis_y * zaxis_x;
		var x4 = _x1;
		var y4 = _y1;
		var z4 = _z1;
		if(_z1 == null) {
			z4 = 0;
		}
		if(_y1 == null) {
			y4 = 0;
		}
		if(_x1 == null) {
			x4 = 0;
		}
		var yaxis_x = x4;
		var yaxis_y = y4;
		var yaxis_z = z4;
		_this._00 = xaxis_x;
		_this._10 = xaxis_y;
		_this._20 = xaxis_z;
		_this._30 = -(xaxis_x * eye.x + xaxis_y * eye.y + xaxis_z * eye.z);
		_this._01 = yaxis_x;
		_this._11 = yaxis_y;
		_this._21 = yaxis_z;
		_this._31 = -(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z);
		_this._02 = -zaxis_x;
		_this._12 = -zaxis_y;
		_this._22 = -zaxis_z;
		_this._32 = zaxis_x * eye.x + zaxis_y * eye.y + zaxis_z * eye.z;
		_this._03 = 0;
		_this._13 = 0;
		_this._23 = 0;
		_this._33 = 1;
		if(this.projectionIsOrthogonal) {
			var _this1 = this.view;
			var x5 = this.scale;
			var y5 = this.scale;
			var _this__10 = 0;
			var _this__20 = 0;
			var _this__30 = 0;
			var _this__01 = 0;
			var _this__21 = 0;
			var _this__31 = 0;
			var _this__02 = 0;
			var _this__12 = 0;
			var _this__22 = 1;
			var _this__32 = 0;
			var _this__03 = 0;
			var _this__13 = 0;
			var _this__23 = 0;
			var _this__33 = 1;
			var m = this.view;
			var _01 = _this__01 * m._00 + y5 * m._01 + _this__21 * m._02 + _this__31 * m._03;
			var _11 = _this__01 * m._10 + y5 * m._11 + _this__21 * m._12 + _this__31 * m._13;
			var _21 = _this__01 * m._20 + y5 * m._21 + _this__21 * m._22 + _this__31 * m._23;
			var _31 = _this__01 * m._30 + y5 * m._31 + _this__21 * m._32 + _this__31 * m._33;
			var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02 + _this__32 * m._03;
			var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12 + _this__32 * m._13;
			var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22 + _this__32 * m._23;
			var _32 = _this__02 * m._30 + _this__12 * m._31 + _this__22 * m._32 + _this__32 * m._33;
			var _03 = _this__03 * m._00 + _this__13 * m._01 + _this__23 * m._02 + _this__33 * m._03;
			var _13 = _this__03 * m._10 + _this__13 * m._11 + _this__23 * m._12 + _this__33 * m._13;
			var _23 = _this__03 * m._20 + _this__13 * m._21 + _this__23 * m._22 + _this__33 * m._23;
			var _33 = _this__03 * m._30 + _this__13 * m._31 + _this__23 * m._32 + _this__33 * m._33;
			_this1._00 = x5 * m._00 + _this__10 * m._01 + _this__20 * m._02 + _this__30 * m._03;
			_this1._10 = x5 * m._10 + _this__10 * m._11 + _this__20 * m._12 + _this__30 * m._13;
			_this1._20 = x5 * m._20 + _this__10 * m._21 + _this__20 * m._22 + _this__30 * m._23;
			_this1._30 = x5 * m._30 + _this__10 * m._31 + _this__20 * m._32 + _this__30 * m._33;
			_this1._01 = _01;
			_this1._11 = _11;
			_this1._21 = _21;
			_this1._31 = _31;
			_this1._02 = _02;
			_this1._12 = _12;
			_this1._22 = _22;
			_this1._32 = _32;
			_this1._03 = _03;
			_this1._13 = _13;
			_this1._23 = _23;
			_this1._33 = _33;
		}
		if(this.pixelSnap) {
			this.view._30 = this.view._30 | 0;
			this.view._31 = this.view._31 | 0;
		}
	}
	,setOrthogonalProjection: function() {
		this.orthogonal = this.createOrthogonalProjection();
	}
	,createOrthogonalProjection: function() {
		var left = -this.width * 0.5;
		var right = this.width * 0.5;
		var bottom = this.height * 0.5;
		var top = -this.height * 0.5;
		return new kha_math_FastMatrix4(2 / (right - left),0,0,-(right + left) / (right - left),0,2.0 / (top - bottom),0,-(top + bottom) / (top - bottom),0,0,-0.0002,0.,0,0,0,1);
	}
	,createScreenTransform: function() {
		if(kha_Image.renderTargetsInvertedY()) {
			var _this__00 = 1;
			var _this__10 = 0;
			var _this__20 = 0;
			var _this__30 = 0;
			var _this__01 = 0;
			var _this__11 = -1;
			var _this__21 = 0;
			var _this__31 = 0;
			var _this__02 = 0;
			var _this__12 = 0;
			var _this__22 = 1;
			var _this__32 = 0;
			var _this__03 = 0;
			var _this__13 = 0;
			var _this__23 = 0;
			var _this__33 = 1;
			var right = this.width;
			var bottom = this.height;
			var tx = -right / right;
			var ty = -bottom / (0 - bottom);
			var m__00 = 2 / right;
			var m__10 = 0;
			var m__01 = 0;
			var m__11 = 2.0 / (0 - bottom);
			var m__02 = 0;
			var m__12 = 0;
			var m__03 = 0;
			var m__13 = 0;
			var m__33 = 1;
			return new kha_math_FastMatrix4(_this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02 + _this__30 * m__03,_this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12 + _this__30 * m__13,0.,_this__00 * tx + _this__10 * ty + _this__30 * m__33,_this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02 + _this__31 * m__03,_this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12 + _this__31 * m__13,0.,_this__01 * tx + _this__11 * ty + _this__31 * m__33,_this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02 + _this__32 * m__03,_this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12 + _this__32 * m__13,-0.0004,_this__02 * tx + _this__12 * ty + (-1.) + _this__32 * m__33,_this__03 * m__00 + _this__13 * m__01 + _this__23 * m__02 + _this__33 * m__03,_this__03 * m__10 + _this__13 * m__11 + _this__23 * m__12 + _this__33 * m__13,0.,_this__03 * tx + _this__13 * ty + _this__33 * m__33);
		} else {
			var right1 = this.width;
			var bottom1 = this.height;
			return new kha_math_FastMatrix4(2 / right1,0,0,-right1 / right1,0,2.0 / (0 - bottom1),0,-bottom1 / (0 - bottom1),0,0,-0.0004,-1.,0,0,0,1);
		}
	}
	,render: function(paintMode,transform) {
		com_gEngine_GEngine.get_i().setCanvas(this.renderTarget);
		com_gEngine_GEngine.get_i().beginCanvas();
		com_gEngine_GEngine.get_i().currentCanvas().get_g4().clear(this.clearColor,1);
		paintMode.camera = this;
		if(this.onPreRender != null) {
			this.onPreRender(this,this.view);
		}
		this.world.render(paintMode,this.view);
		paintMode.render();
		com_gEngine_GEngine.get_i().endCanvas();
		com_gEngine_GEngine.get_i().changeToBuffer();
		com_gEngine_GEngine.get_i().beginCanvas();
		var painter = this.postProcess != null ? this.postProcess : com_gEngine_GEngine.get_i().getSimplePainter(this.blend);
		painter.filter = this.textureFilter;
		painter.setProjection(com_gEngine_GEngine.get_i().getMatrix());
		com_gEngine_GEngine.get_i().renderBufferFull(this.renderTarget,painter,this.finalX,this.finalY,this.width,this.height,1,false,1);
		com_gEngine_GEngine.get_i().endCanvas();
	}
	,limits: function(x,y,width,height) {
		this.min = new com_helpers_FastPoint(x,y);
		this.max = new com_helpers_FastPoint(x + width,y + height);
	}
	,setTarget: function(x,y) {
		var _this = this.targetPos;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		_this.x = x1;
		_this.y = y1;
	}
	,destroy: function() {
		com_gEngine_GEngine.get_i().releaseRenderTarget(this.renderTarget);
	}
	,update: function(dt) {
		if(this.camera2d) {
			this.x = this.targetPos.x;
			this.y = this.targetPos.y;
			this.z = 646.1168 / this.scale;
			this.shakeX = 0;
			this.shakeY = 0;
			this.adjustToLimits();
			if(this.time > 0) {
				this.time -= dt;
				var s = this.time / this.totalTime;
				this.shakeX = this.maxShakeX - this.perlin.OctavePerlin(this.time * s,this.time,this.time,8,s,this.shakeInterval) * this.maxShakeX * 2;
				this.shakeY = this.maxShakeY - this.perlin.OctavePerlin(-this.time,-this.time,-this.time,8,s,this.shakeInterval) * this.maxShakeY * 2;
			}
			var _this = this.eye;
			var x = this.x;
			var y = this.y;
			var z = this.z;
			if(z == null) {
				z = 0;
			}
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			var vec = this.offsetEye;
			var x1 = x - vec.x;
			var y1 = y - vec.y;
			var z1 = z - vec.z;
			if(z1 == null) {
				z1 = 0;
			}
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this.x = x1;
			_this.y = y1;
			_this.z = z1;
			var _this1 = this.at;
			var x2 = this.x;
			var y2 = this.y;
			if(y2 == null) {
				y2 = 0;
			}
			if(x2 == null) {
				x2 = 0;
			}
			_this1.x = x2;
			_this1.y = y2;
			_this1.z = 0;
		}
		this.updateView();
	}
	,adjustToLimits: function() {
		if(this.min != null) {
			if(this.x - this.width * 0.5 / this.scale < this.min.x) {
				this.x = this.min.x + this.width * 0.5 / this.scale;
			} else if(this.x + this.width * 0.5 / this.scale > this.max.x) {
				this.x = this.max.x - this.width * 0.5 / this.scale;
			}
			if(this.y - this.height * 0.5 / this.scale < this.min.y) {
				this.y = this.min.y + this.height * 0.5 / this.scale;
			} else if(this.y + this.height * 0.5 / this.scale > this.max.y) {
				this.y = this.max.y - this.height * 0.5 / this.scale;
			}
		}
	}
	,__class__: com_gEngine_display_Camera
};
var com_gEngine_display_IDraw = function() { };
$hxClasses["com.gEngine.display.IDraw"] = com_gEngine_display_IDraw;
com_gEngine_display_IDraw.__name__ = "com.gEngine.display.IDraw";
com_gEngine_display_IDraw.__isInterface__ = true;
com_gEngine_display_IDraw.prototype = {
	__class__: com_gEngine_display_IDraw
};
var com_gEngine_display_IAnimation = function() { };
$hxClasses["com.gEngine.display.IAnimation"] = com_gEngine_display_IAnimation;
com_gEngine_display_IAnimation.__name__ = "com.gEngine.display.IAnimation";
com_gEngine_display_IAnimation.__isInterface__ = true;
com_gEngine_display_IAnimation.__interfaces__ = [com_gEngine_display_IDraw];
var com_gEngine_display_IContainer = function() { };
$hxClasses["com.gEngine.display.IContainer"] = com_gEngine_display_IContainer;
com_gEngine_display_IContainer.__name__ = "com.gEngine.display.IContainer";
com_gEngine_display_IContainer.__isInterface__ = true;
com_gEngine_display_IContainer.__interfaces__ = [com_gEngine_display_IDraw];
com_gEngine_display_IContainer.prototype = {
	__class__: com_gEngine_display_IContainer
};
var com_gEngine_display_IRotation = function() { };
$hxClasses["com.gEngine.display.IRotation"] = com_gEngine_display_IRotation;
com_gEngine_display_IRotation.__name__ = "com.gEngine.display.IRotation";
com_gEngine_display_IRotation.__isInterface__ = true;
com_gEngine_display_IRotation.__interfaces__ = [com_gEngine_display_IDraw];
var com_gEngine_display_Layer = function() {
	this.offsetY = 0;
	this.offsetX = 0;
	this.playing = true;
	this.drawAreaTemp = new com_helpers_MinMax();
	this.mulA = 1;
	this.mulB = 1;
	this.mulG = 1;
	this.mulR = 1;
	this.billboard = false;
	this.scaleArea = new com_helpers_MinMax();
	this.visible = true;
	this.paralaxY = 1;
	this.paralaxX = 1;
	this.pivotY = 0;
	this.pivotX = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.z = 0;
	this.y = 0;
	this.x = 0;
	this.children = [];
	this.set_rotation(0);
	this.cosAng = 1;
	this.sinAng = 0;
	this.transform = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
};
$hxClasses["com.gEngine.display.Layer"] = com_gEngine_display_Layer;
com_gEngine_display_Layer.__name__ = "com.gEngine.display.Layer";
com_gEngine_display_Layer.__interfaces__ = [com_gEngine_display_IContainer,com_gEngine_display_IDraw];
com_gEngine_display_Layer.prototype = {
	render: function(paintMode,transform) {
		var x = -this.pivotX;
		var y = -this.pivotY;
		var model__00 = 1;
		var model__10 = 0;
		var model__20 = 0;
		var model__30 = x;
		var model__01 = 0;
		var model__11 = 1;
		var model__21 = 0;
		var model__31 = y;
		var model__02 = 0;
		var model__12 = 0;
		var model__22 = 1;
		var model__32 = 0;
		var model__03 = 0;
		var model__13 = 0;
		var model__23 = 0;
		var model__33 = 1;
		var x1 = this.scaleX;
		var y1 = this.scaleY;
		var _this__10 = 0;
		var _this__20 = 0;
		var _this__30 = 0;
		var _this__01 = 0;
		var _this__21 = 0;
		var _this__31 = 0;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _this__32 = 0;
		var _this__03 = 0;
		var _this__13 = 0;
		var _this__23 = 0;
		var _this__33 = 1;
		var _01 = _this__01 * model__00 + y1 * model__01 + _this__21 * model__02 + _this__31 * model__03;
		var _11 = _this__01 * model__10 + y1 * model__11 + _this__21 * model__12 + _this__31 * model__13;
		var _21 = _this__01 * model__20 + y1 * model__21 + _this__21 * model__22 + _this__31 * model__23;
		var _02 = _this__02 * model__00 + _this__12 * model__01 + _this__22 * model__02 + _this__32 * model__03;
		var _12 = _this__02 * model__10 + _this__12 * model__11 + _this__22 * model__12 + _this__32 * model__13;
		var _22 = _this__02 * model__20 + _this__12 * model__21 + _this__22 * model__22 + _this__32 * model__23;
		var _03 = _this__03 * model__00 + _this__13 * model__01 + _this__23 * model__02 + _this__33 * model__03;
		var _13 = _this__03 * model__10 + _this__13 * model__11 + _this__23 * model__12 + _this__33 * model__13;
		var _23 = _this__03 * model__20 + _this__13 * model__21 + _this__23 * model__22 + _this__33 * model__23;
		var _33 = _this__03 * x + _this__13 * y + _this__23 * model__32 + _this__33 * model__33;
		model__00 = x1 * model__00 + _this__10 * model__01 + _this__20 * model__02 + _this__30 * model__03;
		model__10 = x1 * model__10 + _this__10 * model__11 + _this__20 * model__12 + _this__30 * model__13;
		model__20 = x1 * model__20 + _this__10 * model__21 + _this__20 * model__22 + _this__30 * model__23;
		model__30 = x1 * x + _this__10 * y + _this__20 * model__32 + _this__30 * model__33;
		model__01 = _01;
		model__11 = _11;
		model__21 = _21;
		model__31 = _this__01 * x + y1 * y + _this__21 * model__32 + _this__31 * model__33;
		model__02 = _02;
		model__12 = _12;
		model__22 = _22;
		model__32 = _this__02 * x + _this__12 * y + _this__22 * model__32 + _this__32 * model__33;
		model__03 = _03;
		model__13 = _13;
		model__23 = _23;
		model__33 = _33;
		if(this.billboard) {
			var m3 = transform._12;
			var m4 = transform._22;
			var m5 = transform._32;
			var m6 = transform._13;
			var m7 = transform._23;
			var m8 = transform._33;
			var c00 = transform._11 * (m4 * m8 - m5 * m7) - transform._21 * (m3 * m8 - m5 * m6) + transform._31 * (m3 * m7 - m4 * m6);
			var m31 = transform._12;
			var m41 = transform._22;
			var m51 = transform._32;
			var m61 = transform._13;
			var m71 = transform._23;
			var m81 = transform._33;
			var c01 = transform._10 * (m41 * m81 - m51 * m71) - transform._20 * (m31 * m81 - m51 * m61) + transform._30 * (m31 * m71 - m41 * m61);
			var m32 = transform._11;
			var m42 = transform._21;
			var m52 = transform._31;
			var m62 = transform._13;
			var m72 = transform._23;
			var m82 = transform._33;
			var c02 = transform._10 * (m42 * m82 - m52 * m72) - transform._20 * (m32 * m82 - m52 * m62) + transform._30 * (m32 * m72 - m42 * m62);
			var m33 = transform._11;
			var m43 = transform._21;
			var m53 = transform._31;
			var m63 = transform._12;
			var m73 = transform._22;
			var m83 = transform._32;
			var c03 = transform._10 * (m43 * m83 - m53 * m73) - transform._20 * (m33 * m83 - m53 * m63) + transform._30 * (m33 * m73 - m43 * m63);
			var det = transform._00 * c00 - transform._01 * c01 + transform._02 * c02 - transform._03 * c03;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m34 = transform._02;
			var m44 = transform._22;
			var m54 = transform._32;
			var m64 = transform._03;
			var m74 = transform._23;
			var m84 = transform._33;
			var m35 = transform._02;
			var m45 = transform._22;
			var m55 = transform._32;
			var m65 = transform._03;
			var m75 = transform._23;
			var m85 = transform._33;
			var m36 = transform._01;
			var m46 = transform._21;
			var m56 = transform._31;
			var m66 = transform._03;
			var m76 = transform._23;
			var m86 = transform._33;
			var m37 = transform._01;
			var m47 = transform._21;
			var m57 = transform._31;
			var m67 = transform._02;
			var m77 = transform._22;
			var m87 = transform._32;
			var m38 = transform._02;
			var m48 = transform._12;
			var m58 = transform._32;
			var m68 = transform._03;
			var m78 = transform._13;
			var m88 = transform._33;
			var m39 = transform._02;
			var m49 = transform._12;
			var m59 = transform._32;
			var m69 = transform._03;
			var m79 = transform._13;
			var m89 = transform._33;
			var m310 = transform._01;
			var m410 = transform._11;
			var m510 = transform._31;
			var m610 = transform._03;
			var m710 = transform._13;
			var m810 = transform._33;
			var m311 = transform._01;
			var m411 = transform._11;
			var m511 = transform._31;
			var m611 = transform._02;
			var m711 = transform._12;
			var m811 = transform._32;
			var m312 = transform._02;
			var m412 = transform._12;
			var m512 = transform._22;
			var m612 = transform._03;
			var m712 = transform._13;
			var m812 = transform._23;
			var m313 = transform._02;
			var m413 = transform._12;
			var m513 = transform._22;
			var m613 = transform._03;
			var m713 = transform._13;
			var m813 = transform._23;
			var m314 = transform._01;
			var m414 = transform._11;
			var m514 = transform._21;
			var m614 = transform._03;
			var m714 = transform._13;
			var m814 = transform._23;
			var m315 = transform._01;
			var m415 = transform._11;
			var m515 = transform._21;
			var m615 = transform._02;
			var m715 = transform._12;
			var m815 = transform._22;
			var invdet = 1.0 / det;
			var rotation__00 = c00 * invdet;
			var rotation__10 = -c01 * invdet;
			var rotation__20 = c02 * invdet;
			var rotation__30 = -c03 * invdet;
			var rotation__01 = -(transform._01 * (m44 * m84 - m54 * m74) - transform._21 * (m34 * m84 - m54 * m64) + transform._31 * (m34 * m74 - m44 * m64)) * invdet;
			var rotation__11 = (transform._00 * (m45 * m85 - m55 * m75) - transform._20 * (m35 * m85 - m55 * m65) + transform._30 * (m35 * m75 - m45 * m65)) * invdet;
			var rotation__21 = -(transform._00 * (m46 * m86 - m56 * m76) - transform._20 * (m36 * m86 - m56 * m66) + transform._30 * (m36 * m76 - m46 * m66)) * invdet;
			var rotation__31 = (transform._00 * (m47 * m87 - m57 * m77) - transform._20 * (m37 * m87 - m57 * m67) + transform._30 * (m37 * m77 - m47 * m67)) * invdet;
			var rotation__02 = (transform._01 * (m48 * m88 - m58 * m78) - transform._11 * (m38 * m88 - m58 * m68) + transform._31 * (m38 * m78 - m48 * m68)) * invdet;
			var rotation__12 = -(transform._00 * (m49 * m89 - m59 * m79) - transform._10 * (m39 * m89 - m59 * m69) + transform._30 * (m39 * m79 - m49 * m69)) * invdet;
			var rotation__22 = (transform._00 * (m410 * m810 - m510 * m710) - transform._10 * (m310 * m810 - m510 * m610) + transform._30 * (m310 * m710 - m410 * m610)) * invdet;
			var rotation__32 = -(transform._00 * (m411 * m811 - m511 * m711) - transform._10 * (m311 * m811 - m511 * m611) + transform._30 * (m311 * m711 - m411 * m611)) * invdet;
			var rotation__03 = -(transform._01 * (m412 * m812 - m512 * m712) - transform._11 * (m312 * m812 - m512 * m612) + transform._21 * (m312 * m712 - m412 * m612)) * invdet;
			var rotation__13 = (transform._00 * (m413 * m813 - m513 * m713) - transform._10 * (m313 * m813 - m513 * m613) + transform._20 * (m313 * m713 - m413 * m613)) * invdet;
			var rotation__23 = -(transform._00 * (m414 * m814 - m514 * m714) - transform._10 * (m314 * m814 - m514 * m614) + transform._20 * (m314 * m714 - m414 * m614)) * invdet;
			var rotation__33 = (transform._00 * (m415 * m815 - m515 * m715) - transform._10 * (m315 * m815 - m515 * m615) + transform._20 * (m315 * m715 - m415 * m615)) * invdet;
			rotation__32 = 0;
			rotation__31 = rotation__32;
			rotation__30 = rotation__31;
			var _011 = rotation__01 * model__00 + rotation__11 * model__01 + rotation__21 * model__02 + rotation__31 * model__03;
			var _111 = rotation__01 * model__10 + rotation__11 * model__11 + rotation__21 * model__12 + rotation__31 * model__13;
			var _211 = rotation__01 * model__20 + rotation__11 * model__21 + rotation__21 * model__22 + rotation__31 * model__23;
			var _31 = rotation__01 * model__30 + rotation__11 * model__31 + rotation__21 * model__32 + rotation__31 * model__33;
			var _021 = rotation__02 * model__00 + rotation__12 * model__01 + rotation__22 * model__02 + rotation__32 * model__03;
			var _121 = rotation__02 * model__10 + rotation__12 * model__11 + rotation__22 * model__12 + rotation__32 * model__13;
			var _221 = rotation__02 * model__20 + rotation__12 * model__21 + rotation__22 * model__22 + rotation__32 * model__23;
			var _32 = rotation__02 * model__30 + rotation__12 * model__31 + rotation__22 * model__32 + rotation__32 * model__33;
			var _031 = rotation__03 * model__00 + rotation__13 * model__01 + rotation__23 * model__02 + rotation__33 * model__03;
			var _131 = rotation__03 * model__10 + rotation__13 * model__11 + rotation__23 * model__12 + rotation__33 * model__13;
			var _231 = rotation__03 * model__20 + rotation__13 * model__21 + rotation__23 * model__22 + rotation__33 * model__23;
			var _331 = rotation__03 * model__30 + rotation__13 * model__31 + rotation__23 * model__32 + rotation__33 * model__33;
			model__00 = rotation__00 * model__00 + rotation__10 * model__01 + rotation__20 * model__02 + rotation__30 * model__03;
			model__10 = rotation__00 * model__10 + rotation__10 * model__11 + rotation__20 * model__12 + rotation__30 * model__13;
			model__20 = rotation__00 * model__20 + rotation__10 * model__21 + rotation__20 * model__22 + rotation__30 * model__23;
			model__30 = rotation__00 * model__30 + rotation__10 * model__31 + rotation__20 * model__32 + rotation__30 * model__33;
			model__01 = _011;
			model__11 = _111;
			model__21 = _211;
			model__31 = _31;
			model__02 = _021;
			model__12 = _121;
			model__22 = _221;
			model__32 = _32;
			model__03 = _031;
			model__13 = _131;
			model__23 = _231;
			model__33 = _331;
		} else {
			var _00 = this.cosAng;
			var _10 = -this.sinAng;
			var _012 = this.sinAng;
			var _112 = this.cosAng;
			var _this__201 = 0;
			var _this__301 = 0;
			var _this__211 = 0;
			var _this__311 = 0;
			var _this__021 = 0;
			var _this__121 = 0;
			var _this__221 = 1;
			var _this__321 = 0;
			var _this__031 = 0;
			var _this__131 = 0;
			var _this__231 = 0;
			var _this__331 = 1;
			var _013 = _012 * model__00 + _112 * model__01 + _this__211 * model__02 + _this__311 * model__03;
			var _113 = _012 * model__10 + _112 * model__11 + _this__211 * model__12 + _this__311 * model__13;
			var _212 = _012 * model__20 + _112 * model__21 + _this__211 * model__22 + _this__311 * model__23;
			var _311 = _012 * model__30 + _112 * model__31 + _this__211 * model__32 + _this__311 * model__33;
			var _022 = _this__021 * model__00 + _this__121 * model__01 + _this__221 * model__02 + _this__321 * model__03;
			var _122 = _this__021 * model__10 + _this__121 * model__11 + _this__221 * model__12 + _this__321 * model__13;
			var _222 = _this__021 * model__20 + _this__121 * model__21 + _this__221 * model__22 + _this__321 * model__23;
			var _321 = _this__021 * model__30 + _this__121 * model__31 + _this__221 * model__32 + _this__321 * model__33;
			var _032 = _this__031 * model__00 + _this__131 * model__01 + _this__231 * model__02 + _this__331 * model__03;
			var _132 = _this__031 * model__10 + _this__131 * model__11 + _this__231 * model__12 + _this__331 * model__13;
			var _232 = _this__031 * model__20 + _this__131 * model__21 + _this__231 * model__22 + _this__331 * model__23;
			var _332 = _this__031 * model__30 + _this__131 * model__31 + _this__231 * model__32 + _this__331 * model__33;
			model__00 = _00 * model__00 + _10 * model__01 + _this__201 * model__02 + _this__301 * model__03;
			model__10 = _00 * model__10 + _10 * model__11 + _this__201 * model__12 + _this__301 * model__13;
			model__20 = _00 * model__20 + _10 * model__21 + _this__201 * model__22 + _this__301 * model__23;
			model__30 = _00 * model__30 + _10 * model__31 + _this__201 * model__32 + _this__301 * model__33;
			model__01 = _013;
			model__11 = _113;
			model__21 = _212;
			model__31 = _311;
			model__02 = _022;
			model__12 = _122;
			model__22 = _222;
			model__32 = _321;
			model__03 = _032;
			model__13 = _132;
			model__23 = _232;
			model__33 = _332;
		}
		var x2 = this.x + this.pivotX + this.offsetX;
		var y2 = this.y + this.pivotY + this.offsetY;
		var z = this.z;
		var _this__00 = 1;
		var _this__101 = 0;
		var _this__202 = 0;
		var _this__011 = 0;
		var _this__11 = 1;
		var _this__212 = 0;
		var _this__022 = 0;
		var _this__122 = 0;
		var _this__222 = 1;
		var _this__032 = 0;
		var _this__132 = 0;
		var _this__232 = 0;
		var _this__332 = 1;
		var _014 = _this__011 * model__00 + _this__11 * model__01 + _this__212 * model__02 + y2 * model__03;
		var _114 = _this__011 * model__10 + _this__11 * model__11 + _this__212 * model__12 + y2 * model__13;
		var _213 = _this__011 * model__20 + _this__11 * model__21 + _this__212 * model__22 + y2 * model__23;
		var _312 = _this__011 * model__30 + _this__11 * model__31 + _this__212 * model__32 + y2 * model__33;
		var _023 = _this__022 * model__00 + _this__122 * model__01 + _this__222 * model__02 + z * model__03;
		var _123 = _this__022 * model__10 + _this__122 * model__11 + _this__222 * model__12 + z * model__13;
		var _223 = _this__022 * model__20 + _this__122 * model__21 + _this__222 * model__22 + z * model__23;
		var _322 = _this__022 * model__30 + _this__122 * model__31 + _this__222 * model__32 + z * model__33;
		var _033 = _this__032 * model__00 + _this__132 * model__01 + _this__232 * model__02 + _this__332 * model__03;
		var _133 = _this__032 * model__10 + _this__132 * model__11 + _this__232 * model__12 + _this__332 * model__13;
		var _233 = _this__032 * model__20 + _this__132 * model__21 + _this__232 * model__22 + _this__332 * model__23;
		var _333 = _this__032 * model__30 + _this__132 * model__31 + _this__232 * model__32 + _this__332 * model__33;
		model__00 = _this__00 * model__00 + _this__101 * model__01 + _this__202 * model__02 + x2 * model__03;
		model__10 = _this__00 * model__10 + _this__101 * model__11 + _this__202 * model__12 + x2 * model__13;
		model__20 = _this__00 * model__20 + _this__101 * model__21 + _this__202 * model__22 + x2 * model__23;
		model__30 = _this__00 * model__30 + _this__101 * model__31 + _this__202 * model__32 + x2 * model__33;
		model__01 = _014;
		model__11 = _114;
		model__21 = _213;
		model__31 = _312;
		model__02 = _023;
		model__12 = _123;
		model__22 = _223;
		model__32 = _322;
		model__03 = _033;
		model__13 = _133;
		model__23 = _233;
		model__33 = _333;
		var _this = this.transform;
		var _101 = transform._00 * model__10 + transform._10 * model__11 + transform._20 * model__12 + transform._30 * model__13;
		var _20 = transform._00 * model__20 + transform._10 * model__21 + transform._20 * model__22 + transform._30 * model__23;
		var _30 = transform._00 * model__30 + transform._10 * model__31 + transform._20 * model__32 + transform._30 * model__33;
		var _115 = transform._01 * model__10 + transform._11 * model__11 + transform._21 * model__12 + transform._31 * model__13;
		var _214 = transform._01 * model__20 + transform._11 * model__21 + transform._21 * model__22 + transform._31 * model__23;
		var _313 = transform._01 * model__30 + transform._11 * model__31 + transform._21 * model__32 + transform._31 * model__33;
		var _124 = transform._02 * model__10 + transform._12 * model__11 + transform._22 * model__12 + transform._32 * model__13;
		var _224 = transform._02 * model__20 + transform._12 * model__21 + transform._22 * model__22 + transform._32 * model__23;
		var _323 = transform._02 * model__30 + transform._12 * model__31 + transform._22 * model__32 + transform._32 * model__33;
		var _134 = transform._03 * model__10 + transform._13 * model__11 + transform._23 * model__12 + transform._33 * model__13;
		var _234 = transform._03 * model__20 + transform._13 * model__21 + transform._23 * model__22 + transform._33 * model__23;
		var _334 = transform._03 * model__30 + transform._13 * model__31 + transform._23 * model__32 + transform._33 * model__33;
		_this._00 = transform._00 * model__00 + transform._10 * model__01 + transform._20 * model__02 + transform._30 * model__03;
		_this._10 = _101;
		_this._20 = _20;
		_this._30 = _30;
		_this._01 = transform._01 * model__00 + transform._11 * model__01 + transform._21 * model__02 + transform._31 * model__03;
		_this._11 = _115;
		_this._21 = _214;
		_this._31 = _313;
		_this._02 = transform._02 * model__00 + transform._12 * model__01 + transform._22 * model__02 + transform._32 * model__03;
		_this._12 = _124;
		_this._22 = _224;
		_this._32 = _323;
		_this._03 = transform._03 * model__00 + transform._13 * model__01 + transform._23 * model__02 + transform._33 * model__03;
		_this._13 = _134;
		_this._23 = _234;
		_this._33 = _334;
		this.transform._30 *= this.paralaxX;
		this.transform._31 *= this.paralaxY;
		if(!this.visible) {
			return;
		}
		var oldMulR = paintMode.mulR;
		var oldMulG = paintMode.mulG;
		var oldMulB = paintMode.mulB;
		var oldMulA = paintMode.mulA;
		paintMode.mulR *= this.mulR;
		paintMode.mulG *= this.mulG;
		paintMode.mulB *= this.mulB;
		paintMode.mulA *= this.mulA;
		paintMode.colorTransform = true;
		if(this.drawArea != null) {
			paintMode.render();
			var _this1 = this.scaleArea;
			var minMax = this.drawArea;
			var _this2 = _this1.max;
			var x3 = minMax.max.x;
			var y3 = minMax.max.y;
			if(y3 == null) {
				y3 = 0;
			}
			if(x3 == null) {
				x3 = 0;
			}
			_this2.x = x3;
			_this2.y = y3;
			var _this3 = _this1.min;
			var x4 = minMax.min.x;
			var y4 = minMax.min.y;
			if(y4 == null) {
				y4 = 0;
			}
			if(x4 == null) {
				x4 = 0;
			}
			_this3.x = x4;
			_this3.y = y4;
			_this1.minZ = -869.1168;
			_this1.maxZ = -869.1168;
			_this1.isEmpty = _this1.width() < 0 || _this1.height() < 0;
			var _this4 = this.scaleArea;
			var scaleX = com_gEngine_GEngine.get_i().scaleWidth;
			var scaleY = com_gEngine_GEngine.get_i().scaleHeigth;
			_this4.min.x *= scaleX;
			_this4.min.y *= scaleY;
			_this4.max.x *= scaleX;
			_this4.max.y *= scaleY;
			paintMode.adjustRenderArea(this.scaleArea);
		}
		if(this.filter != null) {
			this.filter.filterStart(this,paintMode,transform);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) _g1[_g++].render(paintMode,this.transform);
		if(this.filter != null) {
			this.filter.filterEnd(paintMode);
		}
		if(this.drawArea != null) {
			paintMode.render();
			paintMode.resetRenderArea();
		}
		paintMode.mulR = oldMulR;
		paintMode.mulG = oldMulG;
		paintMode.mulB = oldMulB;
		paintMode.mulA = oldMulA;
	}
	,getDrawArea: function(value,transform) {
		var x = -this.pivotX;
		var y = -this.pivotY;
		var model__00 = 1;
		var model__10 = 0;
		var model__20 = 0;
		var model__30 = x;
		var model__01 = 0;
		var model__11 = 1;
		var model__21 = 0;
		var model__31 = y;
		var model__02 = 0;
		var model__12 = 0;
		var model__22 = 1;
		var model__32 = 0;
		var model__03 = 0;
		var model__13 = 0;
		var model__23 = 0;
		var model__33 = 1;
		var x1 = this.scaleX;
		var y1 = this.scaleY;
		var _this__10 = 0;
		var _this__20 = 0;
		var _this__30 = 0;
		var _this__01 = 0;
		var _this__21 = 0;
		var _this__31 = 0;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _this__32 = 0;
		var _this__03 = 0;
		var _this__13 = 0;
		var _this__23 = 0;
		var _this__33 = 1;
		var _01 = _this__01 * model__00 + y1 * model__01 + _this__21 * model__02 + _this__31 * model__03;
		var _11 = _this__01 * model__10 + y1 * model__11 + _this__21 * model__12 + _this__31 * model__13;
		var _21 = _this__01 * model__20 + y1 * model__21 + _this__21 * model__22 + _this__31 * model__23;
		var _02 = _this__02 * model__00 + _this__12 * model__01 + _this__22 * model__02 + _this__32 * model__03;
		var _12 = _this__02 * model__10 + _this__12 * model__11 + _this__22 * model__12 + _this__32 * model__13;
		var _22 = _this__02 * model__20 + _this__12 * model__21 + _this__22 * model__22 + _this__32 * model__23;
		var _03 = _this__03 * model__00 + _this__13 * model__01 + _this__23 * model__02 + _this__33 * model__03;
		var _13 = _this__03 * model__10 + _this__13 * model__11 + _this__23 * model__12 + _this__33 * model__13;
		var _23 = _this__03 * model__20 + _this__13 * model__21 + _this__23 * model__22 + _this__33 * model__23;
		var _33 = _this__03 * x + _this__13 * y + _this__23 * model__32 + _this__33 * model__33;
		model__00 = x1 * model__00 + _this__10 * model__01 + _this__20 * model__02 + _this__30 * model__03;
		model__10 = x1 * model__10 + _this__10 * model__11 + _this__20 * model__12 + _this__30 * model__13;
		model__20 = x1 * model__20 + _this__10 * model__21 + _this__20 * model__22 + _this__30 * model__23;
		model__30 = x1 * x + _this__10 * y + _this__20 * model__32 + _this__30 * model__33;
		model__01 = _01;
		model__11 = _11;
		model__21 = _21;
		model__31 = _this__01 * x + y1 * y + _this__21 * model__32 + _this__31 * model__33;
		model__02 = _02;
		model__12 = _12;
		model__22 = _22;
		model__32 = _this__02 * x + _this__12 * y + _this__22 * model__32 + _this__32 * model__33;
		model__03 = _03;
		model__13 = _13;
		model__23 = _23;
		model__33 = _33;
		if(this.billboard) {
			var m3 = transform._12;
			var m4 = transform._22;
			var m5 = transform._32;
			var m6 = transform._13;
			var m7 = transform._23;
			var m8 = transform._33;
			var c00 = transform._11 * (m4 * m8 - m5 * m7) - transform._21 * (m3 * m8 - m5 * m6) + transform._31 * (m3 * m7 - m4 * m6);
			var m31 = transform._12;
			var m41 = transform._22;
			var m51 = transform._32;
			var m61 = transform._13;
			var m71 = transform._23;
			var m81 = transform._33;
			var c01 = transform._10 * (m41 * m81 - m51 * m71) - transform._20 * (m31 * m81 - m51 * m61) + transform._30 * (m31 * m71 - m41 * m61);
			var m32 = transform._11;
			var m42 = transform._21;
			var m52 = transform._31;
			var m62 = transform._13;
			var m72 = transform._23;
			var m82 = transform._33;
			var c02 = transform._10 * (m42 * m82 - m52 * m72) - transform._20 * (m32 * m82 - m52 * m62) + transform._30 * (m32 * m72 - m42 * m62);
			var m33 = transform._11;
			var m43 = transform._21;
			var m53 = transform._31;
			var m63 = transform._12;
			var m73 = transform._22;
			var m83 = transform._32;
			var c03 = transform._10 * (m43 * m83 - m53 * m73) - transform._20 * (m33 * m83 - m53 * m63) + transform._30 * (m33 * m73 - m43 * m63);
			var det = transform._00 * c00 - transform._01 * c01 + transform._02 * c02 - transform._03 * c03;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m34 = transform._02;
			var m44 = transform._22;
			var m54 = transform._32;
			var m64 = transform._03;
			var m74 = transform._23;
			var m84 = transform._33;
			var m35 = transform._02;
			var m45 = transform._22;
			var m55 = transform._32;
			var m65 = transform._03;
			var m75 = transform._23;
			var m85 = transform._33;
			var m36 = transform._01;
			var m46 = transform._21;
			var m56 = transform._31;
			var m66 = transform._03;
			var m76 = transform._23;
			var m86 = transform._33;
			var m37 = transform._01;
			var m47 = transform._21;
			var m57 = transform._31;
			var m67 = transform._02;
			var m77 = transform._22;
			var m87 = transform._32;
			var m38 = transform._02;
			var m48 = transform._12;
			var m58 = transform._32;
			var m68 = transform._03;
			var m78 = transform._13;
			var m88 = transform._33;
			var m39 = transform._02;
			var m49 = transform._12;
			var m59 = transform._32;
			var m69 = transform._03;
			var m79 = transform._13;
			var m89 = transform._33;
			var m310 = transform._01;
			var m410 = transform._11;
			var m510 = transform._31;
			var m610 = transform._03;
			var m710 = transform._13;
			var m810 = transform._33;
			var m311 = transform._01;
			var m411 = transform._11;
			var m511 = transform._31;
			var m611 = transform._02;
			var m711 = transform._12;
			var m811 = transform._32;
			var m312 = transform._02;
			var m412 = transform._12;
			var m512 = transform._22;
			var m612 = transform._03;
			var m712 = transform._13;
			var m812 = transform._23;
			var m313 = transform._02;
			var m413 = transform._12;
			var m513 = transform._22;
			var m613 = transform._03;
			var m713 = transform._13;
			var m813 = transform._23;
			var m314 = transform._01;
			var m414 = transform._11;
			var m514 = transform._21;
			var m614 = transform._03;
			var m714 = transform._13;
			var m814 = transform._23;
			var m315 = transform._01;
			var m415 = transform._11;
			var m515 = transform._21;
			var m615 = transform._02;
			var m715 = transform._12;
			var m815 = transform._22;
			var invdet = 1.0 / det;
			var rotation__00 = c00 * invdet;
			var rotation__10 = -c01 * invdet;
			var rotation__20 = c02 * invdet;
			var rotation__30 = -c03 * invdet;
			var rotation__01 = -(transform._01 * (m44 * m84 - m54 * m74) - transform._21 * (m34 * m84 - m54 * m64) + transform._31 * (m34 * m74 - m44 * m64)) * invdet;
			var rotation__11 = (transform._00 * (m45 * m85 - m55 * m75) - transform._20 * (m35 * m85 - m55 * m65) + transform._30 * (m35 * m75 - m45 * m65)) * invdet;
			var rotation__21 = -(transform._00 * (m46 * m86 - m56 * m76) - transform._20 * (m36 * m86 - m56 * m66) + transform._30 * (m36 * m76 - m46 * m66)) * invdet;
			var rotation__31 = (transform._00 * (m47 * m87 - m57 * m77) - transform._20 * (m37 * m87 - m57 * m67) + transform._30 * (m37 * m77 - m47 * m67)) * invdet;
			var rotation__02 = (transform._01 * (m48 * m88 - m58 * m78) - transform._11 * (m38 * m88 - m58 * m68) + transform._31 * (m38 * m78 - m48 * m68)) * invdet;
			var rotation__12 = -(transform._00 * (m49 * m89 - m59 * m79) - transform._10 * (m39 * m89 - m59 * m69) + transform._30 * (m39 * m79 - m49 * m69)) * invdet;
			var rotation__22 = (transform._00 * (m410 * m810 - m510 * m710) - transform._10 * (m310 * m810 - m510 * m610) + transform._30 * (m310 * m710 - m410 * m610)) * invdet;
			var rotation__32 = -(transform._00 * (m411 * m811 - m511 * m711) - transform._10 * (m311 * m811 - m511 * m611) + transform._30 * (m311 * m711 - m411 * m611)) * invdet;
			var rotation__03 = -(transform._01 * (m412 * m812 - m512 * m712) - transform._11 * (m312 * m812 - m512 * m612) + transform._21 * (m312 * m712 - m412 * m612)) * invdet;
			var rotation__13 = (transform._00 * (m413 * m813 - m513 * m713) - transform._10 * (m313 * m813 - m513 * m613) + transform._20 * (m313 * m713 - m413 * m613)) * invdet;
			var rotation__23 = -(transform._00 * (m414 * m814 - m514 * m714) - transform._10 * (m314 * m814 - m514 * m614) + transform._20 * (m314 * m714 - m414 * m614)) * invdet;
			var rotation__33 = (transform._00 * (m415 * m815 - m515 * m715) - transform._10 * (m315 * m815 - m515 * m615) + transform._20 * (m315 * m715 - m415 * m615)) * invdet;
			rotation__32 = 0;
			rotation__31 = rotation__32;
			rotation__30 = rotation__31;
			var _011 = rotation__01 * model__00 + rotation__11 * model__01 + rotation__21 * model__02 + rotation__31 * model__03;
			var _111 = rotation__01 * model__10 + rotation__11 * model__11 + rotation__21 * model__12 + rotation__31 * model__13;
			var _211 = rotation__01 * model__20 + rotation__11 * model__21 + rotation__21 * model__22 + rotation__31 * model__23;
			var _31 = rotation__01 * model__30 + rotation__11 * model__31 + rotation__21 * model__32 + rotation__31 * model__33;
			var _021 = rotation__02 * model__00 + rotation__12 * model__01 + rotation__22 * model__02 + rotation__32 * model__03;
			var _121 = rotation__02 * model__10 + rotation__12 * model__11 + rotation__22 * model__12 + rotation__32 * model__13;
			var _221 = rotation__02 * model__20 + rotation__12 * model__21 + rotation__22 * model__22 + rotation__32 * model__23;
			var _32 = rotation__02 * model__30 + rotation__12 * model__31 + rotation__22 * model__32 + rotation__32 * model__33;
			var _031 = rotation__03 * model__00 + rotation__13 * model__01 + rotation__23 * model__02 + rotation__33 * model__03;
			var _131 = rotation__03 * model__10 + rotation__13 * model__11 + rotation__23 * model__12 + rotation__33 * model__13;
			var _231 = rotation__03 * model__20 + rotation__13 * model__21 + rotation__23 * model__22 + rotation__33 * model__23;
			var _331 = rotation__03 * model__30 + rotation__13 * model__31 + rotation__23 * model__32 + rotation__33 * model__33;
			model__00 = rotation__00 * model__00 + rotation__10 * model__01 + rotation__20 * model__02 + rotation__30 * model__03;
			model__10 = rotation__00 * model__10 + rotation__10 * model__11 + rotation__20 * model__12 + rotation__30 * model__13;
			model__20 = rotation__00 * model__20 + rotation__10 * model__21 + rotation__20 * model__22 + rotation__30 * model__23;
			model__30 = rotation__00 * model__30 + rotation__10 * model__31 + rotation__20 * model__32 + rotation__30 * model__33;
			model__01 = _011;
			model__11 = _111;
			model__21 = _211;
			model__31 = _31;
			model__02 = _021;
			model__12 = _121;
			model__22 = _221;
			model__32 = _32;
			model__03 = _031;
			model__13 = _131;
			model__23 = _231;
			model__33 = _331;
		} else {
			var _00 = this.cosAng;
			var _10 = -this.sinAng;
			var _012 = this.sinAng;
			var _112 = this.cosAng;
			var _this__201 = 0;
			var _this__301 = 0;
			var _this__211 = 0;
			var _this__311 = 0;
			var _this__021 = 0;
			var _this__121 = 0;
			var _this__221 = 1;
			var _this__321 = 0;
			var _this__031 = 0;
			var _this__131 = 0;
			var _this__231 = 0;
			var _this__331 = 1;
			var _013 = _012 * model__00 + _112 * model__01 + _this__211 * model__02 + _this__311 * model__03;
			var _113 = _012 * model__10 + _112 * model__11 + _this__211 * model__12 + _this__311 * model__13;
			var _212 = _012 * model__20 + _112 * model__21 + _this__211 * model__22 + _this__311 * model__23;
			var _311 = _012 * model__30 + _112 * model__31 + _this__211 * model__32 + _this__311 * model__33;
			var _022 = _this__021 * model__00 + _this__121 * model__01 + _this__221 * model__02 + _this__321 * model__03;
			var _122 = _this__021 * model__10 + _this__121 * model__11 + _this__221 * model__12 + _this__321 * model__13;
			var _222 = _this__021 * model__20 + _this__121 * model__21 + _this__221 * model__22 + _this__321 * model__23;
			var _321 = _this__021 * model__30 + _this__121 * model__31 + _this__221 * model__32 + _this__321 * model__33;
			var _032 = _this__031 * model__00 + _this__131 * model__01 + _this__231 * model__02 + _this__331 * model__03;
			var _132 = _this__031 * model__10 + _this__131 * model__11 + _this__231 * model__12 + _this__331 * model__13;
			var _232 = _this__031 * model__20 + _this__131 * model__21 + _this__231 * model__22 + _this__331 * model__23;
			var _332 = _this__031 * model__30 + _this__131 * model__31 + _this__231 * model__32 + _this__331 * model__33;
			model__00 = _00 * model__00 + _10 * model__01 + _this__201 * model__02 + _this__301 * model__03;
			model__10 = _00 * model__10 + _10 * model__11 + _this__201 * model__12 + _this__301 * model__13;
			model__20 = _00 * model__20 + _10 * model__21 + _this__201 * model__22 + _this__301 * model__23;
			model__30 = _00 * model__30 + _10 * model__31 + _this__201 * model__32 + _this__301 * model__33;
			model__01 = _013;
			model__11 = _113;
			model__21 = _212;
			model__31 = _311;
			model__02 = _022;
			model__12 = _122;
			model__22 = _222;
			model__32 = _321;
			model__03 = _032;
			model__13 = _132;
			model__23 = _232;
			model__33 = _332;
		}
		var x2 = this.x + this.pivotX + this.offsetX;
		var y2 = this.y + this.pivotY + this.offsetY;
		var z = this.z;
		var _this__00 = 1;
		var _this__101 = 0;
		var _this__202 = 0;
		var _this__011 = 0;
		var _this__11 = 1;
		var _this__212 = 0;
		var _this__022 = 0;
		var _this__122 = 0;
		var _this__222 = 1;
		var _this__032 = 0;
		var _this__132 = 0;
		var _this__232 = 0;
		var _this__332 = 1;
		var _014 = _this__011 * model__00 + _this__11 * model__01 + _this__212 * model__02 + y2 * model__03;
		var _114 = _this__011 * model__10 + _this__11 * model__11 + _this__212 * model__12 + y2 * model__13;
		var _213 = _this__011 * model__20 + _this__11 * model__21 + _this__212 * model__22 + y2 * model__23;
		var _312 = _this__011 * model__30 + _this__11 * model__31 + _this__212 * model__32 + y2 * model__33;
		var _023 = _this__022 * model__00 + _this__122 * model__01 + _this__222 * model__02 + z * model__03;
		var _123 = _this__022 * model__10 + _this__122 * model__11 + _this__222 * model__12 + z * model__13;
		var _223 = _this__022 * model__20 + _this__122 * model__21 + _this__222 * model__22 + z * model__23;
		var _322 = _this__022 * model__30 + _this__122 * model__31 + _this__222 * model__32 + z * model__33;
		var _033 = _this__032 * model__00 + _this__132 * model__01 + _this__232 * model__02 + _this__332 * model__03;
		var _133 = _this__032 * model__10 + _this__132 * model__11 + _this__232 * model__12 + _this__332 * model__13;
		var _233 = _this__032 * model__20 + _this__132 * model__21 + _this__232 * model__22 + _this__332 * model__23;
		var _333 = _this__032 * model__30 + _this__132 * model__31 + _this__232 * model__32 + _this__332 * model__33;
		model__00 = _this__00 * model__00 + _this__101 * model__01 + _this__202 * model__02 + x2 * model__03;
		model__10 = _this__00 * model__10 + _this__101 * model__11 + _this__202 * model__12 + x2 * model__13;
		model__20 = _this__00 * model__20 + _this__101 * model__21 + _this__202 * model__22 + x2 * model__23;
		model__30 = _this__00 * model__30 + _this__101 * model__31 + _this__202 * model__32 + x2 * model__33;
		model__01 = _014;
		model__11 = _114;
		model__21 = _213;
		model__31 = _312;
		model__02 = _023;
		model__12 = _123;
		model__22 = _223;
		model__32 = _322;
		model__03 = _033;
		model__13 = _133;
		model__23 = _233;
		model__33 = _333;
		var _this = this.transform;
		var _101 = transform._00 * model__10 + transform._10 * model__11 + transform._20 * model__12 + transform._30 * model__13;
		var _20 = transform._00 * model__20 + transform._10 * model__21 + transform._20 * model__22 + transform._30 * model__23;
		var _30 = transform._00 * model__30 + transform._10 * model__31 + transform._20 * model__32 + transform._30 * model__33;
		var _115 = transform._01 * model__10 + transform._11 * model__11 + transform._21 * model__12 + transform._31 * model__13;
		var _214 = transform._01 * model__20 + transform._11 * model__21 + transform._21 * model__22 + transform._31 * model__23;
		var _313 = transform._01 * model__30 + transform._11 * model__31 + transform._21 * model__32 + transform._31 * model__33;
		var _124 = transform._02 * model__10 + transform._12 * model__11 + transform._22 * model__12 + transform._32 * model__13;
		var _224 = transform._02 * model__20 + transform._12 * model__21 + transform._22 * model__22 + transform._32 * model__23;
		var _323 = transform._02 * model__30 + transform._12 * model__31 + transform._22 * model__32 + transform._32 * model__33;
		var _134 = transform._03 * model__10 + transform._13 * model__11 + transform._23 * model__12 + transform._33 * model__13;
		var _234 = transform._03 * model__20 + transform._13 * model__21 + transform._23 * model__22 + transform._33 * model__23;
		var _334 = transform._03 * model__30 + transform._13 * model__31 + transform._23 * model__32 + transform._33 * model__33;
		_this._00 = transform._00 * model__00 + transform._10 * model__01 + transform._20 * model__02 + transform._30 * model__03;
		_this._10 = _101;
		_this._20 = _20;
		_this._30 = _30;
		_this._01 = transform._01 * model__00 + transform._11 * model__01 + transform._21 * model__02 + transform._31 * model__03;
		_this._11 = _115;
		_this._21 = _214;
		_this._31 = _313;
		_this._02 = transform._02 * model__00 + transform._12 * model__01 + transform._22 * model__02 + transform._32 * model__03;
		_this._12 = _124;
		_this._22 = _224;
		_this._32 = _323;
		_this._03 = transform._03 * model__00 + transform._13 * model__01 + transform._23 * model__02 + transform._33 * model__03;
		_this._13 = _134;
		_this._23 = _234;
		_this._33 = _334;
		this.transform._30 *= this.paralaxX;
		this.transform._31 *= this.paralaxY;
		var _this1 = this.drawAreaTemp;
		var _this2 = _this1.min;
		var x3 = Infinity;
		var y3 = Infinity;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		_this2.x = x3;
		_this2.y = y3;
		var _this3 = _this1.max;
		var x4 = -Infinity;
		var y4 = -Infinity;
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		_this3.x = x4;
		_this3.y = y4;
		_this1.minZ = Infinity;
		_this1.maxZ = -Infinity;
		_this1.isEmpty = true;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.visible) {
				child.getDrawArea(this.drawAreaTemp,this.transform);
			}
		}
		value.merge(this.drawAreaTemp);
		if(this.drawArea != null) {
			var _this4 = this.scaleArea;
			var minMax = this.drawArea;
			var _this5 = _this4.max;
			var x5 = minMax.max.x;
			var y5 = minMax.max.y;
			if(y5 == null) {
				y5 = 0;
			}
			if(x5 == null) {
				x5 = 0;
			}
			_this5.x = x5;
			_this5.y = y5;
			var _this6 = _this4.min;
			var x6 = minMax.min.x;
			var y6 = minMax.min.y;
			if(y6 == null) {
				y6 = 0;
			}
			if(x6 == null) {
				x6 = 0;
			}
			_this6.x = x6;
			_this6.y = y6;
			_this4.minZ = -869.1168;
			_this4.maxZ = -869.1168;
			_this4.isEmpty = _this4.width() < 0 || _this4.height() < 0;
			var _this7 = this.scaleArea;
			var scaleX = com_gEngine_GEngine.get_i().scaleWidth;
			var scaleY = com_gEngine_GEngine.get_i().scaleHeigth;
			_this7.min.x *= scaleX;
			_this7.min.y *= scaleY;
			_this7.max.x *= scaleX;
			_this7.max.y *= scaleY;
			value.intersection(this.scaleArea);
		}
	}
	,update: function(passedTime) {
		if(this.playing) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) _g1[_g++].update(passedTime);
		}
	}
	,addChild: function(child) {
		if(child.parent == this) {
			return;
		}
		child.parent = this;
		this.children.push(child);
	}
	,remove: function(child) {
		var counter = 0;
		child.parent = null;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			if(_g1[_g++] == child) {
				this.children.splice(counter,1);
				return;
			}
			++counter;
		}
	}
	,removeFromParent: function() {
		if(this.parent != null) {
			this.parent.remove(this);
		}
	}
	,set_rotation: function(value) {
		if(value != this.rotation) {
			this.rotation = value;
			this.sinAng = Math.sin(value);
			this.cosAng = Math.cos(value);
		}
		return this.rotation;
	}
	,__class__: com_gEngine_display_Layer
};
var com_gEngine_display_Sprite = function(name) {
	this.mipMapFilter = 0;
	this.textureFilter = 1;
	this.textureId = -1;
	this.mulBlue = 1;
	this.mulGreen = 1;
	this.mulRed = 1;
	this.addAlpha = 0;
	this.addBlue = 0;
	this.addGreen = 0;
	this.addRed = 0;
	this.colorTransform = false;
	this.alpha = 1;
	this.visible = true;
	this.offsetZ = 0;
	this.offsetY = 0;
	this.offsetX = 0;
	this.pivotY = 0;
	this.pivotX = 0;
	this.blend = 0;
	this.scaleZ = 1;
	this.scaleY = 1;
	this.scaleX = 1;
	this.z = 0;
	this.y = 0;
	this.x = 0;
	if(name != null) {
		this.animationData = com_basicDisplay_SpriteSheetDB.get_i().getData(name);
	}
	this.transform = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.paintInfo = new com_gEngine_painters_PaintInfo();
	this.timeline = new com_gEngine_helper_Timeline(0.033333333333333333,this.animationData.frames.length,this.animationData.labels);
	this.scaleX = 1;
	this.scaleY = 1;
	this.set_rotation(0);
	this.cosAng = Math.cos(this.rotation);
	this.sinAng = Math.sin(this.rotation);
	this.textureId = this.animationData.texturesID;
};
$hxClasses["com.gEngine.display.Sprite"] = com_gEngine_display_Sprite;
com_gEngine_display_Sprite.__name__ = "com.gEngine.display.Sprite";
com_gEngine_display_Sprite.__interfaces__ = [com_gEngine_display_IRotation,com_gEngine_display_IAnimation];
com_gEngine_display_Sprite.checkBatch = function(paintMode,paintInfo,count,painter) {
	if(!paintMode.canBatch(paintInfo,count,painter)) {
		paintMode.render();
		paintMode.changePainter(painter,paintInfo);
	}
};
com_gEngine_display_Sprite.prototype = {
	set_rotation: function(value) {
		if(value != this.rotation) {
			this.rotation = value;
			this.sinAng = Math.sin(value);
			this.cosAng = Math.cos(value);
		}
		return this.rotation;
	}
	,update: function(dt) {
		this.timeline.update(dt);
	}
	,render: function(paintMode,transform) {
		if(!this.visible) {
			return;
		}
		if(this.filter != null) {
			this.filter.filterStart(this,paintMode,transform);
		}
		var _this = this.transform;
		_this._00 = 1;
		_this._10 = 0;
		_this._20 = 0;
		_this._30 = 0;
		_this._01 = 0;
		_this._11 = 1;
		_this._21 = 0;
		_this._31 = 0;
		_this._02 = 0;
		_this._12 = 0;
		_this._22 = 1;
		_this._32 = 0;
		_this._03 = 0;
		_this._13 = 0;
		_this._23 = 0;
		_this._33 = 1;
		this.transform._00 = this.cosAng * this.scaleX;
		this.transform._10 = -this.sinAng * this.scaleY;
		this.transform._30 = this.x + this.pivotX;
		this.transform._01 = this.sinAng * this.scaleX;
		this.transform._11 = this.cosAng * this.scaleY;
		this.transform._31 = this.y + this.pivotY;
		this.transform._22 = this.scaleZ;
		this.transform._32 = this.z;
		if(this.billboard) {
			var m3 = transform._12;
			var m4 = transform._22;
			var m5 = transform._32;
			var m6 = transform._13;
			var m7 = transform._23;
			var m8 = transform._33;
			var c00 = transform._11 * (m4 * m8 - m5 * m7) - transform._21 * (m3 * m8 - m5 * m6) + transform._31 * (m3 * m7 - m4 * m6);
			var m31 = transform._12;
			var m41 = transform._22;
			var m51 = transform._32;
			var m61 = transform._13;
			var m71 = transform._23;
			var m81 = transform._33;
			var c01 = transform._10 * (m41 * m81 - m51 * m71) - transform._20 * (m31 * m81 - m51 * m61) + transform._30 * (m31 * m71 - m41 * m61);
			var m32 = transform._11;
			var m42 = transform._21;
			var m52 = transform._31;
			var m62 = transform._13;
			var m72 = transform._23;
			var m82 = transform._33;
			var c02 = transform._10 * (m42 * m82 - m52 * m72) - transform._20 * (m32 * m82 - m52 * m62) + transform._30 * (m32 * m72 - m42 * m62);
			var m33 = transform._11;
			var m43 = transform._21;
			var m53 = transform._31;
			var m63 = transform._12;
			var m73 = transform._22;
			var m83 = transform._32;
			var c03 = transform._10 * (m43 * m83 - m53 * m73) - transform._20 * (m33 * m83 - m53 * m63) + transform._30 * (m33 * m73 - m43 * m63);
			var det = transform._00 * c00 - transform._01 * c01 + transform._02 * c02 - transform._03 * c03;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m34 = transform._02;
			var m44 = transform._22;
			var m54 = transform._32;
			var m64 = transform._03;
			var m74 = transform._23;
			var m84 = transform._33;
			var m35 = transform._02;
			var m45 = transform._22;
			var m55 = transform._32;
			var m65 = transform._03;
			var m75 = transform._23;
			var m85 = transform._33;
			var m36 = transform._01;
			var m46 = transform._21;
			var m56 = transform._31;
			var m66 = transform._03;
			var m76 = transform._23;
			var m86 = transform._33;
			var m37 = transform._01;
			var m47 = transform._21;
			var m57 = transform._31;
			var m67 = transform._02;
			var m77 = transform._22;
			var m87 = transform._32;
			var m38 = transform._02;
			var m48 = transform._12;
			var m58 = transform._32;
			var m68 = transform._03;
			var m78 = transform._13;
			var m88 = transform._33;
			var m39 = transform._02;
			var m49 = transform._12;
			var m59 = transform._32;
			var m69 = transform._03;
			var m79 = transform._13;
			var m89 = transform._33;
			var m310 = transform._01;
			var m410 = transform._11;
			var m510 = transform._31;
			var m610 = transform._03;
			var m710 = transform._13;
			var m810 = transform._33;
			var m311 = transform._01;
			var m411 = transform._11;
			var m511 = transform._31;
			var m611 = transform._02;
			var m711 = transform._12;
			var m811 = transform._32;
			var m312 = transform._02;
			var m412 = transform._12;
			var m512 = transform._22;
			var m612 = transform._03;
			var m712 = transform._13;
			var m812 = transform._23;
			var m313 = transform._02;
			var m413 = transform._12;
			var m513 = transform._22;
			var m613 = transform._03;
			var m713 = transform._13;
			var m813 = transform._23;
			var m314 = transform._01;
			var m414 = transform._11;
			var m514 = transform._21;
			var m614 = transform._03;
			var m714 = transform._13;
			var m814 = transform._23;
			var m315 = transform._01;
			var m415 = transform._11;
			var m515 = transform._21;
			var m615 = transform._02;
			var m715 = transform._12;
			var m815 = transform._22;
			var invdet = 1.0 / det;
			var rotation__00 = c00 * invdet;
			var rotation__10 = -c01 * invdet;
			var rotation__20 = c02 * invdet;
			var rotation__30 = -c03 * invdet;
			var rotation__01 = -(transform._01 * (m44 * m84 - m54 * m74) - transform._21 * (m34 * m84 - m54 * m64) + transform._31 * (m34 * m74 - m44 * m64)) * invdet;
			var rotation__11 = (transform._00 * (m45 * m85 - m55 * m75) - transform._20 * (m35 * m85 - m55 * m65) + transform._30 * (m35 * m75 - m45 * m65)) * invdet;
			var rotation__21 = -(transform._00 * (m46 * m86 - m56 * m76) - transform._20 * (m36 * m86 - m56 * m66) + transform._30 * (m36 * m76 - m46 * m66)) * invdet;
			var rotation__31 = (transform._00 * (m47 * m87 - m57 * m77) - transform._20 * (m37 * m87 - m57 * m67) + transform._30 * (m37 * m77 - m47 * m67)) * invdet;
			var rotation__02 = (transform._01 * (m48 * m88 - m58 * m78) - transform._11 * (m38 * m88 - m58 * m68) + transform._31 * (m38 * m78 - m48 * m68)) * invdet;
			var rotation__12 = -(transform._00 * (m49 * m89 - m59 * m79) - transform._10 * (m39 * m89 - m59 * m69) + transform._30 * (m39 * m79 - m49 * m69)) * invdet;
			var rotation__22 = (transform._00 * (m410 * m810 - m510 * m710) - transform._10 * (m310 * m810 - m510 * m610) + transform._30 * (m310 * m710 - m410 * m610)) * invdet;
			var rotation__32 = -(transform._00 * (m411 * m811 - m511 * m711) - transform._10 * (m311 * m811 - m511 * m611) + transform._30 * (m311 * m711 - m411 * m611)) * invdet;
			var rotation__03 = -(transform._01 * (m412 * m812 - m512 * m712) - transform._11 * (m312 * m812 - m512 * m612) + transform._21 * (m312 * m712 - m412 * m612)) * invdet;
			var rotation__13 = (transform._00 * (m413 * m813 - m513 * m713) - transform._10 * (m313 * m813 - m513 * m613) + transform._20 * (m313 * m713 - m413 * m613)) * invdet;
			var rotation__23 = -(transform._00 * (m414 * m814 - m514 * m714) - transform._10 * (m314 * m814 - m514 * m614) + transform._20 * (m314 * m714 - m414 * m614)) * invdet;
			var rotation__33 = (transform._00 * (m415 * m815 - m515 * m715) - transform._10 * (m315 * m815 - m515 * m615) + transform._20 * (m315 * m715 - m415 * m615)) * invdet;
			rotation__32 = 0;
			rotation__31 = rotation__32;
			rotation__30 = rotation__31;
			var _this1 = this.transform;
			var _this2 = this.transform;
			var _10 = _this2._00 * rotation__10 + _this2._10 * rotation__11 + _this2._20 * rotation__12 + _this2._30 * rotation__13;
			var _20 = _this2._00 * rotation__20 + _this2._10 * rotation__21 + _this2._20 * rotation__22 + _this2._30 * rotation__23;
			var _30 = _this2._00 * rotation__30 + _this2._10 * rotation__31 + _this2._20 * rotation__32 + _this2._30 * rotation__33;
			var _11 = _this2._01 * rotation__10 + _this2._11 * rotation__11 + _this2._21 * rotation__12 + _this2._31 * rotation__13;
			var _21 = _this2._01 * rotation__20 + _this2._11 * rotation__21 + _this2._21 * rotation__22 + _this2._31 * rotation__23;
			var _31 = _this2._01 * rotation__30 + _this2._11 * rotation__31 + _this2._21 * rotation__32 + _this2._31 * rotation__33;
			var _12 = _this2._02 * rotation__10 + _this2._12 * rotation__11 + _this2._22 * rotation__12 + _this2._32 * rotation__13;
			var _22 = _this2._02 * rotation__20 + _this2._12 * rotation__21 + _this2._22 * rotation__22 + _this2._32 * rotation__23;
			var _32 = _this2._02 * rotation__30 + _this2._12 * rotation__31 + _this2._22 * rotation__32 + _this2._32 * rotation__33;
			var _13 = _this2._03 * rotation__10 + _this2._13 * rotation__11 + _this2._23 * rotation__12 + _this2._33 * rotation__13;
			var _23 = _this2._03 * rotation__20 + _this2._13 * rotation__21 + _this2._23 * rotation__22 + _this2._33 * rotation__23;
			var _33 = _this2._03 * rotation__30 + _this2._13 * rotation__31 + _this2._23 * rotation__32 + _this2._33 * rotation__33;
			_this1._00 = _this2._00 * rotation__00 + _this2._10 * rotation__01 + _this2._20 * rotation__02 + _this2._30 * rotation__03;
			_this1._10 = _10;
			_this1._20 = _20;
			_this1._30 = _30;
			_this1._01 = _this2._01 * rotation__00 + _this2._11 * rotation__01 + _this2._21 * rotation__02 + _this2._31 * rotation__03;
			_this1._11 = _11;
			_this1._21 = _21;
			_this1._31 = _31;
			_this1._02 = _this2._02 * rotation__00 + _this2._12 * rotation__01 + _this2._22 * rotation__02 + _this2._32 * rotation__03;
			_this1._12 = _12;
			_this1._22 = _22;
			_this1._32 = _32;
			_this1._03 = _this2._03 * rotation__00 + _this2._13 * rotation__01 + _this2._23 * rotation__02 + _this2._33 * rotation__03;
			_this1._13 = _13;
			_this1._23 = _23;
			_this1._33 = _33;
		}
		if(this.rotation3d != null) {
			var _this3 = this.transform;
			var _this4 = this.transform;
			var m = this.rotation3d;
			var _101 = _this4._00 * m._10 + _this4._10 * m._11 + _this4._20 * m._12 + _this4._30 * m._13;
			var _201 = _this4._00 * m._20 + _this4._10 * m._21 + _this4._20 * m._22 + _this4._30 * m._23;
			var _301 = _this4._00 * m._30 + _this4._10 * m._31 + _this4._20 * m._32 + _this4._30 * m._33;
			var _01 = _this4._01 * m._00 + _this4._11 * m._01 + _this4._21 * m._02 + _this4._31 * m._03;
			var _111 = _this4._01 * m._10 + _this4._11 * m._11 + _this4._21 * m._12 + _this4._31 * m._13;
			var _211 = _this4._01 * m._20 + _this4._11 * m._21 + _this4._21 * m._22 + _this4._31 * m._23;
			var _311 = _this4._01 * m._30 + _this4._11 * m._31 + _this4._21 * m._32 + _this4._31 * m._33;
			var _02 = _this4._02 * m._00 + _this4._12 * m._01 + _this4._22 * m._02 + _this4._32 * m._03;
			var _121 = _this4._02 * m._10 + _this4._12 * m._11 + _this4._22 * m._12 + _this4._32 * m._13;
			var _221 = _this4._02 * m._20 + _this4._12 * m._21 + _this4._22 * m._22 + _this4._32 * m._23;
			var _321 = _this4._02 * m._30 + _this4._12 * m._31 + _this4._22 * m._32 + _this4._32 * m._33;
			var _03 = _this4._03 * m._00 + _this4._13 * m._01 + _this4._23 * m._02 + _this4._33 * m._03;
			var _131 = _this4._03 * m._10 + _this4._13 * m._11 + _this4._23 * m._12 + _this4._33 * m._13;
			var _231 = _this4._03 * m._20 + _this4._13 * m._21 + _this4._23 * m._22 + _this4._33 * m._23;
			var _331 = _this4._03 * m._30 + _this4._13 * m._31 + _this4._23 * m._32 + _this4._33 * m._33;
			_this3._00 = _this4._00 * m._00 + _this4._10 * m._01 + _this4._20 * m._02 + _this4._30 * m._03;
			_this3._10 = _101;
			_this3._20 = _201;
			_this3._30 = _301;
			_this3._01 = _01;
			_this3._11 = _111;
			_this3._21 = _211;
			_this3._31 = _311;
			_this3._02 = _02;
			_this3._12 = _121;
			_this3._22 = _221;
			_this3._32 = _321;
			_this3._03 = _03;
			_this3._13 = _131;
			_this3._23 = _231;
			_this3._33 = _331;
		}
		var m1 = this.transform;
		var _00 = transform._00 * m1._00 + transform._10 * m1._01 + transform._20 * m1._02 + transform._30 * m1._03;
		var _102 = transform._00 * m1._10 + transform._10 * m1._11 + transform._20 * m1._12 + transform._30 * m1._13;
		var _202 = transform._00 * m1._20 + transform._10 * m1._21 + transform._20 * m1._22 + transform._30 * m1._23;
		var _302 = transform._00 * m1._30 + transform._10 * m1._31 + transform._20 * m1._32 + transform._30 * m1._33;
		var _011 = transform._01 * m1._00 + transform._11 * m1._01 + transform._21 * m1._02 + transform._31 * m1._03;
		var _112 = transform._01 * m1._10 + transform._11 * m1._11 + transform._21 * m1._12 + transform._31 * m1._13;
		var _212 = transform._01 * m1._20 + transform._11 * m1._21 + transform._21 * m1._22 + transform._31 * m1._23;
		var _312 = transform._01 * m1._30 + transform._11 * m1._31 + transform._21 * m1._32 + transform._31 * m1._33;
		var _021 = transform._02 * m1._00 + transform._12 * m1._01 + transform._22 * m1._02 + transform._32 * m1._03;
		var _122 = transform._02 * m1._10 + transform._12 * m1._11 + transform._22 * m1._12 + transform._32 * m1._13;
		var _222 = transform._02 * m1._20 + transform._12 * m1._21 + transform._22 * m1._22 + transform._32 * m1._23;
		var _322 = transform._02 * m1._30 + transform._12 * m1._31 + transform._22 * m1._32 + transform._32 * m1._33;
		var vertexX;
		var vertexY;
		var frame = this.animationData.frames[this.timeline.currentFrame];
		var vertexs = frame.vertexs;
		var uvs = frame.UVs;
		this.paintInfo.blend = this.blend;
		this.paintInfo.mipMapFilter = this.mipMapFilter;
		this.paintInfo.textureFilter = this.textureFilter;
		this.paintInfo.texture = this.textureId;
		var cameraScale = paintMode.camera.scale;
		if(this.colorTransform || paintMode.colorTransform || this.customPainter != null) {
			var painter = this.customPainter != null ? this.customPainter : com_gEngine_GEngine.get_i().getColorTransformPainter(this.blend);
			com_gEngine_display_Sprite.checkBatch(paintMode,this.paintInfo,frame.vertexs.length / 2 | 0,painter);
			painter = paintMode.currentPainter;
			var buffer = painter.getVertexBuffer();
			var vertexBufferCounter = painter.getVertexDataCounter();
			var redMul = this.mulRed * paintMode.mulR;
			var greenMul = this.mulGreen * paintMode.mulG;
			var blueMul = this.mulBlue * paintMode.mulB;
			var alphaMul = this.alpha * paintMode.mulA;
			var redAdd = this.addRed;
			var greenAdd = this.addGreen;
			var blueAdd = this.addBlue;
			var alphaAdd = this.addAlpha;
			var vertexIndex = 0;
			var uvIndex = 0;
			var _g = 0;
			while(_g < 4) {
				++_g;
				vertexX = vertexs[vertexIndex++] - this.pivotX;
				vertexY = vertexs[vertexIndex++] - this.pivotY;
				var x = vertexX;
				var y = vertexY;
				if(y == null) {
					y = 0;
				}
				if(x == null) {
					x = 0;
				}
				var value_x = x;
				var value_y = y;
				var value_z = 0;
				var value_w = 1;
				var pos_x = 0;
				var pos_y = 0;
				var pos_z = 0;
				pos_x = _00 * value_x + _102 * value_y + _202 * value_z + _302 * value_w;
				pos_y = _011 * value_x + _112 * value_y + _212 * value_z + _312 * value_w;
				pos_z = _021 * value_x + _122 * value_y + _222 * value_z + _322 * value_w;
				var u = uvs[uvIndex++];
				var v = uvs[uvIndex++];
				var offsetPos = vertexBufferCounter;
				buffer[offsetPos++] = pos_x + this.offsetX * cameraScale;
				buffer[offsetPos++] = pos_y + this.offsetY * cameraScale;
				buffer[offsetPos++] = pos_z + this.offsetZ;
				buffer[offsetPos++] = u;
				buffer[offsetPos++] = v;
				buffer[offsetPos++] = redMul;
				buffer[offsetPos++] = greenMul;
				buffer[offsetPos++] = blueMul;
				buffer[offsetPos++] = alphaMul;
				buffer[offsetPos++] = redAdd;
				buffer[offsetPos++] = greenAdd;
				buffer[offsetPos++] = blueAdd;
				buffer[offsetPos++] = alphaAdd;
				vertexBufferCounter += 13;
			}
			painter.setVertexDataCounter(vertexBufferCounter);
		} else if(this.alpha != 1) {
			var painter1 = com_gEngine_GEngine.get_i().getAlphaPainter(this.blend);
			com_gEngine_display_Sprite.checkBatch(paintMode,this.paintInfo,frame.vertexs.length / 2 | 0,painter1);
			painter1 = paintMode.currentPainter;
			var buffer1 = painter1.getVertexBuffer();
			var vertexBufferCounter1 = painter1.getVertexDataCounter();
			var vertexIndex1 = 0;
			var uvIndex1 = 0;
			var _g1 = 0;
			while(_g1 < 4) {
				++_g1;
				vertexX = vertexs[vertexIndex1++] - this.pivotX;
				vertexY = vertexs[vertexIndex1++] - this.pivotY;
				var x1 = vertexX;
				var y1 = vertexY;
				if(y1 == null) {
					y1 = 0;
				}
				if(x1 == null) {
					x1 = 0;
				}
				var value_x1 = x1;
				var value_y1 = y1;
				var value_z1 = 0;
				var value_w1 = 1;
				var pos_x1 = 0;
				var pos_y1 = 0;
				var pos_z1 = 0;
				pos_x1 = _00 * value_x1 + _102 * value_y1 + _202 * value_z1 + _302 * value_w1;
				pos_y1 = _011 * value_x1 + _112 * value_y1 + _212 * value_z1 + _312 * value_w1;
				pos_z1 = _021 * value_x1 + _122 * value_y1 + _222 * value_z1 + _322 * value_w1;
				buffer1[vertexBufferCounter1++] = pos_x1 + this.offsetX * cameraScale;
				buffer1[vertexBufferCounter1++] = pos_y1 + this.offsetY * cameraScale;
				buffer1[vertexBufferCounter1++] = pos_z1;
				buffer1[vertexBufferCounter1++] = uvs[uvIndex1++];
				buffer1[vertexBufferCounter1++] = uvs[uvIndex1++];
				buffer1[vertexBufferCounter1++] = this.alpha;
			}
			painter1.setVertexDataCounter(vertexBufferCounter1);
		} else {
			var painter2 = com_gEngine_GEngine.get_i().getSimplePainter(this.blend);
			com_gEngine_display_Sprite.checkBatch(paintMode,this.paintInfo,frame.vertexs.length / 2 | 0,painter2);
			painter2 = paintMode.currentPainter;
			var buffer2 = painter2.getVertexBuffer();
			var vertexBufferCounter2 = painter2.getVertexDataCounter();
			var vertexIndex2 = 0;
			var uvIndex2 = 0;
			var _g2 = 0;
			while(_g2 < 4) {
				++_g2;
				vertexX = vertexs[vertexIndex2++] - this.pivotX;
				vertexY = vertexs[vertexIndex2++] - this.pivotY;
				var x2 = vertexX;
				var y2 = vertexY;
				if(y2 == null) {
					y2 = 0;
				}
				if(x2 == null) {
					x2 = 0;
				}
				var value_x2 = x2;
				var value_y2 = y2;
				var value_z2 = 0;
				var value_w2 = 1;
				var pos_x2 = 0;
				var pos_y2 = 0;
				var pos_z2 = 0;
				pos_x2 = _00 * value_x2 + _102 * value_y2 + _202 * value_z2 + _302 * value_w2;
				pos_y2 = _011 * value_x2 + _112 * value_y2 + _212 * value_z2 + _312 * value_w2;
				pos_z2 = _021 * value_x2 + _122 * value_y2 + _222 * value_z2 + _322 * value_w2;
				buffer2[vertexBufferCounter2++] = pos_x2 + this.offsetX * cameraScale;
				buffer2[vertexBufferCounter2++] = pos_y2 + this.offsetY * cameraScale;
				buffer2[vertexBufferCounter2++] = pos_z2;
				buffer2[vertexBufferCounter2++] = uvs[uvIndex2++];
				buffer2[vertexBufferCounter2++] = uvs[uvIndex2++];
			}
			painter2.setVertexDataCounter(vertexBufferCounter2);
		}
		if(this.filter != null) {
			this.filter.filterEnd(paintMode);
		}
	}
	,removeFromParent: function() {
		if(this.parent != null) {
			this.parent.remove(this);
			this.parent = null;
		}
	}
	,colorMultiplication: function(r,g,b,a) {
		if(a == null) {
			a = 1;
		}
		if(b == null) {
			b = 1;
		}
		if(g == null) {
			g = 1;
		}
		if(r == null) {
			r = 1;
		}
		this.mulRed = r;
		this.mulGreen = g;
		this.mulBlue = b;
		this.alpha = a;
		this.colorTransform = !(this.mulRed == 1 && this.mulGreen == 1 && this.mulBlue == 1 && this.alpha == 1 && this.addRed == 0 && this.addGreen == 0 && this.addBlue == 0 && this.addAlpha == 0);
	}
	,getDrawArea: function(area,transform) {
		var _this = this.transform;
		_this._00 = 1;
		_this._10 = 0;
		_this._20 = 0;
		_this._30 = 0;
		_this._01 = 0;
		_this._11 = 1;
		_this._21 = 0;
		_this._31 = 0;
		_this._02 = 0;
		_this._12 = 0;
		_this._22 = 1;
		_this._32 = 0;
		_this._03 = 0;
		_this._13 = 0;
		_this._23 = 0;
		_this._33 = 1;
		this.transform._00 = this.cosAng * this.scaleX;
		this.transform._10 = -this.sinAng * this.scaleY;
		this.transform._30 = this.x + this.pivotX;
		this.transform._01 = this.sinAng * this.scaleX;
		this.transform._11 = this.cosAng * this.scaleY;
		this.transform._31 = this.y + this.pivotY;
		this.transform._22 = this.scaleZ;
		this.transform._32 = this.z;
		if(this.billboard) {
			var m3 = transform._12;
			var m4 = transform._22;
			var m5 = transform._32;
			var m6 = transform._13;
			var m7 = transform._23;
			var m8 = transform._33;
			var c00 = transform._11 * (m4 * m8 - m5 * m7) - transform._21 * (m3 * m8 - m5 * m6) + transform._31 * (m3 * m7 - m4 * m6);
			var m31 = transform._12;
			var m41 = transform._22;
			var m51 = transform._32;
			var m61 = transform._13;
			var m71 = transform._23;
			var m81 = transform._33;
			var c01 = transform._10 * (m41 * m81 - m51 * m71) - transform._20 * (m31 * m81 - m51 * m61) + transform._30 * (m31 * m71 - m41 * m61);
			var m32 = transform._11;
			var m42 = transform._21;
			var m52 = transform._31;
			var m62 = transform._13;
			var m72 = transform._23;
			var m82 = transform._33;
			var c02 = transform._10 * (m42 * m82 - m52 * m72) - transform._20 * (m32 * m82 - m52 * m62) + transform._30 * (m32 * m72 - m42 * m62);
			var m33 = transform._11;
			var m43 = transform._21;
			var m53 = transform._31;
			var m63 = transform._12;
			var m73 = transform._22;
			var m83 = transform._32;
			var c03 = transform._10 * (m43 * m83 - m53 * m73) - transform._20 * (m33 * m83 - m53 * m63) + transform._30 * (m33 * m73 - m43 * m63);
			var det = transform._00 * c00 - transform._01 * c01 + transform._02 * c02 - transform._03 * c03;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m34 = transform._02;
			var m44 = transform._22;
			var m54 = transform._32;
			var m64 = transform._03;
			var m74 = transform._23;
			var m84 = transform._33;
			var m35 = transform._02;
			var m45 = transform._22;
			var m55 = transform._32;
			var m65 = transform._03;
			var m75 = transform._23;
			var m85 = transform._33;
			var m36 = transform._01;
			var m46 = transform._21;
			var m56 = transform._31;
			var m66 = transform._03;
			var m76 = transform._23;
			var m86 = transform._33;
			var m37 = transform._01;
			var m47 = transform._21;
			var m57 = transform._31;
			var m67 = transform._02;
			var m77 = transform._22;
			var m87 = transform._32;
			var m38 = transform._02;
			var m48 = transform._12;
			var m58 = transform._32;
			var m68 = transform._03;
			var m78 = transform._13;
			var m88 = transform._33;
			var m39 = transform._02;
			var m49 = transform._12;
			var m59 = transform._32;
			var m69 = transform._03;
			var m79 = transform._13;
			var m89 = transform._33;
			var m310 = transform._01;
			var m410 = transform._11;
			var m510 = transform._31;
			var m610 = transform._03;
			var m710 = transform._13;
			var m810 = transform._33;
			var m311 = transform._01;
			var m411 = transform._11;
			var m511 = transform._31;
			var m611 = transform._02;
			var m711 = transform._12;
			var m811 = transform._32;
			var m312 = transform._02;
			var m412 = transform._12;
			var m512 = transform._22;
			var m612 = transform._03;
			var m712 = transform._13;
			var m812 = transform._23;
			var m313 = transform._02;
			var m413 = transform._12;
			var m513 = transform._22;
			var m613 = transform._03;
			var m713 = transform._13;
			var m813 = transform._23;
			var m314 = transform._01;
			var m414 = transform._11;
			var m514 = transform._21;
			var m614 = transform._03;
			var m714 = transform._13;
			var m814 = transform._23;
			var m315 = transform._01;
			var m415 = transform._11;
			var m515 = transform._21;
			var m615 = transform._02;
			var m715 = transform._12;
			var m815 = transform._22;
			var invdet = 1.0 / det;
			var rotation__00 = c00 * invdet;
			var rotation__10 = -c01 * invdet;
			var rotation__20 = c02 * invdet;
			var rotation__30 = -c03 * invdet;
			var rotation__01 = -(transform._01 * (m44 * m84 - m54 * m74) - transform._21 * (m34 * m84 - m54 * m64) + transform._31 * (m34 * m74 - m44 * m64)) * invdet;
			var rotation__11 = (transform._00 * (m45 * m85 - m55 * m75) - transform._20 * (m35 * m85 - m55 * m65) + transform._30 * (m35 * m75 - m45 * m65)) * invdet;
			var rotation__21 = -(transform._00 * (m46 * m86 - m56 * m76) - transform._20 * (m36 * m86 - m56 * m66) + transform._30 * (m36 * m76 - m46 * m66)) * invdet;
			var rotation__31 = (transform._00 * (m47 * m87 - m57 * m77) - transform._20 * (m37 * m87 - m57 * m67) + transform._30 * (m37 * m77 - m47 * m67)) * invdet;
			var rotation__02 = (transform._01 * (m48 * m88 - m58 * m78) - transform._11 * (m38 * m88 - m58 * m68) + transform._31 * (m38 * m78 - m48 * m68)) * invdet;
			var rotation__12 = -(transform._00 * (m49 * m89 - m59 * m79) - transform._10 * (m39 * m89 - m59 * m69) + transform._30 * (m39 * m79 - m49 * m69)) * invdet;
			var rotation__22 = (transform._00 * (m410 * m810 - m510 * m710) - transform._10 * (m310 * m810 - m510 * m610) + transform._30 * (m310 * m710 - m410 * m610)) * invdet;
			var rotation__32 = -(transform._00 * (m411 * m811 - m511 * m711) - transform._10 * (m311 * m811 - m511 * m611) + transform._30 * (m311 * m711 - m411 * m611)) * invdet;
			var rotation__03 = -(transform._01 * (m412 * m812 - m512 * m712) - transform._11 * (m312 * m812 - m512 * m612) + transform._21 * (m312 * m712 - m412 * m612)) * invdet;
			var rotation__13 = (transform._00 * (m413 * m813 - m513 * m713) - transform._10 * (m313 * m813 - m513 * m613) + transform._20 * (m313 * m713 - m413 * m613)) * invdet;
			var rotation__23 = -(transform._00 * (m414 * m814 - m514 * m714) - transform._10 * (m314 * m814 - m514 * m614) + transform._20 * (m314 * m714 - m414 * m614)) * invdet;
			var rotation__33 = (transform._00 * (m415 * m815 - m515 * m715) - transform._10 * (m315 * m815 - m515 * m615) + transform._20 * (m315 * m715 - m415 * m615)) * invdet;
			rotation__32 = 0;
			rotation__31 = rotation__32;
			rotation__30 = rotation__31;
			var _this1 = this.transform;
			var _this2 = this.transform;
			var _10 = _this2._00 * rotation__10 + _this2._10 * rotation__11 + _this2._20 * rotation__12 + _this2._30 * rotation__13;
			var _20 = _this2._00 * rotation__20 + _this2._10 * rotation__21 + _this2._20 * rotation__22 + _this2._30 * rotation__23;
			var _30 = _this2._00 * rotation__30 + _this2._10 * rotation__31 + _this2._20 * rotation__32 + _this2._30 * rotation__33;
			var _11 = _this2._01 * rotation__10 + _this2._11 * rotation__11 + _this2._21 * rotation__12 + _this2._31 * rotation__13;
			var _21 = _this2._01 * rotation__20 + _this2._11 * rotation__21 + _this2._21 * rotation__22 + _this2._31 * rotation__23;
			var _31 = _this2._01 * rotation__30 + _this2._11 * rotation__31 + _this2._21 * rotation__32 + _this2._31 * rotation__33;
			var _12 = _this2._02 * rotation__10 + _this2._12 * rotation__11 + _this2._22 * rotation__12 + _this2._32 * rotation__13;
			var _22 = _this2._02 * rotation__20 + _this2._12 * rotation__21 + _this2._22 * rotation__22 + _this2._32 * rotation__23;
			var _32 = _this2._02 * rotation__30 + _this2._12 * rotation__31 + _this2._22 * rotation__32 + _this2._32 * rotation__33;
			var _13 = _this2._03 * rotation__10 + _this2._13 * rotation__11 + _this2._23 * rotation__12 + _this2._33 * rotation__13;
			var _23 = _this2._03 * rotation__20 + _this2._13 * rotation__21 + _this2._23 * rotation__22 + _this2._33 * rotation__23;
			var _33 = _this2._03 * rotation__30 + _this2._13 * rotation__31 + _this2._23 * rotation__32 + _this2._33 * rotation__33;
			_this1._00 = _this2._00 * rotation__00 + _this2._10 * rotation__01 + _this2._20 * rotation__02 + _this2._30 * rotation__03;
			_this1._10 = _10;
			_this1._20 = _20;
			_this1._30 = _30;
			_this1._01 = _this2._01 * rotation__00 + _this2._11 * rotation__01 + _this2._21 * rotation__02 + _this2._31 * rotation__03;
			_this1._11 = _11;
			_this1._21 = _21;
			_this1._31 = _31;
			_this1._02 = _this2._02 * rotation__00 + _this2._12 * rotation__01 + _this2._22 * rotation__02 + _this2._32 * rotation__03;
			_this1._12 = _12;
			_this1._22 = _22;
			_this1._32 = _32;
			_this1._03 = _this2._03 * rotation__00 + _this2._13 * rotation__01 + _this2._23 * rotation__02 + _this2._33 * rotation__03;
			_this1._13 = _13;
			_this1._23 = _23;
			_this1._33 = _33;
		}
		if(this.rotation3d != null) {
			var _this3 = this.transform;
			var _this4 = this.transform;
			var m = this.rotation3d;
			var _101 = _this4._00 * m._10 + _this4._10 * m._11 + _this4._20 * m._12 + _this4._30 * m._13;
			var _201 = _this4._00 * m._20 + _this4._10 * m._21 + _this4._20 * m._22 + _this4._30 * m._23;
			var _301 = _this4._00 * m._30 + _this4._10 * m._31 + _this4._20 * m._32 + _this4._30 * m._33;
			var _01 = _this4._01 * m._00 + _this4._11 * m._01 + _this4._21 * m._02 + _this4._31 * m._03;
			var _111 = _this4._01 * m._10 + _this4._11 * m._11 + _this4._21 * m._12 + _this4._31 * m._13;
			var _211 = _this4._01 * m._20 + _this4._11 * m._21 + _this4._21 * m._22 + _this4._31 * m._23;
			var _311 = _this4._01 * m._30 + _this4._11 * m._31 + _this4._21 * m._32 + _this4._31 * m._33;
			var _02 = _this4._02 * m._00 + _this4._12 * m._01 + _this4._22 * m._02 + _this4._32 * m._03;
			var _121 = _this4._02 * m._10 + _this4._12 * m._11 + _this4._22 * m._12 + _this4._32 * m._13;
			var _221 = _this4._02 * m._20 + _this4._12 * m._21 + _this4._22 * m._22 + _this4._32 * m._23;
			var _321 = _this4._02 * m._30 + _this4._12 * m._31 + _this4._22 * m._32 + _this4._32 * m._33;
			var _03 = _this4._03 * m._00 + _this4._13 * m._01 + _this4._23 * m._02 + _this4._33 * m._03;
			var _131 = _this4._03 * m._10 + _this4._13 * m._11 + _this4._23 * m._12 + _this4._33 * m._13;
			var _231 = _this4._03 * m._20 + _this4._13 * m._21 + _this4._23 * m._22 + _this4._33 * m._23;
			var _331 = _this4._03 * m._30 + _this4._13 * m._31 + _this4._23 * m._32 + _this4._33 * m._33;
			_this3._00 = _this4._00 * m._00 + _this4._10 * m._01 + _this4._20 * m._02 + _this4._30 * m._03;
			_this3._10 = _101;
			_this3._20 = _201;
			_this3._30 = _301;
			_this3._01 = _01;
			_this3._11 = _111;
			_this3._21 = _211;
			_this3._31 = _311;
			_this3._02 = _02;
			_this3._12 = _121;
			_this3._22 = _221;
			_this3._32 = _321;
			_this3._03 = _03;
			_this3._13 = _131;
			_this3._23 = _231;
			_this3._33 = _331;
		}
		var m1 = this.transform;
		var _00 = transform._00 * m1._00 + transform._10 * m1._01 + transform._20 * m1._02 + transform._30 * m1._03;
		var _102 = transform._00 * m1._10 + transform._10 * m1._11 + transform._20 * m1._12 + transform._30 * m1._13;
		var _202 = transform._00 * m1._20 + transform._10 * m1._21 + transform._20 * m1._22 + transform._30 * m1._23;
		var _302 = transform._00 * m1._30 + transform._10 * m1._31 + transform._20 * m1._32 + transform._30 * m1._33;
		var _011 = transform._01 * m1._00 + transform._11 * m1._01 + transform._21 * m1._02 + transform._31 * m1._03;
		var _112 = transform._01 * m1._10 + transform._11 * m1._11 + transform._21 * m1._12 + transform._31 * m1._13;
		var _212 = transform._01 * m1._20 + transform._11 * m1._21 + transform._21 * m1._22 + transform._31 * m1._23;
		var _312 = transform._01 * m1._30 + transform._11 * m1._31 + transform._21 * m1._32 + transform._31 * m1._33;
		var _021 = transform._02 * m1._00 + transform._12 * m1._01 + transform._22 * m1._02 + transform._32 * m1._03;
		var _122 = transform._02 * m1._10 + transform._12 * m1._11 + transform._22 * m1._12 + transform._32 * m1._13;
		var _222 = transform._02 * m1._20 + transform._12 * m1._21 + transform._22 * m1._22 + transform._32 * m1._23;
		var _322 = transform._02 * m1._30 + transform._12 * m1._31 + transform._22 * m1._32 + transform._32 * m1._33;
		var drawArea = this.animationData.frames[this.timeline.currentFrame].drawArea;
		if(drawArea.maxX != 16) {
			drawArea.minX = drawArea.minX;
		}
		var x = drawArea.minX - this.pivotX + this.offsetX;
		var y = drawArea.minY - this.pivotY + this.offsetY;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var value_z = 0;
		var value_w = 1;
		var multvec_x = 0;
		var multvec_y = 0;
		var multvec_z = 0;
		multvec_x = _00 * value_x + _102 * value_y + _202 * value_z + _302 * value_w;
		multvec_y = _011 * value_x + _112 * value_y + _212 * value_z + _312 * value_w;
		multvec_z = _021 * value_x + _122 * value_y + _222 * value_z + _322 * value_w;
		if(area.min.x > multvec_x) {
			area.min.x = multvec_x;
		}
		if(area.min.y > multvec_y) {
			area.min.y = multvec_y;
		}
		if(area.max.x < multvec_x) {
			area.max.x = multvec_x;
		}
		if(area.max.y < multvec_y) {
			area.max.y = multvec_y;
		}
		if(area.minZ > multvec_z) {
			area.minZ = multvec_z;
		}
		if(area.maxZ < multvec_z) {
			area.maxZ = multvec_z;
		}
		area.isEmpty = false;
		var x1 = drawArea.maxX - this.pivotX + this.offsetX;
		var y1 = drawArea.minY - this.pivotY + this.offsetY;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x1 = x1;
		var value_y1 = y1;
		var value_z1 = 0;
		var value_w1 = 1;
		var multvec_x1 = 0;
		var multvec_y1 = 0;
		var multvec_z1 = 0;
		multvec_x1 = _00 * value_x1 + _102 * value_y1 + _202 * value_z1 + _302 * value_w1;
		multvec_y1 = _011 * value_x1 + _112 * value_y1 + _212 * value_z1 + _312 * value_w1;
		multvec_z1 = _021 * value_x1 + _122 * value_y1 + _222 * value_z1 + _322 * value_w1;
		if(area.min.x > multvec_x1) {
			area.min.x = multvec_x1;
		}
		if(area.min.y > multvec_y1) {
			area.min.y = multvec_y1;
		}
		if(area.max.x < multvec_x1) {
			area.max.x = multvec_x1;
		}
		if(area.max.y < multvec_y1) {
			area.max.y = multvec_y1;
		}
		if(area.minZ > multvec_z1) {
			area.minZ = multvec_z1;
		}
		if(area.maxZ < multvec_z1) {
			area.maxZ = multvec_z1;
		}
		area.isEmpty = false;
		var x2 = drawArea.minX - this.pivotX + this.offsetX;
		var y2 = drawArea.maxY - this.pivotY + this.offsetY;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var value_x2 = x2;
		var value_y2 = y2;
		var value_z2 = 0;
		var value_w2 = 1;
		var multvec_x2 = 0;
		var multvec_y2 = 0;
		var multvec_z2 = 0;
		multvec_x2 = _00 * value_x2 + _102 * value_y2 + _202 * value_z2 + _302 * value_w2;
		multvec_y2 = _011 * value_x2 + _112 * value_y2 + _212 * value_z2 + _312 * value_w2;
		multvec_z2 = _021 * value_x2 + _122 * value_y2 + _222 * value_z2 + _322 * value_w2;
		if(area.min.x > multvec_x2) {
			area.min.x = multvec_x2;
		}
		if(area.min.y > multvec_y2) {
			area.min.y = multvec_y2;
		}
		if(area.max.x < multvec_x2) {
			area.max.x = multvec_x2;
		}
		if(area.max.y < multvec_y2) {
			area.max.y = multvec_y2;
		}
		if(area.minZ > multvec_z2) {
			area.minZ = multvec_z2;
		}
		if(area.maxZ < multvec_z2) {
			area.maxZ = multvec_z2;
		}
		area.isEmpty = false;
		var x3 = drawArea.maxX - this.pivotX + this.offsetX;
		var y3 = drawArea.maxY - this.pivotY + this.offsetY;
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var value_x3 = x3;
		var value_y3 = y3;
		var value_z3 = 0;
		var value_w3 = 1;
		var multvec_x3 = 0;
		var multvec_y3 = 0;
		var multvec_z3 = 0;
		multvec_x3 = _00 * value_x3 + _102 * value_y3 + _202 * value_z3 + _302 * value_w3;
		multvec_y3 = _011 * value_x3 + _112 * value_y3 + _212 * value_z3 + _312 * value_w3;
		multvec_z3 = _021 * value_x3 + _122 * value_y3 + _222 * value_z3 + _322 * value_w3;
		if(area.min.x > multvec_x3) {
			area.min.x = multvec_x3;
		}
		if(area.min.y > multvec_y3) {
			area.min.y = multvec_y3;
		}
		if(area.max.x < multvec_x3) {
			area.max.x = multvec_x3;
		}
		if(area.max.y < multvec_y3) {
			area.max.y = multvec_y3;
		}
		if(area.minZ > multvec_z3) {
			area.minZ = multvec_z3;
		}
		if(area.maxZ < multvec_z3) {
			area.maxZ = multvec_z3;
		}
		area.isEmpty = false;
	}
	,width: function() {
		return this.animationData.frames[this.timeline.currentFrame].drawArea.get_width();
	}
	,set_smooth: function(value) {
		if(!value) {
			this.textureFilter = 0;
		} else {
			this.textureFilter = 1;
		}
		return value;
	}
	,__class__: com_gEngine_display_Sprite
};
var com_gEngine_display_Stage = function() {
	this.timeScale = 1;
	this.world = new com_gEngine_display_Layer();
	this.cameras = [new com_gEngine_display_Camera()];
	this.cameras[0].world = this.world;
	this.matrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.painterMode = new com_gEngine_painters_PaintMode();
	this.subStages = [];
};
$hxClasses["com.gEngine.display.Stage"] = com_gEngine_display_Stage;
com_gEngine_display_Stage.__name__ = "com.gEngine.display.Stage";
com_gEngine_display_Stage.prototype = {
	update: function() {
		var dt = com_TimeManager.delta * this.timeScale;
		this.world.update(dt);
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) _g1[_g++].update(dt);
		var _g2 = 0;
		var _g3 = this.subStages;
		while(_g2 < _g3.length) _g3[_g2++].update();
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			_g1[_g++].render(this.painterMode,this.matrix);
			if(this.painterMode.vertexCount() > 0) {
				this.painterMode.render();
			}
		}
		var _g2 = 0;
		var _g3 = this.subStages;
		while(_g2 < _g3.length) _g3[_g2++].render();
	}
	,removeSubStage: function(stage) {
		HxOverrides.remove(this.subStages,stage);
	}
	,addChild: function(child) {
		this.world.addChild(child);
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) _g1[_g++].destroy();
	}
	,set_color: function(val) {
		this.color = val;
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) _g1[_g++].clearColor = val;
		return val;
	}
	,__class__: com_gEngine_display_Stage
};
var com_gEngine_display_StaticLayer = function() {
	com_gEngine_display_Layer.call(this);
	this.offset = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
};
$hxClasses["com.gEngine.display.StaticLayer"] = com_gEngine_display_StaticLayer;
com_gEngine_display_StaticLayer.__name__ = "com.gEngine.display.StaticLayer";
com_gEngine_display_StaticLayer.__super__ = com_gEngine_display_Layer;
com_gEngine_display_StaticLayer.prototype = $extend(com_gEngine_display_Layer.prototype,{
	render: function(paintMode,transform) {
		paintMode.render();
		var proj = paintMode.camera.projection;
		paintMode.camera.projection = paintMode.camera.orthogonal;
		var _this = this.offset;
		_this._00 = 1;
		_this._10 = 0;
		_this._20 = 0;
		_this._30 = -paintMode.camera.width * 0.5;
		_this._01 = 0;
		_this._11 = 1;
		_this._21 = 0;
		_this._31 = -paintMode.camera.height * 0.5;
		_this._02 = 0;
		_this._12 = 0;
		_this._22 = 1;
		_this._32 = 0;
		_this._03 = 0;
		_this._13 = 0;
		_this._23 = 0;
		_this._33 = 1;
		com_gEngine_display_Layer.prototype.render.call(this,paintMode,this.offset);
		paintMode.render();
		paintMode.camera.projection = proj;
	}
	,__class__: com_gEngine_display_StaticLayer
});
var com_gEngine_display_Text = function(type) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.sourceFontSize = 0;
	this.fontSize = 0;
	this.text = "";
	com_gEngine_display_Layer.call(this);
	this.mLetters = [];
	this.mType = type;
	this.sourceFontSize = this.fontSize = com_basicDisplay_SpriteSheetDB.get_i().getData(type).fontSize;
	this.set_color(-1);
};
$hxClasses["com.gEngine.display.Text"] = com_gEngine_display_Text;
com_gEngine_display_Text.__name__ = "com.gEngine.display.Text";
com_gEngine_display_Text.findIndex = function(charCode) {
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
com_gEngine_display_Text.__super__ = com_gEngine_display_Layer;
com_gEngine_display_Text.prototype = $extend(com_gEngine_display_Layer.prototype,{
	set_text: function(aText) {
		if(this.text == aText) {
			return this.text;
		}
		this.text = aText;
		var counter = 0;
		var displayLetter;
		var currentWordLetters = [];
		var font = kha_Assets.fonts.get(this.mType)._get(this.fontSize);
		var xpos = 0.;
		var ypos = 0.;
		var i = 0;
		var scaleFont = this.fontSize / this.sourceFontSize;
		var fontSize = Math.round(this.fontSize / this.sourceFontSize * this.sourceFontSize);
		while(i < this.text.length) {
			if(this.text.charAt(i) == "\n") {
				++i;
				ypos += fontSize * 0.8;
				xpos = 0;
				this.bakedQuadCache.xadvance = 0;
				continue;
			}
			var charCodeIndex = com_gEngine_display_Text.findIndex(this.text.charCodeAt(i));
			var q = font.getBakedQuad(this.bakedQuadCache,charCodeIndex,xpos,ypos);
			if(q != null) {
				if(this.mLetters.length <= counter) {
					displayLetter = new com_gEngine_display_Sprite(this.mType);
					displayLetter.set_smooth(this.smooth);
					displayLetter.colorMultiplication(((this.color & 16711680) >>> 16) * 0.00392156862745098,((this.color & 65280) >>> 8) * 0.00392156862745098,(this.color & 255) * 0.00392156862745098,(this.color >>> 24) * 0.00392156862745098);
					this.addChild(displayLetter);
					this.mLetters.push(displayLetter);
				} else {
					displayLetter = this.mLetters[counter];
					if(displayLetter.parent == null) {
						this.addChild(displayLetter);
					}
				}
				++counter;
				displayLetter.timeline.gotoAndStop(charCodeIndex);
				currentWordLetters.push(displayLetter);
				displayLetter.x = xpos;
				displayLetter.y = ypos;
				displayLetter.scaleX = displayLetter.scaleY = scaleFont;
				xpos += q.xadvance;
			}
			++i;
		}
		var _g = counter;
		var _g1 = this.mLetters.length;
		while(_g < _g1) this.mLetters[_g++].removeFromParent();
		return aText;
	}
	,getLetter: function(aId) {
		return this.mLetters[aId];
	}
	,width: function() {
		var min = Infinity;
		var max = -Infinity;
		var _g = 0;
		var _g1 = this.mLetters;
		while(_g < _g1.length) {
			var letter = _g1[_g];
			++_g;
			if(letter.x < min) {
				min = letter.x;
			} else if(letter.x + letter.width() > max) {
				max = letter.x + letter.width();
			}
		}
		return max - min;
	}
	,set_color: function(color) {
		var _g = 0;
		var _g1 = this.mLetters;
		while(_g < _g1.length) _g1[_g++].colorMultiplication(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		this.color = color;
		return color;
	}
	,__class__: com_gEngine_display_Text
});
var com_gEngine_display_extra_TileMapDisplay = function(tileType,widthInTiles,heightInTiles,tileWidth,tileHeight) {
	com_gEngine_display_Layer.call(this);
	this.widthInTiles = widthInTiles;
	this.heightInTiles = heightInTiles;
	this.tileWidth = tileWidth;
	this.tileHeight = tileHeight;
	this.tiles = [];
	this.orientation = [];
	this.tile = tileType;
	this.tile.pivotX = tileWidth * 0.5;
	this.tile.pivotY = tileHeight * 0.5;
	var _g = 0;
	var _g1 = widthInTiles * heightInTiles;
	while(_g < _g1) {
		++_g;
		this.tiles.push(-1);
		this.orientation.push(0);
	}
};
$hxClasses["com.gEngine.display.extra.TileMapDisplay"] = com_gEngine_display_extra_TileMapDisplay;
com_gEngine_display_extra_TileMapDisplay.__name__ = "com.gEngine.display.extra.TileMapDisplay";
com_gEngine_display_extra_TileMapDisplay.__super__ = com_gEngine_display_Layer;
com_gEngine_display_extra_TileMapDisplay.prototype = $extend(com_gEngine_display_Layer.prototype,{
	setTile2: function(index,value,flipX,flipY,rotate) {
		if(rotate == null) {
			rotate = false;
		}
		if(flipY == null) {
			flipY = false;
		}
		if(flipX == null) {
			flipX = false;
		}
		this.tiles[index] = value;
		var tileOrientation = 0;
		if(flipX) {
			tileOrientation = 1;
		}
		if(flipY) {
			tileOrientation |= 2;
		}
		if(rotate) {
			tileOrientation |= 4;
		}
		this.orientation[index] = tileOrientation;
	}
	,render: function(paintMode,transform) {
		com_gEngine_display_Layer.prototype.render.call(this,paintMode,transform);
		var _this = paintMode.camera;
		var homogeneousTargetX = 0 / _this.width * 2 - 1;
		var homogeneousTargetY = kha_Image.renderTargetsInvertedY() ? 0 / _this.height * 2 - 1 : 1 - 0 / _this.height * 2;
		var transform1;
		if(_this.projectionIsOrthogonal) {
			homogeneousTargetX = 0 - _this.width * 0.5;
			homogeneousTargetY = 0 - _this.height * 0.5;
			var _this1 = _this.view;
			var m3 = _this1._12;
			var m4 = _this1._22;
			var m5 = _this1._32;
			var m6 = _this1._13;
			var m7 = _this1._23;
			var m8 = _this1._33;
			var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
			var m31 = _this1._12;
			var m41 = _this1._22;
			var m51 = _this1._32;
			var m61 = _this1._13;
			var m71 = _this1._23;
			var m81 = _this1._33;
			var c01 = _this1._10 * (m41 * m81 - m51 * m71) - _this1._20 * (m31 * m81 - m51 * m61) + _this1._30 * (m31 * m71 - m41 * m61);
			var m32 = _this1._11;
			var m42 = _this1._21;
			var m52 = _this1._31;
			var m62 = _this1._13;
			var m72 = _this1._23;
			var m82 = _this1._33;
			var c02 = _this1._10 * (m42 * m82 - m52 * m72) - _this1._20 * (m32 * m82 - m52 * m62) + _this1._30 * (m32 * m72 - m42 * m62);
			var m33 = _this1._11;
			var m43 = _this1._21;
			var m53 = _this1._31;
			var m63 = _this1._12;
			var m73 = _this1._22;
			var m83 = _this1._32;
			var c03 = _this1._10 * (m43 * m83 - m53 * m73) - _this1._20 * (m33 * m83 - m53 * m63) + _this1._30 * (m33 * m73 - m43 * m63);
			var det = _this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m34 = _this1._02;
			var m44 = _this1._22;
			var m54 = _this1._32;
			var m64 = _this1._03;
			var m74 = _this1._23;
			var m84 = _this1._33;
			var m35 = _this1._02;
			var m45 = _this1._22;
			var m55 = _this1._32;
			var m65 = _this1._03;
			var m75 = _this1._23;
			var m85 = _this1._33;
			var m36 = _this1._01;
			var m46 = _this1._21;
			var m56 = _this1._31;
			var m66 = _this1._03;
			var m76 = _this1._23;
			var m86 = _this1._33;
			var m37 = _this1._01;
			var m47 = _this1._21;
			var m57 = _this1._31;
			var m67 = _this1._02;
			var m77 = _this1._22;
			var m87 = _this1._32;
			var m38 = _this1._02;
			var m48 = _this1._12;
			var m58 = _this1._32;
			var m68 = _this1._03;
			var m78 = _this1._13;
			var m88 = _this1._33;
			var m39 = _this1._02;
			var m49 = _this1._12;
			var m59 = _this1._32;
			var m69 = _this1._03;
			var m79 = _this1._13;
			var m89 = _this1._33;
			var m310 = _this1._01;
			var m410 = _this1._11;
			var m510 = _this1._31;
			var m610 = _this1._03;
			var m710 = _this1._13;
			var m810 = _this1._33;
			var m311 = _this1._01;
			var m411 = _this1._11;
			var m511 = _this1._31;
			var m611 = _this1._02;
			var m711 = _this1._12;
			var m811 = _this1._32;
			var m312 = _this1._02;
			var m412 = _this1._12;
			var m512 = _this1._22;
			var m612 = _this1._03;
			var m712 = _this1._13;
			var m812 = _this1._23;
			var m313 = _this1._02;
			var m413 = _this1._12;
			var m513 = _this1._22;
			var m613 = _this1._03;
			var m713 = _this1._13;
			var m813 = _this1._23;
			var m314 = _this1._01;
			var m414 = _this1._11;
			var m514 = _this1._21;
			var m614 = _this1._03;
			var m714 = _this1._13;
			var m814 = _this1._23;
			var m315 = _this1._01;
			var m415 = _this1._11;
			var m515 = _this1._21;
			var m615 = _this1._02;
			var m715 = _this1._12;
			var m815 = _this1._22;
			var invdet = 1.0 / det;
			transform1 = new kha_math_FastMatrix4(c00 * invdet,-c01 * invdet,c02 * invdet,-c03 * invdet,-(_this1._01 * (m44 * m84 - m54 * m74) - _this1._21 * (m34 * m84 - m54 * m64) + _this1._31 * (m34 * m74 - m44 * m64)) * invdet,(_this1._00 * (m45 * m85 - m55 * m75) - _this1._20 * (m35 * m85 - m55 * m65) + _this1._30 * (m35 * m75 - m45 * m65)) * invdet,-(_this1._00 * (m46 * m86 - m56 * m76) - _this1._20 * (m36 * m86 - m56 * m66) + _this1._30 * (m36 * m76 - m46 * m66)) * invdet,(_this1._00 * (m47 * m87 - m57 * m77) - _this1._20 * (m37 * m87 - m57 * m67) + _this1._30 * (m37 * m77 - m47 * m67)) * invdet,(_this1._01 * (m48 * m88 - m58 * m78) - _this1._11 * (m38 * m88 - m58 * m68) + _this1._31 * (m38 * m78 - m48 * m68)) * invdet,-(_this1._00 * (m49 * m89 - m59 * m79) - _this1._10 * (m39 * m89 - m59 * m69) + _this1._30 * (m39 * m79 - m49 * m69)) * invdet,(_this1._00 * (m410 * m810 - m510 * m710) - _this1._10 * (m310 * m810 - m510 * m610) + _this1._30 * (m310 * m710 - m410 * m610)) * invdet,-(_this1._00 * (m411 * m811 - m511 * m711) - _this1._10 * (m311 * m811 - m511 * m611) + _this1._30 * (m311 * m711 - m411 * m611)) * invdet,-(_this1._01 * (m412 * m812 - m512 * m712) - _this1._11 * (m312 * m812 - m512 * m612) + _this1._21 * (m312 * m712 - m412 * m612)) * invdet,(_this1._00 * (m413 * m813 - m513 * m713) - _this1._10 * (m313 * m813 - m513 * m613) + _this1._20 * (m313 * m713 - m413 * m613)) * invdet,-(_this1._00 * (m414 * m814 - m514 * m714) - _this1._10 * (m314 * m814 - m514 * m614) + _this1._20 * (m314 * m714 - m414 * m614)) * invdet,(_this1._00 * (m415 * m815 - m515 * m715) - _this1._10 * (m315 * m815 - m515 * m615) + _this1._20 * (m315 * m715 - m415 * m615)) * invdet);
		} else {
			var _this2 = _this.projection;
			var m = _this.view;
			var _00 = _this2._00 * m._00 + _this2._10 * m._01 + _this2._20 * m._02 + _this2._30 * m._03;
			var _10 = _this2._00 * m._10 + _this2._10 * m._11 + _this2._20 * m._12 + _this2._30 * m._13;
			var _20 = _this2._00 * m._20 + _this2._10 * m._21 + _this2._20 * m._22 + _this2._30 * m._23;
			var _30 = _this2._00 * m._30 + _this2._10 * m._31 + _this2._20 * m._32 + _this2._30 * m._33;
			var _01 = _this2._01 * m._00 + _this2._11 * m._01 + _this2._21 * m._02 + _this2._31 * m._03;
			var _11 = _this2._01 * m._10 + _this2._11 * m._11 + _this2._21 * m._12 + _this2._31 * m._13;
			var _21 = _this2._01 * m._20 + _this2._11 * m._21 + _this2._21 * m._22 + _this2._31 * m._23;
			var _31 = _this2._01 * m._30 + _this2._11 * m._31 + _this2._21 * m._32 + _this2._31 * m._33;
			var _02 = _this2._02 * m._00 + _this2._12 * m._01 + _this2._22 * m._02 + _this2._32 * m._03;
			var _12 = _this2._02 * m._10 + _this2._12 * m._11 + _this2._22 * m._12 + _this2._32 * m._13;
			var _22 = _this2._02 * m._20 + _this2._12 * m._21 + _this2._22 * m._22 + _this2._32 * m._23;
			var _32 = _this2._02 * m._30 + _this2._12 * m._31 + _this2._22 * m._32 + _this2._32 * m._33;
			var _03 = _this2._03 * m._00 + _this2._13 * m._01 + _this2._23 * m._02 + _this2._33 * m._03;
			var _13 = _this2._03 * m._10 + _this2._13 * m._11 + _this2._23 * m._12 + _this2._33 * m._13;
			var _23 = _this2._03 * m._20 + _this2._13 * m._21 + _this2._23 * m._22 + _this2._33 * m._23;
			var _33 = _this2._03 * m._30 + _this2._13 * m._31 + _this2._23 * m._32 + _this2._33 * m._33;
			var c001 = _11 * (_22 * _33 - _32 * _23) - _21 * (_12 * _33 - _32 * _13) + _31 * (_12 * _23 - _22 * _13);
			var c011 = _10 * (_22 * _33 - _32 * _23) - _20 * (_12 * _33 - _32 * _13) + _30 * (_12 * _23 - _22 * _13);
			var c021 = _10 * (_21 * _33 - _31 * _23) - _20 * (_11 * _33 - _31 * _13) + _30 * (_11 * _23 - _21 * _13);
			var c031 = _10 * (_21 * _32 - _31 * _22) - _20 * (_11 * _32 - _31 * _12) + _30 * (_11 * _22 - _21 * _12);
			var det1 = _00 * c001 - _01 * c011 + _02 * c021 - _03 * c031;
			if(Math.abs(det1) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var invdet1 = 1.0 / det1;
			transform1 = new kha_math_FastMatrix4(c001 * invdet1,-c011 * invdet1,c021 * invdet1,-c031 * invdet1,-(_01 * (_22 * _33 - _32 * _23) - _21 * (_02 * _33 - _32 * _03) + _31 * (_02 * _23 - _22 * _03)) * invdet1,(_00 * (_22 * _33 - _32 * _23) - _20 * (_02 * _33 - _32 * _03) + _30 * (_02 * _23 - _22 * _03)) * invdet1,-(_00 * (_21 * _33 - _31 * _23) - _20 * (_01 * _33 - _31 * _03) + _30 * (_01 * _23 - _21 * _03)) * invdet1,(_00 * (_21 * _32 - _31 * _22) - _20 * (_01 * _32 - _31 * _02) + _30 * (_01 * _22 - _21 * _02)) * invdet1,(_01 * (_12 * _33 - _32 * _13) - _11 * (_02 * _33 - _32 * _03) + _31 * (_02 * _13 - _12 * _03)) * invdet1,-(_00 * (_12 * _33 - _32 * _13) - _10 * (_02 * _33 - _32 * _03) + _30 * (_02 * _13 - _12 * _03)) * invdet1,(_00 * (_11 * _33 - _31 * _13) - _10 * (_01 * _33 - _31 * _03) + _30 * (_01 * _13 - _11 * _03)) * invdet1,-(_00 * (_11 * _32 - _31 * _12) - _10 * (_01 * _32 - _31 * _02) + _30 * (_01 * _12 - _11 * _02)) * invdet1,-(_01 * (_12 * _23 - _22 * _13) - _11 * (_02 * _23 - _22 * _03) + _21 * (_02 * _13 - _12 * _03)) * invdet1,(_00 * (_12 * _23 - _22 * _13) - _10 * (_02 * _23 - _22 * _03) + _20 * (_02 * _13 - _12 * _03)) * invdet1,-(_00 * (_11 * _23 - _21 * _13) - _10 * (_01 * _23 - _21 * _03) + _20 * (_01 * _13 - _11 * _03)) * invdet1,(_00 * (_11 * _22 - _21 * _12) - _10 * (_01 * _22 - _21 * _02) + _20 * (_01 * _12 - _11 * _02)) * invdet1);
		}
		var x = homogeneousTargetX;
		var y = homogeneousTargetY;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var value_z = -1;
		var value_w = 1;
		var farRaw_x = 0;
		var farRaw_y = 0;
		var farRaw_z = 0;
		var farRaw_w = 1;
		farRaw_x = transform1._00 * value_x + transform1._10 * value_y + transform1._20 * value_z + transform1._30 * value_w;
		farRaw_y = transform1._01 * value_x + transform1._11 * value_y + transform1._21 * value_z + transform1._31 * value_w;
		farRaw_z = transform1._02 * value_x + transform1._12 * value_y + transform1._22 * value_z + transform1._32 * value_w;
		farRaw_w = transform1._03 * value_x + transform1._13 * value_y + transform1._23 * value_z + transform1._33 * value_w;
		var x1 = homogeneousTargetX;
		var y1 = homogeneousTargetY;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x1 = x1;
		var value_y1 = y1;
		var value_z1 = 1;
		var value_w1 = 1;
		var nearRaw_x = 0;
		var nearRaw_y = 0;
		var nearRaw_z = 0;
		var nearRaw_w = 1;
		nearRaw_x = transform1._00 * value_x1 + transform1._10 * value_y1 + transform1._20 * value_z1 + transform1._30 * value_w1;
		nearRaw_y = transform1._01 * value_x1 + transform1._11 * value_y1 + transform1._21 * value_z1 + transform1._31 * value_w1;
		nearRaw_z = transform1._02 * value_x1 + transform1._12 * value_y1 + transform1._22 * value_z1 + transform1._32 * value_w1;
		nearRaw_w = transform1._03 * value_x1 + transform1._13 * value_y1 + transform1._23 * value_z1 + transform1._33 * value_w1;
		var value = 1 / farRaw_w;
		var x2 = farRaw_x * value;
		var y2 = farRaw_y * value;
		var z = farRaw_z * value;
		var w = farRaw_w * value;
		if(w == null) {
			w = 1;
		}
		if(z == null) {
			z = 0;
		}
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var value1 = 1 / nearRaw_w;
		var x3 = nearRaw_x * value1;
		var y3 = nearRaw_y * value1;
		var z1 = nearRaw_z * value1;
		var w1 = nearRaw_w * value1;
		if(w1 == null) {
			w1 = 1;
		}
		if(z1 == null) {
			z1 = 0;
		}
		if(y3 == null) {
			y3 = 0;
		}
		if(x3 == null) {
			x3 = 0;
		}
		var near_x = x3;
		var near_y = y3;
		var near_z = z1;
		var x4 = x2 - near_x;
		var y4 = y2 - near_y;
		var z2 = z - near_z;
		var w2 = w - w1;
		if(w2 == null) {
			w2 = 1;
		}
		if(z2 == null) {
			z2 = 0;
		}
		if(y4 == null) {
			y4 = 0;
		}
		if(x4 == null) {
			x4 = 0;
		}
		var dir_z = z2;
		var x5 = near_x + x4 * ((0 - near_z) / dir_z);
		var y5 = near_y + y4 * ((0 - near_z) / dir_z);
		if(y5 == null) {
			y5 = 0;
		}
		if(x5 == null) {
			x5 = 0;
		}
		var min_x = x5;
		var min_y = y5;
		var x6 = min_x;
		var y6 = min_y;
		if(y6 == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var max_x = x6;
		var max_y = y6;
		var _this3 = paintMode.camera;
		var targetX = paintMode.camera.width;
		var homogeneousTargetX1 = targetX / _this3.width * 2 - 1;
		var homogeneousTargetY1 = kha_Image.renderTargetsInvertedY() ? 0 / _this3.height * 2 - 1 : 1 - 0 / _this3.height * 2;
		var transform2;
		if(_this3.projectionIsOrthogonal) {
			homogeneousTargetX1 = targetX - _this3.width * 0.5;
			homogeneousTargetY1 = 0 - _this3.height * 0.5;
			var _this4 = _this3.view;
			var m316 = _this4._12;
			var m416 = _this4._22;
			var m516 = _this4._32;
			var m616 = _this4._13;
			var m716 = _this4._23;
			var m816 = _this4._33;
			var c002 = _this4._11 * (m416 * m816 - m516 * m716) - _this4._21 * (m316 * m816 - m516 * m616) + _this4._31 * (m316 * m716 - m416 * m616);
			var m317 = _this4._12;
			var m417 = _this4._22;
			var m517 = _this4._32;
			var m617 = _this4._13;
			var m717 = _this4._23;
			var m817 = _this4._33;
			var c012 = _this4._10 * (m417 * m817 - m517 * m717) - _this4._20 * (m317 * m817 - m517 * m617) + _this4._30 * (m317 * m717 - m417 * m617);
			var m318 = _this4._11;
			var m418 = _this4._21;
			var m518 = _this4._31;
			var m618 = _this4._13;
			var m718 = _this4._23;
			var m818 = _this4._33;
			var c022 = _this4._10 * (m418 * m818 - m518 * m718) - _this4._20 * (m318 * m818 - m518 * m618) + _this4._30 * (m318 * m718 - m418 * m618);
			var m319 = _this4._11;
			var m419 = _this4._21;
			var m519 = _this4._31;
			var m619 = _this4._12;
			var m719 = _this4._22;
			var m819 = _this4._32;
			var c032 = _this4._10 * (m419 * m819 - m519 * m719) - _this4._20 * (m319 * m819 - m519 * m619) + _this4._30 * (m319 * m719 - m419 * m619);
			var det2 = _this4._00 * c002 - _this4._01 * c012 + _this4._02 * c022 - _this4._03 * c032;
			if(Math.abs(det2) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m320 = _this4._02;
			var m420 = _this4._22;
			var m520 = _this4._32;
			var m620 = _this4._03;
			var m720 = _this4._23;
			var m820 = _this4._33;
			var m321 = _this4._02;
			var m421 = _this4._22;
			var m521 = _this4._32;
			var m621 = _this4._03;
			var m721 = _this4._23;
			var m821 = _this4._33;
			var m322 = _this4._01;
			var m422 = _this4._21;
			var m522 = _this4._31;
			var m622 = _this4._03;
			var m722 = _this4._23;
			var m822 = _this4._33;
			var m323 = _this4._01;
			var m423 = _this4._21;
			var m523 = _this4._31;
			var m623 = _this4._02;
			var m723 = _this4._22;
			var m823 = _this4._32;
			var m324 = _this4._02;
			var m424 = _this4._12;
			var m524 = _this4._32;
			var m624 = _this4._03;
			var m724 = _this4._13;
			var m824 = _this4._33;
			var m325 = _this4._02;
			var m425 = _this4._12;
			var m525 = _this4._32;
			var m625 = _this4._03;
			var m725 = _this4._13;
			var m825 = _this4._33;
			var m326 = _this4._01;
			var m426 = _this4._11;
			var m526 = _this4._31;
			var m626 = _this4._03;
			var m726 = _this4._13;
			var m826 = _this4._33;
			var m327 = _this4._01;
			var m427 = _this4._11;
			var m527 = _this4._31;
			var m627 = _this4._02;
			var m727 = _this4._12;
			var m827 = _this4._32;
			var m328 = _this4._02;
			var m428 = _this4._12;
			var m528 = _this4._22;
			var m628 = _this4._03;
			var m728 = _this4._13;
			var m828 = _this4._23;
			var m329 = _this4._02;
			var m429 = _this4._12;
			var m529 = _this4._22;
			var m629 = _this4._03;
			var m729 = _this4._13;
			var m829 = _this4._23;
			var m330 = _this4._01;
			var m430 = _this4._11;
			var m530 = _this4._21;
			var m630 = _this4._03;
			var m730 = _this4._13;
			var m830 = _this4._23;
			var m331 = _this4._01;
			var m431 = _this4._11;
			var m531 = _this4._21;
			var m631 = _this4._02;
			var m731 = _this4._12;
			var m831 = _this4._22;
			var invdet2 = 1.0 / det2;
			transform2 = new kha_math_FastMatrix4(c002 * invdet2,-c012 * invdet2,c022 * invdet2,-c032 * invdet2,-(_this4._01 * (m420 * m820 - m520 * m720) - _this4._21 * (m320 * m820 - m520 * m620) + _this4._31 * (m320 * m720 - m420 * m620)) * invdet2,(_this4._00 * (m421 * m821 - m521 * m721) - _this4._20 * (m321 * m821 - m521 * m621) + _this4._30 * (m321 * m721 - m421 * m621)) * invdet2,-(_this4._00 * (m422 * m822 - m522 * m722) - _this4._20 * (m322 * m822 - m522 * m622) + _this4._30 * (m322 * m722 - m422 * m622)) * invdet2,(_this4._00 * (m423 * m823 - m523 * m723) - _this4._20 * (m323 * m823 - m523 * m623) + _this4._30 * (m323 * m723 - m423 * m623)) * invdet2,(_this4._01 * (m424 * m824 - m524 * m724) - _this4._11 * (m324 * m824 - m524 * m624) + _this4._31 * (m324 * m724 - m424 * m624)) * invdet2,-(_this4._00 * (m425 * m825 - m525 * m725) - _this4._10 * (m325 * m825 - m525 * m625) + _this4._30 * (m325 * m725 - m425 * m625)) * invdet2,(_this4._00 * (m426 * m826 - m526 * m726) - _this4._10 * (m326 * m826 - m526 * m626) + _this4._30 * (m326 * m726 - m426 * m626)) * invdet2,-(_this4._00 * (m427 * m827 - m527 * m727) - _this4._10 * (m327 * m827 - m527 * m627) + _this4._30 * (m327 * m727 - m427 * m627)) * invdet2,-(_this4._01 * (m428 * m828 - m528 * m728) - _this4._11 * (m328 * m828 - m528 * m628) + _this4._21 * (m328 * m728 - m428 * m628)) * invdet2,(_this4._00 * (m429 * m829 - m529 * m729) - _this4._10 * (m329 * m829 - m529 * m629) + _this4._20 * (m329 * m729 - m429 * m629)) * invdet2,-(_this4._00 * (m430 * m830 - m530 * m730) - _this4._10 * (m330 * m830 - m530 * m630) + _this4._20 * (m330 * m730 - m430 * m630)) * invdet2,(_this4._00 * (m431 * m831 - m531 * m731) - _this4._10 * (m331 * m831 - m531 * m631) + _this4._20 * (m331 * m731 - m431 * m631)) * invdet2);
		} else {
			var _this5 = _this3.projection;
			var m1 = _this3.view;
			var _001 = _this5._00 * m1._00 + _this5._10 * m1._01 + _this5._20 * m1._02 + _this5._30 * m1._03;
			var _101 = _this5._00 * m1._10 + _this5._10 * m1._11 + _this5._20 * m1._12 + _this5._30 * m1._13;
			var _201 = _this5._00 * m1._20 + _this5._10 * m1._21 + _this5._20 * m1._22 + _this5._30 * m1._23;
			var _301 = _this5._00 * m1._30 + _this5._10 * m1._31 + _this5._20 * m1._32 + _this5._30 * m1._33;
			var _011 = _this5._01 * m1._00 + _this5._11 * m1._01 + _this5._21 * m1._02 + _this5._31 * m1._03;
			var _111 = _this5._01 * m1._10 + _this5._11 * m1._11 + _this5._21 * m1._12 + _this5._31 * m1._13;
			var _211 = _this5._01 * m1._20 + _this5._11 * m1._21 + _this5._21 * m1._22 + _this5._31 * m1._23;
			var _311 = _this5._01 * m1._30 + _this5._11 * m1._31 + _this5._21 * m1._32 + _this5._31 * m1._33;
			var _021 = _this5._02 * m1._00 + _this5._12 * m1._01 + _this5._22 * m1._02 + _this5._32 * m1._03;
			var _121 = _this5._02 * m1._10 + _this5._12 * m1._11 + _this5._22 * m1._12 + _this5._32 * m1._13;
			var _221 = _this5._02 * m1._20 + _this5._12 * m1._21 + _this5._22 * m1._22 + _this5._32 * m1._23;
			var _321 = _this5._02 * m1._30 + _this5._12 * m1._31 + _this5._22 * m1._32 + _this5._32 * m1._33;
			var _031 = _this5._03 * m1._00 + _this5._13 * m1._01 + _this5._23 * m1._02 + _this5._33 * m1._03;
			var _131 = _this5._03 * m1._10 + _this5._13 * m1._11 + _this5._23 * m1._12 + _this5._33 * m1._13;
			var _231 = _this5._03 * m1._20 + _this5._13 * m1._21 + _this5._23 * m1._22 + _this5._33 * m1._23;
			var _331 = _this5._03 * m1._30 + _this5._13 * m1._31 + _this5._23 * m1._32 + _this5._33 * m1._33;
			var c003 = _111 * (_221 * _331 - _321 * _231) - _211 * (_121 * _331 - _321 * _131) + _311 * (_121 * _231 - _221 * _131);
			var c013 = _101 * (_221 * _331 - _321 * _231) - _201 * (_121 * _331 - _321 * _131) + _301 * (_121 * _231 - _221 * _131);
			var c023 = _101 * (_211 * _331 - _311 * _231) - _201 * (_111 * _331 - _311 * _131) + _301 * (_111 * _231 - _211 * _131);
			var c033 = _101 * (_211 * _321 - _311 * _221) - _201 * (_111 * _321 - _311 * _121) + _301 * (_111 * _221 - _211 * _121);
			var det3 = _001 * c003 - _011 * c013 + _021 * c023 - _031 * c033;
			if(Math.abs(det3) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var invdet3 = 1.0 / det3;
			transform2 = new kha_math_FastMatrix4(c003 * invdet3,-c013 * invdet3,c023 * invdet3,-c033 * invdet3,-(_011 * (_221 * _331 - _321 * _231) - _211 * (_021 * _331 - _321 * _031) + _311 * (_021 * _231 - _221 * _031)) * invdet3,(_001 * (_221 * _331 - _321 * _231) - _201 * (_021 * _331 - _321 * _031) + _301 * (_021 * _231 - _221 * _031)) * invdet3,-(_001 * (_211 * _331 - _311 * _231) - _201 * (_011 * _331 - _311 * _031) + _301 * (_011 * _231 - _211 * _031)) * invdet3,(_001 * (_211 * _321 - _311 * _221) - _201 * (_011 * _321 - _311 * _021) + _301 * (_011 * _221 - _211 * _021)) * invdet3,(_011 * (_121 * _331 - _321 * _131) - _111 * (_021 * _331 - _321 * _031) + _311 * (_021 * _131 - _121 * _031)) * invdet3,-(_001 * (_121 * _331 - _321 * _131) - _101 * (_021 * _331 - _321 * _031) + _301 * (_021 * _131 - _121 * _031)) * invdet3,(_001 * (_111 * _331 - _311 * _131) - _101 * (_011 * _331 - _311 * _031) + _301 * (_011 * _131 - _111 * _031)) * invdet3,-(_001 * (_111 * _321 - _311 * _121) - _101 * (_011 * _321 - _311 * _021) + _301 * (_011 * _121 - _111 * _021)) * invdet3,-(_011 * (_121 * _231 - _221 * _131) - _111 * (_021 * _231 - _221 * _031) + _211 * (_021 * _131 - _121 * _031)) * invdet3,(_001 * (_121 * _231 - _221 * _131) - _101 * (_021 * _231 - _221 * _031) + _201 * (_021 * _131 - _121 * _031)) * invdet3,-(_001 * (_111 * _231 - _211 * _131) - _101 * (_011 * _231 - _211 * _031) + _201 * (_011 * _131 - _111 * _031)) * invdet3,(_001 * (_111 * _221 - _211 * _121) - _101 * (_011 * _221 - _211 * _021) + _201 * (_011 * _121 - _111 * _021)) * invdet3);
		}
		var x7 = homogeneousTargetX1;
		var y7 = homogeneousTargetY1;
		if(y7 == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var value_x2 = x7;
		var value_y2 = y7;
		var value_z2 = -1;
		var value_w2 = 1;
		var farRaw_x1 = 0;
		var farRaw_y1 = 0;
		var farRaw_z1 = 0;
		var farRaw_w1 = 1;
		farRaw_x1 = transform2._00 * value_x2 + transform2._10 * value_y2 + transform2._20 * value_z2 + transform2._30 * value_w2;
		farRaw_y1 = transform2._01 * value_x2 + transform2._11 * value_y2 + transform2._21 * value_z2 + transform2._31 * value_w2;
		farRaw_z1 = transform2._02 * value_x2 + transform2._12 * value_y2 + transform2._22 * value_z2 + transform2._32 * value_w2;
		farRaw_w1 = transform2._03 * value_x2 + transform2._13 * value_y2 + transform2._23 * value_z2 + transform2._33 * value_w2;
		var x8 = homogeneousTargetX1;
		var y8 = homogeneousTargetY1;
		if(y8 == null) {
			y8 = 0;
		}
		if(x8 == null) {
			x8 = 0;
		}
		var value_x3 = x8;
		var value_y3 = y8;
		var value_z3 = 1;
		var value_w3 = 1;
		var nearRaw_x1 = 0;
		var nearRaw_y1 = 0;
		var nearRaw_z1 = 0;
		var nearRaw_w1 = 1;
		nearRaw_x1 = transform2._00 * value_x3 + transform2._10 * value_y3 + transform2._20 * value_z3 + transform2._30 * value_w3;
		nearRaw_y1 = transform2._01 * value_x3 + transform2._11 * value_y3 + transform2._21 * value_z3 + transform2._31 * value_w3;
		nearRaw_z1 = transform2._02 * value_x3 + transform2._12 * value_y3 + transform2._22 * value_z3 + transform2._32 * value_w3;
		nearRaw_w1 = transform2._03 * value_x3 + transform2._13 * value_y3 + transform2._23 * value_z3 + transform2._33 * value_w3;
		var value2 = 1 / farRaw_w1;
		var x9 = farRaw_x1 * value2;
		var y9 = farRaw_y1 * value2;
		var z3 = farRaw_z1 * value2;
		var w3 = farRaw_w1 * value2;
		if(w3 == null) {
			w3 = 1;
		}
		if(z3 == null) {
			z3 = 0;
		}
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var value3 = 1 / nearRaw_w1;
		var x10 = nearRaw_x1 * value3;
		var y10 = nearRaw_y1 * value3;
		var z4 = nearRaw_z1 * value3;
		var w4 = nearRaw_w1 * value3;
		if(w4 == null) {
			w4 = 1;
		}
		if(z4 == null) {
			z4 = 0;
		}
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		var near_x1 = x10;
		var near_y1 = y10;
		var near_z1 = z4;
		var x11 = x9 - near_x1;
		var y11 = y9 - near_y1;
		var z5 = z3 - near_z1;
		var w5 = w3 - w4;
		if(w5 == null) {
			w5 = 1;
		}
		if(z5 == null) {
			z5 = 0;
		}
		if(y11 == null) {
			y11 = 0;
		}
		if(x11 == null) {
			x11 = 0;
		}
		var dir_z1 = z5;
		var x12 = near_x1 + x11 * ((0 - near_z1) / dir_z1);
		var y12 = near_y1 + y11 * ((0 - near_z1) / dir_z1);
		if(y12 == null) {
			y12 = 0;
		}
		if(x12 == null) {
			x12 = 0;
		}
		var point_x = x12;
		var point_y = y12;
		if(point_x < min_x) {
			min_x = point_x;
		}
		if(point_y < min_y) {
			min_y = point_y;
		}
		if(point_x > max_x) {
			max_x = point_x;
		}
		if(point_y > max_y) {
			max_y = point_y;
		}
		var _this6 = paintMode.camera;
		var targetX1 = paintMode.camera.width;
		var targetY = paintMode.camera.height;
		var homogeneousTargetX2 = targetX1 / _this6.width * 2 - 1;
		var homogeneousTargetY2 = kha_Image.renderTargetsInvertedY() ? targetY / _this6.height * 2 - 1 : 1 - targetY / _this6.height * 2;
		var transform3;
		if(_this6.projectionIsOrthogonal) {
			homogeneousTargetX2 = targetX1 - _this6.width * 0.5;
			homogeneousTargetY2 = targetY - _this6.height * 0.5;
			var _this7 = _this6.view;
			var m332 = _this7._12;
			var m432 = _this7._22;
			var m532 = _this7._32;
			var m632 = _this7._13;
			var m732 = _this7._23;
			var m832 = _this7._33;
			var c004 = _this7._11 * (m432 * m832 - m532 * m732) - _this7._21 * (m332 * m832 - m532 * m632) + _this7._31 * (m332 * m732 - m432 * m632);
			var m333 = _this7._12;
			var m433 = _this7._22;
			var m533 = _this7._32;
			var m633 = _this7._13;
			var m733 = _this7._23;
			var m833 = _this7._33;
			var c014 = _this7._10 * (m433 * m833 - m533 * m733) - _this7._20 * (m333 * m833 - m533 * m633) + _this7._30 * (m333 * m733 - m433 * m633);
			var m334 = _this7._11;
			var m434 = _this7._21;
			var m534 = _this7._31;
			var m634 = _this7._13;
			var m734 = _this7._23;
			var m834 = _this7._33;
			var c024 = _this7._10 * (m434 * m834 - m534 * m734) - _this7._20 * (m334 * m834 - m534 * m634) + _this7._30 * (m334 * m734 - m434 * m634);
			var m335 = _this7._11;
			var m435 = _this7._21;
			var m535 = _this7._31;
			var m635 = _this7._12;
			var m735 = _this7._22;
			var m835 = _this7._32;
			var c034 = _this7._10 * (m435 * m835 - m535 * m735) - _this7._20 * (m335 * m835 - m535 * m635) + _this7._30 * (m335 * m735 - m435 * m635);
			var det4 = _this7._00 * c004 - _this7._01 * c014 + _this7._02 * c024 - _this7._03 * c034;
			if(Math.abs(det4) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m336 = _this7._02;
			var m436 = _this7._22;
			var m536 = _this7._32;
			var m636 = _this7._03;
			var m736 = _this7._23;
			var m836 = _this7._33;
			var m337 = _this7._02;
			var m437 = _this7._22;
			var m537 = _this7._32;
			var m637 = _this7._03;
			var m737 = _this7._23;
			var m837 = _this7._33;
			var m338 = _this7._01;
			var m438 = _this7._21;
			var m538 = _this7._31;
			var m638 = _this7._03;
			var m738 = _this7._23;
			var m838 = _this7._33;
			var m339 = _this7._01;
			var m439 = _this7._21;
			var m539 = _this7._31;
			var m639 = _this7._02;
			var m739 = _this7._22;
			var m839 = _this7._32;
			var m340 = _this7._02;
			var m440 = _this7._12;
			var m540 = _this7._32;
			var m640 = _this7._03;
			var m740 = _this7._13;
			var m840 = _this7._33;
			var m341 = _this7._02;
			var m441 = _this7._12;
			var m541 = _this7._32;
			var m641 = _this7._03;
			var m741 = _this7._13;
			var m841 = _this7._33;
			var m342 = _this7._01;
			var m442 = _this7._11;
			var m542 = _this7._31;
			var m642 = _this7._03;
			var m742 = _this7._13;
			var m842 = _this7._33;
			var m343 = _this7._01;
			var m443 = _this7._11;
			var m543 = _this7._31;
			var m643 = _this7._02;
			var m743 = _this7._12;
			var m843 = _this7._32;
			var m344 = _this7._02;
			var m444 = _this7._12;
			var m544 = _this7._22;
			var m644 = _this7._03;
			var m744 = _this7._13;
			var m844 = _this7._23;
			var m345 = _this7._02;
			var m445 = _this7._12;
			var m545 = _this7._22;
			var m645 = _this7._03;
			var m745 = _this7._13;
			var m845 = _this7._23;
			var m346 = _this7._01;
			var m446 = _this7._11;
			var m546 = _this7._21;
			var m646 = _this7._03;
			var m746 = _this7._13;
			var m846 = _this7._23;
			var m347 = _this7._01;
			var m447 = _this7._11;
			var m547 = _this7._21;
			var m647 = _this7._02;
			var m747 = _this7._12;
			var m847 = _this7._22;
			var invdet4 = 1.0 / det4;
			transform3 = new kha_math_FastMatrix4(c004 * invdet4,-c014 * invdet4,c024 * invdet4,-c034 * invdet4,-(_this7._01 * (m436 * m836 - m536 * m736) - _this7._21 * (m336 * m836 - m536 * m636) + _this7._31 * (m336 * m736 - m436 * m636)) * invdet4,(_this7._00 * (m437 * m837 - m537 * m737) - _this7._20 * (m337 * m837 - m537 * m637) + _this7._30 * (m337 * m737 - m437 * m637)) * invdet4,-(_this7._00 * (m438 * m838 - m538 * m738) - _this7._20 * (m338 * m838 - m538 * m638) + _this7._30 * (m338 * m738 - m438 * m638)) * invdet4,(_this7._00 * (m439 * m839 - m539 * m739) - _this7._20 * (m339 * m839 - m539 * m639) + _this7._30 * (m339 * m739 - m439 * m639)) * invdet4,(_this7._01 * (m440 * m840 - m540 * m740) - _this7._11 * (m340 * m840 - m540 * m640) + _this7._31 * (m340 * m740 - m440 * m640)) * invdet4,-(_this7._00 * (m441 * m841 - m541 * m741) - _this7._10 * (m341 * m841 - m541 * m641) + _this7._30 * (m341 * m741 - m441 * m641)) * invdet4,(_this7._00 * (m442 * m842 - m542 * m742) - _this7._10 * (m342 * m842 - m542 * m642) + _this7._30 * (m342 * m742 - m442 * m642)) * invdet4,-(_this7._00 * (m443 * m843 - m543 * m743) - _this7._10 * (m343 * m843 - m543 * m643) + _this7._30 * (m343 * m743 - m443 * m643)) * invdet4,-(_this7._01 * (m444 * m844 - m544 * m744) - _this7._11 * (m344 * m844 - m544 * m644) + _this7._21 * (m344 * m744 - m444 * m644)) * invdet4,(_this7._00 * (m445 * m845 - m545 * m745) - _this7._10 * (m345 * m845 - m545 * m645) + _this7._20 * (m345 * m745 - m445 * m645)) * invdet4,-(_this7._00 * (m446 * m846 - m546 * m746) - _this7._10 * (m346 * m846 - m546 * m646) + _this7._20 * (m346 * m746 - m446 * m646)) * invdet4,(_this7._00 * (m447 * m847 - m547 * m747) - _this7._10 * (m347 * m847 - m547 * m647) + _this7._20 * (m347 * m747 - m447 * m647)) * invdet4);
		} else {
			var _this8 = _this6.projection;
			var m2 = _this6.view;
			var _002 = _this8._00 * m2._00 + _this8._10 * m2._01 + _this8._20 * m2._02 + _this8._30 * m2._03;
			var _102 = _this8._00 * m2._10 + _this8._10 * m2._11 + _this8._20 * m2._12 + _this8._30 * m2._13;
			var _202 = _this8._00 * m2._20 + _this8._10 * m2._21 + _this8._20 * m2._22 + _this8._30 * m2._23;
			var _302 = _this8._00 * m2._30 + _this8._10 * m2._31 + _this8._20 * m2._32 + _this8._30 * m2._33;
			var _012 = _this8._01 * m2._00 + _this8._11 * m2._01 + _this8._21 * m2._02 + _this8._31 * m2._03;
			var _112 = _this8._01 * m2._10 + _this8._11 * m2._11 + _this8._21 * m2._12 + _this8._31 * m2._13;
			var _212 = _this8._01 * m2._20 + _this8._11 * m2._21 + _this8._21 * m2._22 + _this8._31 * m2._23;
			var _312 = _this8._01 * m2._30 + _this8._11 * m2._31 + _this8._21 * m2._32 + _this8._31 * m2._33;
			var _022 = _this8._02 * m2._00 + _this8._12 * m2._01 + _this8._22 * m2._02 + _this8._32 * m2._03;
			var _122 = _this8._02 * m2._10 + _this8._12 * m2._11 + _this8._22 * m2._12 + _this8._32 * m2._13;
			var _222 = _this8._02 * m2._20 + _this8._12 * m2._21 + _this8._22 * m2._22 + _this8._32 * m2._23;
			var _322 = _this8._02 * m2._30 + _this8._12 * m2._31 + _this8._22 * m2._32 + _this8._32 * m2._33;
			var _032 = _this8._03 * m2._00 + _this8._13 * m2._01 + _this8._23 * m2._02 + _this8._33 * m2._03;
			var _132 = _this8._03 * m2._10 + _this8._13 * m2._11 + _this8._23 * m2._12 + _this8._33 * m2._13;
			var _232 = _this8._03 * m2._20 + _this8._13 * m2._21 + _this8._23 * m2._22 + _this8._33 * m2._23;
			var _332 = _this8._03 * m2._30 + _this8._13 * m2._31 + _this8._23 * m2._32 + _this8._33 * m2._33;
			var c005 = _112 * (_222 * _332 - _322 * _232) - _212 * (_122 * _332 - _322 * _132) + _312 * (_122 * _232 - _222 * _132);
			var c015 = _102 * (_222 * _332 - _322 * _232) - _202 * (_122 * _332 - _322 * _132) + _302 * (_122 * _232 - _222 * _132);
			var c025 = _102 * (_212 * _332 - _312 * _232) - _202 * (_112 * _332 - _312 * _132) + _302 * (_112 * _232 - _212 * _132);
			var c035 = _102 * (_212 * _322 - _312 * _222) - _202 * (_112 * _322 - _312 * _122) + _302 * (_112 * _222 - _212 * _122);
			var det5 = _002 * c005 - _012 * c015 + _022 * c025 - _032 * c035;
			if(Math.abs(det5) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var invdet5 = 1.0 / det5;
			transform3 = new kha_math_FastMatrix4(c005 * invdet5,-c015 * invdet5,c025 * invdet5,-c035 * invdet5,-(_012 * (_222 * _332 - _322 * _232) - _212 * (_022 * _332 - _322 * _032) + _312 * (_022 * _232 - _222 * _032)) * invdet5,(_002 * (_222 * _332 - _322 * _232) - _202 * (_022 * _332 - _322 * _032) + _302 * (_022 * _232 - _222 * _032)) * invdet5,-(_002 * (_212 * _332 - _312 * _232) - _202 * (_012 * _332 - _312 * _032) + _302 * (_012 * _232 - _212 * _032)) * invdet5,(_002 * (_212 * _322 - _312 * _222) - _202 * (_012 * _322 - _312 * _022) + _302 * (_012 * _222 - _212 * _022)) * invdet5,(_012 * (_122 * _332 - _322 * _132) - _112 * (_022 * _332 - _322 * _032) + _312 * (_022 * _132 - _122 * _032)) * invdet5,-(_002 * (_122 * _332 - _322 * _132) - _102 * (_022 * _332 - _322 * _032) + _302 * (_022 * _132 - _122 * _032)) * invdet5,(_002 * (_112 * _332 - _312 * _132) - _102 * (_012 * _332 - _312 * _032) + _302 * (_012 * _132 - _112 * _032)) * invdet5,-(_002 * (_112 * _322 - _312 * _122) - _102 * (_012 * _322 - _312 * _022) + _302 * (_012 * _122 - _112 * _022)) * invdet5,-(_012 * (_122 * _232 - _222 * _132) - _112 * (_022 * _232 - _222 * _032) + _212 * (_022 * _132 - _122 * _032)) * invdet5,(_002 * (_122 * _232 - _222 * _132) - _102 * (_022 * _232 - _222 * _032) + _202 * (_022 * _132 - _122 * _032)) * invdet5,-(_002 * (_112 * _232 - _212 * _132) - _102 * (_012 * _232 - _212 * _032) + _202 * (_012 * _132 - _112 * _032)) * invdet5,(_002 * (_112 * _222 - _212 * _122) - _102 * (_012 * _222 - _212 * _022) + _202 * (_012 * _122 - _112 * _022)) * invdet5);
		}
		var x13 = homogeneousTargetX2;
		var y13 = homogeneousTargetY2;
		if(y13 == null) {
			y13 = 0;
		}
		if(x13 == null) {
			x13 = 0;
		}
		var value_x4 = x13;
		var value_y4 = y13;
		var value_z4 = -1;
		var value_w4 = 1;
		var farRaw_x2 = 0;
		var farRaw_y2 = 0;
		var farRaw_z2 = 0;
		var farRaw_w2 = 1;
		farRaw_x2 = transform3._00 * value_x4 + transform3._10 * value_y4 + transform3._20 * value_z4 + transform3._30 * value_w4;
		farRaw_y2 = transform3._01 * value_x4 + transform3._11 * value_y4 + transform3._21 * value_z4 + transform3._31 * value_w4;
		farRaw_z2 = transform3._02 * value_x4 + transform3._12 * value_y4 + transform3._22 * value_z4 + transform3._32 * value_w4;
		farRaw_w2 = transform3._03 * value_x4 + transform3._13 * value_y4 + transform3._23 * value_z4 + transform3._33 * value_w4;
		var x14 = homogeneousTargetX2;
		var y14 = homogeneousTargetY2;
		if(y14 == null) {
			y14 = 0;
		}
		if(x14 == null) {
			x14 = 0;
		}
		var value_x5 = x14;
		var value_y5 = y14;
		var value_z5 = 1;
		var value_w5 = 1;
		var nearRaw_x2 = 0;
		var nearRaw_y2 = 0;
		var nearRaw_z2 = 0;
		var nearRaw_w2 = 1;
		nearRaw_x2 = transform3._00 * value_x5 + transform3._10 * value_y5 + transform3._20 * value_z5 + transform3._30 * value_w5;
		nearRaw_y2 = transform3._01 * value_x5 + transform3._11 * value_y5 + transform3._21 * value_z5 + transform3._31 * value_w5;
		nearRaw_z2 = transform3._02 * value_x5 + transform3._12 * value_y5 + transform3._22 * value_z5 + transform3._32 * value_w5;
		nearRaw_w2 = transform3._03 * value_x5 + transform3._13 * value_y5 + transform3._23 * value_z5 + transform3._33 * value_w5;
		var value4 = 1 / farRaw_w2;
		var x15 = farRaw_x2 * value4;
		var y15 = farRaw_y2 * value4;
		var z6 = farRaw_z2 * value4;
		var w6 = farRaw_w2 * value4;
		if(w6 == null) {
			w6 = 1;
		}
		if(z6 == null) {
			z6 = 0;
		}
		if(y15 == null) {
			y15 = 0;
		}
		if(x15 == null) {
			x15 = 0;
		}
		var value5 = 1 / nearRaw_w2;
		var x16 = nearRaw_x2 * value5;
		var y16 = nearRaw_y2 * value5;
		var z7 = nearRaw_z2 * value5;
		var w7 = nearRaw_w2 * value5;
		if(w7 == null) {
			w7 = 1;
		}
		if(z7 == null) {
			z7 = 0;
		}
		if(y16 == null) {
			y16 = 0;
		}
		if(x16 == null) {
			x16 = 0;
		}
		var near_x2 = x16;
		var near_y2 = y16;
		var near_z2 = z7;
		var x17 = x15 - near_x2;
		var y17 = y15 - near_y2;
		var z8 = z6 - near_z2;
		var w8 = w6 - w7;
		if(w8 == null) {
			w8 = 1;
		}
		if(z8 == null) {
			z8 = 0;
		}
		if(y17 == null) {
			y17 = 0;
		}
		if(x17 == null) {
			x17 = 0;
		}
		var dir_z2 = z8;
		var x18 = near_x2 + x17 * ((0 - near_z2) / dir_z2);
		var y18 = near_y2 + y17 * ((0 - near_z2) / dir_z2);
		if(y18 == null) {
			y18 = 0;
		}
		if(x18 == null) {
			x18 = 0;
		}
		var point_x1 = x18;
		var point_y1 = y18;
		if(point_x1 < min_x) {
			min_x = point_x1;
		}
		if(point_y1 < min_y) {
			min_y = point_y1;
		}
		if(point_x1 > max_x) {
			max_x = point_x1;
		}
		if(point_y1 > max_y) {
			max_y = point_y1;
		}
		var _this9 = paintMode.camera;
		var targetY1 = paintMode.camera.height;
		var homogeneousTargetX3 = 0 / _this9.width * 2 - 1;
		var homogeneousTargetY3 = kha_Image.renderTargetsInvertedY() ? targetY1 / _this9.height * 2 - 1 : 1 - targetY1 / _this9.height * 2;
		var transform4;
		if(_this9.projectionIsOrthogonal) {
			homogeneousTargetX3 = 0 - _this9.width * 0.5;
			homogeneousTargetY3 = targetY1 - _this9.height * 0.5;
			var _this10 = _this9.view;
			var m348 = _this10._12;
			var m448 = _this10._22;
			var m548 = _this10._32;
			var m648 = _this10._13;
			var m748 = _this10._23;
			var m848 = _this10._33;
			var c006 = _this10._11 * (m448 * m848 - m548 * m748) - _this10._21 * (m348 * m848 - m548 * m648) + _this10._31 * (m348 * m748 - m448 * m648);
			var m349 = _this10._12;
			var m449 = _this10._22;
			var m549 = _this10._32;
			var m649 = _this10._13;
			var m749 = _this10._23;
			var m849 = _this10._33;
			var c016 = _this10._10 * (m449 * m849 - m549 * m749) - _this10._20 * (m349 * m849 - m549 * m649) + _this10._30 * (m349 * m749 - m449 * m649);
			var m350 = _this10._11;
			var m450 = _this10._21;
			var m550 = _this10._31;
			var m650 = _this10._13;
			var m750 = _this10._23;
			var m850 = _this10._33;
			var c026 = _this10._10 * (m450 * m850 - m550 * m750) - _this10._20 * (m350 * m850 - m550 * m650) + _this10._30 * (m350 * m750 - m450 * m650);
			var m351 = _this10._11;
			var m451 = _this10._21;
			var m551 = _this10._31;
			var m651 = _this10._12;
			var m751 = _this10._22;
			var m851 = _this10._32;
			var c036 = _this10._10 * (m451 * m851 - m551 * m751) - _this10._20 * (m351 * m851 - m551 * m651) + _this10._30 * (m351 * m751 - m451 * m651);
			var det6 = _this10._00 * c006 - _this10._01 * c016 + _this10._02 * c026 - _this10._03 * c036;
			if(Math.abs(det6) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var m352 = _this10._02;
			var m452 = _this10._22;
			var m552 = _this10._32;
			var m652 = _this10._03;
			var m752 = _this10._23;
			var m852 = _this10._33;
			var m353 = _this10._02;
			var m453 = _this10._22;
			var m553 = _this10._32;
			var m653 = _this10._03;
			var m753 = _this10._23;
			var m853 = _this10._33;
			var m354 = _this10._01;
			var m454 = _this10._21;
			var m554 = _this10._31;
			var m654 = _this10._03;
			var m754 = _this10._23;
			var m854 = _this10._33;
			var m355 = _this10._01;
			var m455 = _this10._21;
			var m555 = _this10._31;
			var m655 = _this10._02;
			var m755 = _this10._22;
			var m855 = _this10._32;
			var m356 = _this10._02;
			var m456 = _this10._12;
			var m556 = _this10._32;
			var m656 = _this10._03;
			var m756 = _this10._13;
			var m856 = _this10._33;
			var m357 = _this10._02;
			var m457 = _this10._12;
			var m557 = _this10._32;
			var m657 = _this10._03;
			var m757 = _this10._13;
			var m857 = _this10._33;
			var m358 = _this10._01;
			var m458 = _this10._11;
			var m558 = _this10._31;
			var m658 = _this10._03;
			var m758 = _this10._13;
			var m858 = _this10._33;
			var m359 = _this10._01;
			var m459 = _this10._11;
			var m559 = _this10._31;
			var m659 = _this10._02;
			var m759 = _this10._12;
			var m859 = _this10._32;
			var m360 = _this10._02;
			var m460 = _this10._12;
			var m560 = _this10._22;
			var m660 = _this10._03;
			var m760 = _this10._13;
			var m860 = _this10._23;
			var m361 = _this10._02;
			var m461 = _this10._12;
			var m561 = _this10._22;
			var m661 = _this10._03;
			var m761 = _this10._13;
			var m861 = _this10._23;
			var m362 = _this10._01;
			var m462 = _this10._11;
			var m562 = _this10._21;
			var m662 = _this10._03;
			var m762 = _this10._13;
			var m862 = _this10._23;
			var m363 = _this10._01;
			var m463 = _this10._11;
			var m563 = _this10._21;
			var m663 = _this10._02;
			var m763 = _this10._12;
			var m863 = _this10._22;
			var invdet6 = 1.0 / det6;
			transform4 = new kha_math_FastMatrix4(c006 * invdet6,-c016 * invdet6,c026 * invdet6,-c036 * invdet6,-(_this10._01 * (m452 * m852 - m552 * m752) - _this10._21 * (m352 * m852 - m552 * m652) + _this10._31 * (m352 * m752 - m452 * m652)) * invdet6,(_this10._00 * (m453 * m853 - m553 * m753) - _this10._20 * (m353 * m853 - m553 * m653) + _this10._30 * (m353 * m753 - m453 * m653)) * invdet6,-(_this10._00 * (m454 * m854 - m554 * m754) - _this10._20 * (m354 * m854 - m554 * m654) + _this10._30 * (m354 * m754 - m454 * m654)) * invdet6,(_this10._00 * (m455 * m855 - m555 * m755) - _this10._20 * (m355 * m855 - m555 * m655) + _this10._30 * (m355 * m755 - m455 * m655)) * invdet6,(_this10._01 * (m456 * m856 - m556 * m756) - _this10._11 * (m356 * m856 - m556 * m656) + _this10._31 * (m356 * m756 - m456 * m656)) * invdet6,-(_this10._00 * (m457 * m857 - m557 * m757) - _this10._10 * (m357 * m857 - m557 * m657) + _this10._30 * (m357 * m757 - m457 * m657)) * invdet6,(_this10._00 * (m458 * m858 - m558 * m758) - _this10._10 * (m358 * m858 - m558 * m658) + _this10._30 * (m358 * m758 - m458 * m658)) * invdet6,-(_this10._00 * (m459 * m859 - m559 * m759) - _this10._10 * (m359 * m859 - m559 * m659) + _this10._30 * (m359 * m759 - m459 * m659)) * invdet6,-(_this10._01 * (m460 * m860 - m560 * m760) - _this10._11 * (m360 * m860 - m560 * m660) + _this10._21 * (m360 * m760 - m460 * m660)) * invdet6,(_this10._00 * (m461 * m861 - m561 * m761) - _this10._10 * (m361 * m861 - m561 * m661) + _this10._20 * (m361 * m761 - m461 * m661)) * invdet6,-(_this10._00 * (m462 * m862 - m562 * m762) - _this10._10 * (m362 * m862 - m562 * m662) + _this10._20 * (m362 * m762 - m462 * m662)) * invdet6,(_this10._00 * (m463 * m863 - m563 * m763) - _this10._10 * (m363 * m863 - m563 * m663) + _this10._20 * (m363 * m763 - m463 * m663)) * invdet6);
		} else {
			var _this11 = _this9.projection;
			var m9 = _this9.view;
			var _003 = _this11._00 * m9._00 + _this11._10 * m9._01 + _this11._20 * m9._02 + _this11._30 * m9._03;
			var _103 = _this11._00 * m9._10 + _this11._10 * m9._11 + _this11._20 * m9._12 + _this11._30 * m9._13;
			var _203 = _this11._00 * m9._20 + _this11._10 * m9._21 + _this11._20 * m9._22 + _this11._30 * m9._23;
			var _303 = _this11._00 * m9._30 + _this11._10 * m9._31 + _this11._20 * m9._32 + _this11._30 * m9._33;
			var _013 = _this11._01 * m9._00 + _this11._11 * m9._01 + _this11._21 * m9._02 + _this11._31 * m9._03;
			var _113 = _this11._01 * m9._10 + _this11._11 * m9._11 + _this11._21 * m9._12 + _this11._31 * m9._13;
			var _213 = _this11._01 * m9._20 + _this11._11 * m9._21 + _this11._21 * m9._22 + _this11._31 * m9._23;
			var _313 = _this11._01 * m9._30 + _this11._11 * m9._31 + _this11._21 * m9._32 + _this11._31 * m9._33;
			var _023 = _this11._02 * m9._00 + _this11._12 * m9._01 + _this11._22 * m9._02 + _this11._32 * m9._03;
			var _123 = _this11._02 * m9._10 + _this11._12 * m9._11 + _this11._22 * m9._12 + _this11._32 * m9._13;
			var _223 = _this11._02 * m9._20 + _this11._12 * m9._21 + _this11._22 * m9._22 + _this11._32 * m9._23;
			var _323 = _this11._02 * m9._30 + _this11._12 * m9._31 + _this11._22 * m9._32 + _this11._32 * m9._33;
			var _033 = _this11._03 * m9._00 + _this11._13 * m9._01 + _this11._23 * m9._02 + _this11._33 * m9._03;
			var _133 = _this11._03 * m9._10 + _this11._13 * m9._11 + _this11._23 * m9._12 + _this11._33 * m9._13;
			var _233 = _this11._03 * m9._20 + _this11._13 * m9._21 + _this11._23 * m9._22 + _this11._33 * m9._23;
			var _333 = _this11._03 * m9._30 + _this11._13 * m9._31 + _this11._23 * m9._32 + _this11._33 * m9._33;
			var c007 = _113 * (_223 * _333 - _323 * _233) - _213 * (_123 * _333 - _323 * _133) + _313 * (_123 * _233 - _223 * _133);
			var c017 = _103 * (_223 * _333 - _323 * _233) - _203 * (_123 * _333 - _323 * _133) + _303 * (_123 * _233 - _223 * _133);
			var c027 = _103 * (_213 * _333 - _313 * _233) - _203 * (_113 * _333 - _313 * _133) + _303 * (_113 * _233 - _213 * _133);
			var c037 = _103 * (_213 * _323 - _313 * _223) - _203 * (_113 * _323 - _313 * _123) + _303 * (_113 * _223 - _213 * _123);
			var det7 = _003 * c007 - _013 * c017 + _023 * c027 - _033 * c037;
			if(Math.abs(det7) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var invdet7 = 1.0 / det7;
			transform4 = new kha_math_FastMatrix4(c007 * invdet7,-c017 * invdet7,c027 * invdet7,-c037 * invdet7,-(_013 * (_223 * _333 - _323 * _233) - _213 * (_023 * _333 - _323 * _033) + _313 * (_023 * _233 - _223 * _033)) * invdet7,(_003 * (_223 * _333 - _323 * _233) - _203 * (_023 * _333 - _323 * _033) + _303 * (_023 * _233 - _223 * _033)) * invdet7,-(_003 * (_213 * _333 - _313 * _233) - _203 * (_013 * _333 - _313 * _033) + _303 * (_013 * _233 - _213 * _033)) * invdet7,(_003 * (_213 * _323 - _313 * _223) - _203 * (_013 * _323 - _313 * _023) + _303 * (_013 * _223 - _213 * _023)) * invdet7,(_013 * (_123 * _333 - _323 * _133) - _113 * (_023 * _333 - _323 * _033) + _313 * (_023 * _133 - _123 * _033)) * invdet7,-(_003 * (_123 * _333 - _323 * _133) - _103 * (_023 * _333 - _323 * _033) + _303 * (_023 * _133 - _123 * _033)) * invdet7,(_003 * (_113 * _333 - _313 * _133) - _103 * (_013 * _333 - _313 * _033) + _303 * (_013 * _133 - _113 * _033)) * invdet7,-(_003 * (_113 * _323 - _313 * _123) - _103 * (_013 * _323 - _313 * _023) + _303 * (_013 * _123 - _113 * _023)) * invdet7,-(_013 * (_123 * _233 - _223 * _133) - _113 * (_023 * _233 - _223 * _033) + _213 * (_023 * _133 - _123 * _033)) * invdet7,(_003 * (_123 * _233 - _223 * _133) - _103 * (_023 * _233 - _223 * _033) + _203 * (_023 * _133 - _123 * _033)) * invdet7,-(_003 * (_113 * _233 - _213 * _133) - _103 * (_013 * _233 - _213 * _033) + _203 * (_013 * _133 - _113 * _033)) * invdet7,(_003 * (_113 * _223 - _213 * _123) - _103 * (_013 * _223 - _213 * _023) + _203 * (_013 * _123 - _113 * _023)) * invdet7);
		}
		var x19 = homogeneousTargetX3;
		var y19 = homogeneousTargetY3;
		if(y19 == null) {
			y19 = 0;
		}
		if(x19 == null) {
			x19 = 0;
		}
		var value_x6 = x19;
		var value_y6 = y19;
		var value_z6 = -1;
		var value_w6 = 1;
		var farRaw_x3 = 0;
		var farRaw_y3 = 0;
		var farRaw_z3 = 0;
		var farRaw_w3 = 1;
		farRaw_x3 = transform4._00 * value_x6 + transform4._10 * value_y6 + transform4._20 * value_z6 + transform4._30 * value_w6;
		farRaw_y3 = transform4._01 * value_x6 + transform4._11 * value_y6 + transform4._21 * value_z6 + transform4._31 * value_w6;
		farRaw_z3 = transform4._02 * value_x6 + transform4._12 * value_y6 + transform4._22 * value_z6 + transform4._32 * value_w6;
		farRaw_w3 = transform4._03 * value_x6 + transform4._13 * value_y6 + transform4._23 * value_z6 + transform4._33 * value_w6;
		var x20 = homogeneousTargetX3;
		var y20 = homogeneousTargetY3;
		if(y20 == null) {
			y20 = 0;
		}
		if(x20 == null) {
			x20 = 0;
		}
		var value_x7 = x20;
		var value_y7 = y20;
		var value_z7 = 1;
		var value_w7 = 1;
		var nearRaw_x3 = 0;
		var nearRaw_y3 = 0;
		var nearRaw_z3 = 0;
		var nearRaw_w3 = 1;
		nearRaw_x3 = transform4._00 * value_x7 + transform4._10 * value_y7 + transform4._20 * value_z7 + transform4._30 * value_w7;
		nearRaw_y3 = transform4._01 * value_x7 + transform4._11 * value_y7 + transform4._21 * value_z7 + transform4._31 * value_w7;
		nearRaw_z3 = transform4._02 * value_x7 + transform4._12 * value_y7 + transform4._22 * value_z7 + transform4._32 * value_w7;
		nearRaw_w3 = transform4._03 * value_x7 + transform4._13 * value_y7 + transform4._23 * value_z7 + transform4._33 * value_w7;
		var value6 = 1 / farRaw_w3;
		var x21 = farRaw_x3 * value6;
		var y21 = farRaw_y3 * value6;
		var z9 = farRaw_z3 * value6;
		var w9 = farRaw_w3 * value6;
		if(w9 == null) {
			w9 = 1;
		}
		if(z9 == null) {
			z9 = 0;
		}
		if(y21 == null) {
			y21 = 0;
		}
		if(x21 == null) {
			x21 = 0;
		}
		var value7 = 1 / nearRaw_w3;
		var x22 = nearRaw_x3 * value7;
		var y22 = nearRaw_y3 * value7;
		var z10 = nearRaw_z3 * value7;
		var w10 = nearRaw_w3 * value7;
		if(w10 == null) {
			w10 = 1;
		}
		if(z10 == null) {
			z10 = 0;
		}
		if(y22 == null) {
			y22 = 0;
		}
		if(x22 == null) {
			x22 = 0;
		}
		var near_x3 = x22;
		var near_y3 = y22;
		var near_z3 = z10;
		var x23 = x21 - near_x3;
		var y23 = y21 - near_y3;
		var z11 = z9 - near_z3;
		var w11 = w9 - w10;
		if(w11 == null) {
			w11 = 1;
		}
		if(z11 == null) {
			z11 = 0;
		}
		if(y23 == null) {
			y23 = 0;
		}
		if(x23 == null) {
			x23 = 0;
		}
		var dir_z3 = z11;
		var x24 = near_x3 + x23 * ((0 - near_z3) / dir_z3);
		var y24 = near_y3 + y23 * ((0 - near_z3) / dir_z3);
		if(y24 == null) {
			y24 = 0;
		}
		if(x24 == null) {
			x24 = 0;
		}
		var point_x2 = x24;
		var point_y2 = y24;
		if(point_x2 < min_x) {
			min_x = point_x2;
		}
		if(point_y2 < min_y) {
			min_y = point_y2;
		}
		if(point_x2 > max_x) {
			max_x = point_x2;
		}
		if(point_y2 > max_y) {
			max_y = point_y2;
		}
		var startInTilesX = (min_x / this.tileWidth | 0) - 1;
		var endInTilesX = (max_x / this.tileWidth | 0) + 1;
		var startInTilesY = (min_y / this.tileHeight | 0) - 1;
		var endInTilesY = (max_y / this.tileHeight | 0) + 1;
		if(startInTilesX < 0) {
			startInTilesX = 0;
		}
		if(startInTilesY < 0) {
			startInTilesY = 0;
		}
		if(endInTilesX > this.widthInTiles) {
			endInTilesX = this.widthInTiles;
		}
		if(endInTilesY > this.heightInTiles) {
			endInTilesY = this.heightInTiles;
		}
		var _g = startInTilesY;
		var _g1 = endInTilesY;
		while(_g < _g1) {
			var y25 = _g++;
			var _g2 = startInTilesX;
			var _g11 = endInTilesX;
			while(_g2 < _g11) {
				var x25 = _g2++;
				var index = x25 + this.widthInTiles * y25;
				if(index >= 0 && index < this.tiles.length) {
					var frame = this.tiles[index];
					var orientation = this.orientation[index];
					if(frame >= 0) {
						this.tile.timeline.gotoAndStop(frame);
						this.tile.x = x25 * this.tileWidth;
						this.tile.y = y25 * this.tileHeight;
						if((orientation & 4) != 0) {
							this.tile.set_rotation(Math.PI * 0.5);
							this.tile.scaleX = (orientation & 2) != 0 ? -1 : 1;
							this.tile.scaleY = (orientation & 1) != 0 ? 1 : -1;
						} else {
							this.tile.set_rotation(0);
							this.tile.scaleX = (orientation & 1) != 0 ? -1 : 1;
							this.tile.scaleY = (orientation & 2) != 0 ? -1 : 1;
						}
						this.tile.render(paintMode,transform);
					}
				}
			}
		}
	}
	,__class__: com_gEngine_display_extra_TileMapDisplay
});
var com_gEngine_helper_RectangleDisplay = function() {
	this.animationData = com_gEngine_helper_RectangleDisplay.data;
	com_gEngine_display_Sprite.call(this);
};
$hxClasses["com.gEngine.helper.RectangleDisplay"] = com_gEngine_helper_RectangleDisplay;
com_gEngine_helper_RectangleDisplay.__name__ = "com.gEngine.helper.RectangleDisplay";
com_gEngine_helper_RectangleDisplay.init = function(textureID) {
	com_gEngine_helper_RectangleDisplay.data = new com_gEngine_AnimationData();
	com_gEngine_helper_RectangleDisplay.data.name = "rec?";
	var frame = new com_gEngine_Frame();
	frame.drawArea = new com_gEngine_DrawArea(0,0,1,1);
	frame.vertexs = [0,0,1,0,0,1,1,1];
	frame.UVs = [0,0,1,0,0,1,1,1];
	com_gEngine_helper_RectangleDisplay.data.frames = [frame];
	com_gEngine_helper_RectangleDisplay.data.texturesID = textureID;
};
com_gEngine_helper_RectangleDisplay.__super__ = com_gEngine_display_Sprite;
com_gEngine_helper_RectangleDisplay.prototype = $extend(com_gEngine_display_Sprite.prototype,{
	__class__: com_gEngine_helper_RectangleDisplay
});
var com_gEngine_helper_Timeline = function(frameRate,totalFrames,labels) {
	this.currentTime = 0;
	this.lastFrame = 0;
	this.firstFrame = 0;
	this.loop = true;
	this.playing = true;
	this.currentFrame = 0;
	this.frameSkiped = 0;
	this.frameRate = frameRate;
	this.lastFrame = totalFrames - 1;
	this.totalFrames = totalFrames;
	if(totalFrames == 1) {
		this.playing = false;
	}
	this.labels = labels;
	this.frameJump = true;
};
$hxClasses["com.gEngine.helper.Timeline"] = com_gEngine_helper_Timeline;
com_gEngine_helper_Timeline.__name__ = "com.gEngine.helper.Timeline";
com_gEngine_helper_Timeline.prototype = {
	update: function(dt) {
		this.frameChange = false;
		this.frameSkiped = 0;
		this.frameJump = false;
		if(!this.playing) {
			return;
		}
		this.currentTime += dt;
		if(this.currentTime < this.frameRate) {
			return;
		}
		this.frameChange = true;
		this.frameSkiped = Math.floor(this.currentTime / this.frameRate);
		this.currentTime -= this.frameRate * this.frameSkiped;
		this.currentFrame += this.frameSkiped;
		if(this.currentFrame >= this.totalFrames) {
			if(this.loop) {
				if(this.currentFrame != this.firstFrame) {
					this.frameJump = true;
				}
				this.currentFrame = this.firstFrame;
			} else {
				this.currentFrame = this.totalFrames - 1;
				this.playing = false;
			}
		}
		if(this.currentFrame <= this.lastFrame && this.currentFrame >= this.firstFrame) {
			return;
		}
		if(this.currentAnimation != null) {
			if(this.loop) {
				this.gotoAndPlay(this.firstFrame);
			} else {
				this.gotoAndStop(this.lastFrame);
			}
		}
	}
	,gotoAndPlay: function(frame) {
		this.currentFrame = frame;
		this.currentTime = 0;
		this.playing = true;
		this.frameJump = true;
	}
	,gotoAndStop: function(frame) {
		this.currentFrame = frame;
		this.currentTime = 0;
		this.playing = false;
		this.frameJump = true;
	}
	,labelFrame: function(text) {
		var _g = 0;
		var _g1 = this.labels;
		while(_g < _g1.length) {
			var label = _g1[_g];
			++_g;
			if(label.text == text) {
				return label;
			}
		}
		throw new js__$Boot_HaxeError("label " + text + "not found");
	}
	,labelEnd: function(text) {
		var counter = 0;
		var _g = 0;
		var _g1 = this.labels;
		while(_g < _g1.length) {
			if(_g1[_g++].text == text) {
				if(this.labels.length == counter + 1) {
					return this.totalFrames - 1;
				}
				return this.labels[counter + 1].frame - 1;
			}
			++counter;
		}
		throw new js__$Boot_HaxeError("label " + text + "not found");
	}
	,labelEndEvent: function(text,indexStart,prefixIgnore) {
		if(indexStart == null) {
			indexStart = 0;
		}
		var _g = indexStart;
		var _g1 = this.labels.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.labels[i].text == text) {
				if(this.labels.length == i + 1) {
					return this.totalFrames - 1;
				}
				if(this.labels[i + 1].text.indexOf(prefixIgnore) == 0) {
					return this.labelEndEvent(this.labels[i + 1].text,i + 1,prefixIgnore);
				}
				return this.labels[i + 1].frame - 1;
			}
		}
		throw new js__$Boot_HaxeError("label " + text + "not found");
	}
	,playAnimation: function(animation,loop,force,prefixCharIgnore) {
		if(force == null) {
			force = false;
		}
		if(loop == null) {
			loop = true;
		}
		var firstAnimationFrame = this.labelFrame(animation).frame;
		this.loop = loop;
		if((this.currentAnimation != animation || force || !this.playing) && firstAnimationFrame != -1) {
			this.currentAnimation = animation;
			this.firstFrame = firstAnimationFrame;
			this.lastFrame = prefixCharIgnore == null ? this.labelEnd(this.currentAnimation) : this.labelEndEvent(animation,null,prefixCharIgnore);
			this.gotoAndPlay(this.firstFrame);
		}
	}
	,__class__: com_gEngine_helper_Timeline
};
var com_gEngine_painters_IPainter = function() { };
$hxClasses["com.gEngine.painters.IPainter"] = com_gEngine_painters_IPainter;
com_gEngine_painters_IPainter.__name__ = "com.gEngine.painters.IPainter";
com_gEngine_painters_IPainter.__isInterface__ = true;
com_gEngine_painters_IPainter.prototype = {
	__class__: com_gEngine_painters_IPainter
};
var com_gEngine_painters_PaintInfo = function() {
};
$hxClasses["com.gEngine.painters.PaintInfo"] = com_gEngine_painters_PaintInfo;
com_gEngine_painters_PaintInfo.__name__ = "com.gEngine.painters.PaintInfo";
com_gEngine_painters_PaintInfo.prototype = {
	__class__: com_gEngine_painters_PaintInfo
};
var com_gEngine_painters_PaintMode = function() {
	this.mulA = 1;
	this.mulB = 1;
	this.mulG = 1;
	this.mulR = 1;
	this.renderArea = [];
	this.renderAreaUnion = new com_helpers_MinMax();
};
$hxClasses["com.gEngine.painters.PaintMode"] = com_gEngine_painters_PaintMode;
com_gEngine_painters_PaintMode.__name__ = "com.gEngine.painters.PaintMode";
com_gEngine_painters_PaintMode.prototype = {
	render: function(clear) {
		if(clear == null) {
			clear = false;
		}
		if(this.currentPainter != null) {
			this.currentPainter.setProjection(this.camera.projection);
			if(this.renderArea.length > 0) {
				this.currentPainter.render(clear,this.renderAreaUnion);
			} else {
				this.currentPainter.render(clear);
			}
		}
	}
	,changePainter: function(painter,paintInfo) {
		this.currentPainter = painter;
		this.currentPainter.textureID = paintInfo.texture;
		this.currentPainter.mipMapFilter = paintInfo.mipMapFilter;
		this.currentPainter.filter = paintInfo.textureFilter;
		this.paintInfo = paintInfo;
	}
	,canBatch: function(info,size,painter) {
		if(this.currentPainter == painter) {
			return this.currentPainter.canBatch(info,size);
		} else {
			return false;
		}
	}
	,adjustRenderArea: function(area) {
		if(this.renderArea.push(area) == 1) {
			var _this = this.renderAreaUnion;
			var _this1 = _this.max;
			var x = area.max.x;
			var y = area.max.y;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			_this1.x = x;
			_this1.y = y;
			var _this2 = _this.min;
			var x1 = area.min.x;
			var y1 = area.min.y;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this2.x = x1;
			_this2.y = y1;
			_this.minZ = -869.1168;
			_this.maxZ = -869.1168;
			_this.isEmpty = _this.width() < 0 || _this.height() < 0;
		} else {
			this.renderAreaUnion.intersection(area);
		}
	}
	,resetRenderArea: function() {
		this.renderArea.pop();
		var _this = this.renderAreaUnion;
		var _this1 = _this.min;
		var x = Infinity;
		var y = Infinity;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		_this1.x = x;
		_this1.y = y;
		var _this2 = _this.max;
		var x1 = -Infinity;
		var y1 = -Infinity;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		_this2.x = x1;
		_this2.y = y1;
		_this.minZ = Infinity;
		_this.maxZ = -Infinity;
		_this.isEmpty = true;
		var _g = 0;
		var _g1 = this.renderArea;
		while(_g < _g1.length) this.renderAreaUnion.intersection(_g1[_g++]);
	}
	,getRenderArea: function() {
		return this.renderAreaUnion;
	}
	,hasRenderArea: function() {
		return this.renderArea.length > 0;
	}
	,vertexCount: function() {
		if(this.currentPainter != null) {
			return this.currentPainter.vertexCount();
		}
		return 0;
	}
	,__class__: com_gEngine_painters_PaintMode
};
var com_gEngine_painters_Painter = function(autoDestroy,blend,depthWrite,clockWise) {
	if(clockWise == null) {
		clockWise = 2;
	}
	if(depthWrite == null) {
		depthWrite = false;
	}
	if(autoDestroy == null) {
		autoDestroy = true;
	}
	this.mipMapFilter = 0;
	this.filter = 1;
	this.textureID = -1;
	this.counter = 0;
	this.resolution = 1;
	this.canvasHeight = 0;
	this.canvasWidth = 0;
	this.dataPerVertex = 5;
	this.alpha = 0.;
	this.blue = 0.;
	this.green = 0.;
	this.red = 0.;
	if(blend == null) {
		blend = com_gEngine_display_Blend.blendDefault();
	}
	if(autoDestroy) {
		com_gEngine_PainterGarbage.get_i().add(this);
	}
	this.depthWrite = depthWrite;
	this.clockWise = clockWise;
	this.initShaders(blend);
	this.createBuffers();
	this.buffer = this.downloadVertexBuffer();
};
$hxClasses["com.gEngine.painters.Painter"] = com_gEngine_painters_Painter;
com_gEngine_painters_Painter.__name__ = "com.gEngine.painters.Painter";
com_gEngine_painters_Painter.__interfaces__ = [com_gEngine_painters_IPainter];
com_gEngine_painters_Painter.prototype = {
	write: function(value) {
		this.buffer[this.counter++] = value;
	}
	,render: function(clear,cropArea) {
		if(clear == null) {
			clear = false;
		}
		if(this.counter == 0) {
			return;
		}
		var vertexCount = this.counter / this.dataPerVertex | 0;
		var canvas = com_gEngine_GEngine.get_i().currentCanvas();
		this.canvasWidth = canvas.get_width();
		this.canvasHeight = canvas.get_height();
		var g = canvas.get_g4();
		this.uploadVertexBuffer(vertexCount);
		if(clear) {
			g.clear(kha__$Color_Color_$Impl_$.fromFloats(this.red,this.green,this.blue,this.alpha),1);
		}
		g.setVertexBuffer(this.vertexBuffer);
		g.setIndexBuffer(this.indexBuffer);
		g.setPipeline(this.pipeline);
		this.setParameter(g);
		g.setTextureParameters(this.textureConstantID,2,2,this.filter,this.filter,this.mipMapFilter);
		g.drawIndexedVertices(0,vertexCount * 1.5 | 0);
		this.unsetTextures(g);
		this.buffer = this.downloadVertexBuffer();
		++com_gEngine_GEngine.drawCount;
		this.counter = 0;
	}
	,vertexCount: function() {
		return this.counter / this.dataPerVertex | 0;
	}
	,initShaders: function(blend) {
		this.pipeline = new kha_graphics4_PipelineState();
		this.structure = new kha_graphics4_VertexStructure();
		this.defineVertexStructure(this.structure);
		this.pipeline.inputLayout = [this.structure];
		this.pipeline.depthMode = 4;
		this.pipeline.cullMode = this.clockWise;
		this.pipeline.depthWrite = this.depthWrite;
		this.setShaders(this.pipeline);
		var pipeline = this.pipeline;
		pipeline.blendOperation = blend.blendOperation;
		pipeline.blendSource = blend.blendSource;
		pipeline.blendDestination = blend.blendDestination;
		pipeline.alphaBlendSource = blend.alphaBlendSource;
		pipeline.alphaBlendDestination = blend.alphaBlendDestination;
		this.pipeline.compile();
		this.getConstantLocations(this.pipeline);
	}
	,getConstantLocations: function(pipeline) {
		this.mvpID = pipeline.getConstantLocation("projectionMatrix");
		this.textureConstantID = pipeline.getTextureUnit("tex");
	}
	,createBuffers: function() {
		this.vertexBuffer = new kha_graphics4_VertexBuffer(4000,this.structure,1);
		this.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
		var iData = this.indexBuffer.lock();
		var _g = 0;
		while(_g < 1000) {
			var i = _g++;
			iData[i * 6] = i * 4 + 1;
			iData[i * 6 + 1] = i * 4;
			iData[i * 6 + 2] = i * 4 + 2;
			iData[i * 6 + 3] = i * 4 + 1;
			iData[i * 6 + 4] = i * 4 + 2;
			iData[i * 6 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,defineVertexStructure: function(structure) {
		structure.add("vertexPosition",2);
		structure.add("texPosition",1);
	}
	,setShaders: function(pipeline) {
		pipeline.vertexShader = kha_Shaders.simple_vert;
		pipeline.fragmentShader = kha_Shaders.simple_frag;
	}
	,setParameter: function(g) {
		g.setMatrix(this.mvpID,this.projection);
		g.setTexture(this.textureConstantID,com_gEngine_GEngine.get_i().textures[this.textureID]);
	}
	,unsetTextures: function(g) {
		g.setTexture(this.textureConstantID,null);
	}
	,downloadVertexBuffer: function() {
		return this.vertexBuffer.lock();
	}
	,uploadVertexBuffer: function(count) {
		this.vertexBuffer.unlock(count);
	}
	,destroy: function() {
		this.vertexBuffer.delete();
		this.indexBuffer.delete();
		this.pipeline.delete();
	}
	,adjustRenderArea: function(area) {
	}
	,canBatch: function(info,size) {
		if(info.texture == this.textureID && info.mipMapFilter == this.mipMapFilter && info.textureFilter == this.filter) {
			return this.counter + size * this.dataPerVertex <= 4000 * this.dataPerVertex;
		} else {
			return false;
		}
	}
	,setProjection: function(proj) {
		this.projection = proj;
	}
	,releaseTexture: function() {
		return true;
	}
	,getVertexDataCounter: function() {
		return this.counter;
	}
	,setVertexDataCounter: function(data) {
		this.counter = data;
	}
	,getVertexBuffer: function() {
		return this.buffer;
	}
	,__class__: com_gEngine_painters_Painter
};
var com_gEngine_painters_PainterAlpha = function(autoDestroy,blend) {
	if(autoDestroy == null) {
		autoDestroy = true;
	}
	com_gEngine_painters_Painter.call(this,autoDestroy,blend);
	this.dataPerVertex = 6;
};
$hxClasses["com.gEngine.painters.PainterAlpha"] = com_gEngine_painters_PainterAlpha;
com_gEngine_painters_PainterAlpha.__name__ = "com.gEngine.painters.PainterAlpha";
com_gEngine_painters_PainterAlpha.__super__ = com_gEngine_painters_Painter;
com_gEngine_painters_PainterAlpha.prototype = $extend(com_gEngine_painters_Painter.prototype,{
	defineVertexStructure: function(structure) {
		structure.add("vertexPosition",2);
		structure.add("texPosition",2);
	}
	,setShaders: function(pipeline) {
		pipeline.vertexShader = kha_Shaders.simpleAlpha_vert;
		pipeline.fragmentShader = kha_Shaders.simpleAlpha_frag;
	}
	,__class__: com_gEngine_painters_PainterAlpha
});
var com_gEngine_painters_PainterColorTransform = function(autoDestroy,blend,depthWrite) {
	if(depthWrite == null) {
		depthWrite = false;
	}
	if(autoDestroy == null) {
		autoDestroy = true;
	}
	com_gEngine_painters_Painter.call(this,autoDestroy,blend,depthWrite);
	this.dataPerVertex = 13;
};
$hxClasses["com.gEngine.painters.PainterColorTransform"] = com_gEngine_painters_PainterColorTransform;
com_gEngine_painters_PainterColorTransform.__name__ = "com.gEngine.painters.PainterColorTransform";
com_gEngine_painters_PainterColorTransform.__super__ = com_gEngine_painters_Painter;
com_gEngine_painters_PainterColorTransform.prototype = $extend(com_gEngine_painters_Painter.prototype,{
	defineVertexStructure: function(structure) {
		structure.add("vertexPosition",2);
		structure.add("texPosition",1);
		structure.add("colorMul",3);
		structure.add("colorAdd",3);
	}
	,setShaders: function(pipeline) {
		pipeline.vertexShader = kha_Shaders.simpleColorTransformation_vert;
		pipeline.fragmentShader = kha_Shaders.simpleColorTransformation_frag;
	}
	,__class__: com_gEngine_painters_PainterColorTransform
});
var com_gEngine_shaders_RenderPass = function(filters,renderAtEnd) {
	this.filters = filters;
	this.renderAtEnd = renderAtEnd;
};
$hxClasses["com.gEngine.shaders.RenderPass"] = com_gEngine_shaders_RenderPass;
com_gEngine_shaders_RenderPass.__name__ = "com.gEngine.shaders.RenderPass";
com_gEngine_shaders_RenderPass.prototype = {
	__class__: com_gEngine_shaders_RenderPass
};
var com_gEngine_shaders_ShDontRender = function(autoDestroy) {
	if(autoDestroy == null) {
		autoDestroy = true;
	}
	com_gEngine_painters_Painter.call(this,autoDestroy);
};
$hxClasses["com.gEngine.shaders.ShDontRender"] = com_gEngine_shaders_ShDontRender;
com_gEngine_shaders_ShDontRender.__name__ = "com.gEngine.shaders.ShDontRender";
com_gEngine_shaders_ShDontRender.__super__ = com_gEngine_painters_Painter;
com_gEngine_shaders_ShDontRender.prototype = $extend(com_gEngine_painters_Painter.prototype,{
	__class__: com_gEngine_shaders_ShDontRender
});
var com_gEngine_shaders_ShRender = function(directDraw) {
	if(directDraw == null) {
		directDraw = true;
	}
	this.directDraw = directDraw;
	com_gEngine_painters_Painter.call(this,true);
};
$hxClasses["com.gEngine.shaders.ShRender"] = com_gEngine_shaders_ShRender;
com_gEngine_shaders_ShRender.__name__ = "com.gEngine.shaders.ShRender";
com_gEngine_shaders_ShRender.__super__ = com_gEngine_painters_Painter;
com_gEngine_shaders_ShRender.prototype = $extend(com_gEngine_painters_Painter.prototype,{
	__class__: com_gEngine_shaders_ShRender
});
var com_gEngine_shaders_ShRetro = function(blend) {
	this.time = 0;
	com_gEngine_painters_Painter.call(this,true,blend);
};
$hxClasses["com.gEngine.shaders.ShRetro"] = com_gEngine_shaders_ShRetro;
com_gEngine_shaders_ShRetro.__name__ = "com.gEngine.shaders.ShRetro";
com_gEngine_shaders_ShRetro.__super__ = com_gEngine_painters_Painter;
com_gEngine_shaders_ShRetro.prototype = $extend(com_gEngine_painters_Painter.prototype,{
	getConstantLocations: function(pipeline) {
		com_gEngine_painters_Painter.prototype.getConstantLocations.call(this,pipeline);
		this.mTimer = pipeline.getConstantLocation("time");
	}
	,setShaders: function(pipeline) {
		pipeline.vertexShader = kha_Shaders.simpleTime_vert;
		pipeline.fragmentShader = kha_Shaders.rgbSplit_frag;
	}
	,setParameter: function(g) {
		this.time += com_TimeManager.delta * 5;
		com_gEngine_painters_Painter.prototype.setParameter.call(this,g);
		g.setFloat(this.mTimer,this.time);
	}
	,__class__: com_gEngine_shaders_ShRetro
});
var com_helpers_FastPoint = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["com.helpers.FastPoint"] = com_helpers_FastPoint;
com_helpers_FastPoint.__name__ = "com.helpers.FastPoint";
com_helpers_FastPoint.prototype = {
	__class__: com_helpers_FastPoint
};
var com_helpers_MinMax = function() {
	this.maxZ = -869.1168;
	this.minZ = -869.1168;
	this.min = new com_helpers_FastPoint(Infinity,Infinity);
	this.max = new com_helpers_FastPoint(-Infinity,-Infinity);
};
$hxClasses["com.helpers.MinMax"] = com_helpers_MinMax;
com_helpers_MinMax.__name__ = "com.helpers.MinMax";
com_helpers_MinMax.from = function(left,top,right,bottom) {
	var minMax = new com_helpers_MinMax();
	minMax.min.x = left;
	minMax.min.y = top;
	minMax.max.x = right;
	minMax.max.y = bottom;
	minMax.isEmpty = minMax.width() < 0 || minMax.height() < 0;
	return minMax;
};
com_helpers_MinMax.prototype = {
	merge: function(value) {
		if(this.min.x > value.min.x) {
			this.min.x = value.min.x;
		}
		if(this.min.y > value.min.y) {
			this.min.y = value.min.y;
		}
		if(this.max.x < value.max.x) {
			this.max.x = value.max.x;
		}
		if(this.max.y < value.max.y) {
			this.max.y = value.max.y;
		}
		if(this.minZ > value.minZ) {
			this.minZ = value.minZ;
		}
		if(this.maxZ < value.maxZ) {
			this.maxZ = value.maxZ;
		}
		this.isEmpty = this.isEmpty && value.isEmpty;
	}
	,intersection: function(value) {
		if(this.min.x > value.max.x || this.max.x < value.min.x || this.min.y > value.max.y || this.max.y < value.min.y) {
			this.isEmpty = true;
			var _this = this.min;
			var x = Infinity;
			var y = Infinity;
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			_this.x = x;
			_this.y = y;
			var _this1 = this.max;
			var x1 = -Infinity;
			var y1 = -Infinity;
			if(y1 == null) {
				y1 = 0;
			}
			if(x1 == null) {
				x1 = 0;
			}
			_this1.x = x1;
			_this1.y = y1;
			this.minZ = Infinity;
			this.maxZ = -Infinity;
			this.isEmpty = true;
			return;
		}
		if(this.min.x < value.min.x) {
			this.min.x = value.min.x;
		}
		if(this.min.y < value.min.y) {
			this.min.y = value.min.y;
		}
		if(this.max.x > value.max.x) {
			this.max.x = value.max.x;
		}
		if(this.max.y > value.max.y) {
			this.max.y = value.max.y;
		}
	}
	,width: function() {
		return this.max.x - this.min.x;
	}
	,height: function() {
		return this.max.y - this.min.y;
	}
	,__class__: com_helpers_MinMax
};
var com_helpers_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["com.helpers.Point"] = com_helpers_Point;
com_helpers_Point.__name__ = "com.helpers.Point";
com_helpers_Point.prototype = {
	__class__: com_helpers_Point
};
var com_helpers_Rectangle = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["com.helpers.Rectangle"] = com_helpers_Rectangle;
com_helpers_Rectangle.__name__ = "com.helpers.Rectangle";
com_helpers_Rectangle.prototype = {
	clone: function() {
		return new com_helpers_Rectangle(this.x,this.y,this.width,this.height);
	}
	,__class__: com_helpers_Rectangle
};
var com_helpers_RenderTargetPool = function() {
	this.targets = [];
};
$hxClasses["com.helpers.RenderTargetPool"] = com_helpers_RenderTargetPool;
com_helpers_RenderTargetPool.__name__ = "com.helpers.RenderTargetPool";
com_helpers_RenderTargetPool.prototype = {
	getFreeImageId: function(width,height) {
		var _g = 0;
		var _g1 = this.targets;
		while(_g < _g1.length) {
			var target = _g1[_g];
			++_g;
			if(!target.inUse && target.width == width && target.height == height) {
				target.inUse = true;
				return target.textureId;
			}
		}
		return -1;
	}
	,addRenderTarget: function(id,width,height) {
		this.targets.push(new com_helpers_ImageProx(id,width,height));
	}
	,release: function(id) {
		var _g = 0;
		var _g1 = this.targets;
		while(_g < _g1.length) {
			var target = _g1[_g];
			++_g;
			if(target.textureId == id) {
				target.inUse = false;
				return;
			}
		}
		throw new js__$Boot_HaxeError("render target " + id + " not found");
	}
	,clear: function() {
		this.targets.splice(0,this.targets.length);
	}
	,__class__: com_helpers_RenderTargetPool
};
var com_helpers_ImageProx = function(id,width,height) {
	this.inUse = true;
	this.textureId = id;
	this.width = width;
	this.height = height;
};
$hxClasses["com.helpers.ImageProx"] = com_helpers_ImageProx;
com_helpers_ImageProx.__name__ = "com.helpers.ImageProx";
com_helpers_ImageProx.prototype = {
	__class__: com_helpers_ImageProx
};
var com_imageAtlas_AtlasGenerator = function() { };
$hxClasses["com.imageAtlas.AtlasGenerator"] = com_imageAtlas_AtlasGenerator;
com_imageAtlas_AtlasGenerator.__name__ = "com.imageAtlas.AtlasGenerator";
com_imageAtlas_AtlasGenerator.generate = function(width,height,bitmaps,separation) {
	if(separation == null) {
		separation = 2;
	}
	if(com_imageAtlas_AtlasGenerator.clearPipeline == null) {
		com_imageAtlas_AtlasGenerator.clearPipeline = com_imageAtlas_AtlasGenerator.createClearPipeline();
	}
	bitmaps.sort(com_imageAtlas_AtlasGenerator.sortArea);
	var atlasImage = kha_Image.createRenderTarget(width,height,0,0,0);
	var realWidth = atlasImage.get_realWidth();
	var realHeight = atlasImage.get_realWidth();
	var atlasMap = new com_imageAtlas_ImageTree(width,height,separation);
	var g = atlasImage.get_g2();
	g.begin(true,kha__$Color_Color_$Impl_$.fromFloats(0,0,0,0));
	var _g = 0;
	while(_g < bitmaps.length) {
		var bitmap = bitmaps[_g];
		++_g;
		var rectangle = atlasMap.insertImage(bitmap);
		if(bitmap.hasPreRender) {
			g.end();
			g.begin(false);
		}
		if(bitmap.specialPipeline != null) {
			g.set_pipeline(bitmap.specialPipeline);
		} else {
			g.set_pipeline(com_imageAtlas_AtlasGenerator.clearPipeline);
		}
		g.set_imageScaleQuality(1);
		if(bitmap.hasMipMap) {
			g.set_mipmapScaleQuality(1);
		} else {
			g.set_mipmapScaleQuality(0);
		}
		g.set_imageScaleQuality(0);
		g.drawScaledSubImage(bitmap.image,bitmap.x * bitmap.scaleX,bitmap.y * bitmap.scaleY,bitmap.width * bitmap.scaleX,bitmap.height * bitmap.scaleY,rectangle.x - 1,rectangle.y,bitmap.width + 2,bitmap.height);
		g.drawScaledSubImage(bitmap.image,bitmap.x * bitmap.scaleX,bitmap.y * bitmap.scaleY,bitmap.width * bitmap.scaleX,bitmap.height * bitmap.scaleY,rectangle.x,rectangle.y - 1,bitmap.width,bitmap.height + 2);
		g.set_color(kha__$Color_Color_$Impl_$.fromFloats(1,1,1,1));
		g.set_imageScaleQuality(1);
		g.drawScaledSubImage(bitmap.image,bitmap.x * bitmap.scaleX,bitmap.y * bitmap.scaleY,bitmap.width * bitmap.scaleX,bitmap.height * bitmap.scaleY,rectangle.x,rectangle.y,bitmap.width,bitmap.height);
		rectangle.x += bitmap.extrude;
		rectangle.y += bitmap.extrude;
		rectangle.width += -separation * 2 - bitmap.extrude * 2;
		rectangle.height += -separation * 2 - bitmap.extrude * 2;
		var _this = bitmap.minUV;
		var x = rectangle.x / realWidth;
		var y = rectangle.y / realHeight;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		_this.x = x;
		_this.y = y;
		var _this1 = bitmap.maxUV;
		var x1 = (rectangle.x + rectangle.width) / realWidth;
		var y1 = (rectangle.y + rectangle.height) / realHeight;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		_this1.x = x1;
		_this1.y = y1;
	}
	g.end();
	kha_Image.createRenderTarget(1,1).unload();
	atlasImage.generateMipmaps(4);
	return atlasImage;
};
com_imageAtlas_AtlasGenerator.sortArea = function(b1,b2) {
	return b2.width * b2.height - b1.width * b1.height | 0;
};
com_imageAtlas_AtlasGenerator.createClearPipeline = function() {
	var shaderPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 2;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 2;
	shaderPipeline.compile();
	return shaderPipeline;
};
var com_imageAtlas_Bitmap = function() {
	this.hasPreRender = false;
	this.hasMipMap = false;
	this.specialPipeline = null;
	this.maxUV = new com_helpers_Point(1,1);
	this.minUV = new com_helpers_Point(0,0);
	this.scaleY = 1;
	this.scaleX = 1;
	this.extrude = 0;
	this.height = 0;
	this.width = 0;
	this.y = 0;
	this.x = 0;
};
$hxClasses["com.imageAtlas.Bitmap"] = com_imageAtlas_Bitmap;
com_imageAtlas_Bitmap.__name__ = "com.imageAtlas.Bitmap";
com_imageAtlas_Bitmap.prototype = {
	__class__: com_imageAtlas_Bitmap
};
var com_imageAtlas_ImageTree = function(width,height,imageSeparation) {
	this.firstNode = new com_imageAtlas_Node();
	this.firstNode.rect = new com_helpers_Rectangle(0,0,width,height);
	this.imageSeparation = imageSeparation * 2;
};
$hxClasses["com.imageAtlas.ImageTree"] = com_imageAtlas_ImageTree;
com_imageAtlas_ImageTree.__name__ = "com.imageAtlas.ImageTree";
com_imageAtlas_ImageTree.prototype = {
	insertImage: function(bitmap) {
		var node = this.Insert(bitmap,this.firstNode);
		if(node != null) {
			var rec = node.rect.clone();
			rec.x += this.imageSeparation * 0.5;
			rec.y += this.imageSeparation * 0.5;
			return rec;
		} else {
			return null;
		}
	}
	,Insert: function(bitmap,node) {
		if(node.Right != null || node.Left != null) {
			var newNode = this.Insert(bitmap,node.Left);
			if(newNode != null) {
				return newNode;
			}
			return this.Insert(bitmap,node.Right);
		} else {
			if(node.bitmap != null) {
				return null;
			}
			if(!this.rectangleFitIn(node.rect,bitmap)) {
				return null;
			}
			var normal = this.rectangleFitIn(node.rect,bitmap);
			if(!normal && !this.rectangleFitIn(node.rect,bitmap)) {
				return null;
			}
			if(this.rectangleFitPerfect(node.rect,bitmap)) {
				node.bitmap = bitmap;
				return node;
			}
			var rc = node.rect;
			node.Left = new com_imageAtlas_Node();
			node.Right = new com_imageAtlas_Node();
			if(rc.width - (bitmap.width + this.imageSeparation) < rc.height - (bitmap.height + this.imageSeparation)) {
				node.Left.rect = new com_helpers_Rectangle(rc.x,rc.y,rc.width,bitmap.height + this.imageSeparation);
				node.Right.rect = new com_helpers_Rectangle(rc.x,rc.y + bitmap.height + this.imageSeparation,rc.width,rc.height - (bitmap.height + this.imageSeparation));
			} else {
				node.Left.rect = new com_helpers_Rectangle(rc.x,rc.y,bitmap.width + this.imageSeparation,rc.height);
				node.Right.rect = new com_helpers_Rectangle(rc.x + bitmap.width + this.imageSeparation,rc.y,rc.width - (bitmap.width + this.imageSeparation),rc.height);
			}
			return this.Insert(bitmap,node.Left);
		}
	}
	,rectangleFitPerfect: function(rect,bitmap) {
		if(rect.width == bitmap.width + this.imageSeparation) {
			return rect.height == bitmap.height + this.imageSeparation;
		} else {
			return false;
		}
	}
	,rectangleFitIn: function(rect,bitmap) {
		if(rect.width >= bitmap.width + this.imageSeparation) {
			return rect.height >= bitmap.height + this.imageSeparation;
		} else {
			return false;
		}
	}
	,__class__: com_imageAtlas_ImageTree
};
var com_imageAtlas_Node = function() {
};
$hxClasses["com.imageAtlas.Node"] = com_imageAtlas_Node;
com_imageAtlas_Node.__name__ = "com.imageAtlas.Node";
com_imageAtlas_Node.prototype = {
	__class__: com_imageAtlas_Node
};
var com_loading_Resource = function() { };
$hxClasses["com.loading.Resource"] = com_loading_Resource;
com_loading_Resource.__name__ = "com.loading.Resource";
com_loading_Resource.__isInterface__ = true;
com_loading_Resource.prototype = {
	__class__: com_loading_Resource
};
var com_loading_AtlasJoinable = function() { };
$hxClasses["com.loading.AtlasJoinable"] = com_loading_AtlasJoinable;
com_loading_AtlasJoinable.__name__ = "com.loading.AtlasJoinable";
com_loading_AtlasJoinable.__isInterface__ = true;
com_loading_AtlasJoinable.__interfaces__ = [com_loading_Resource];
com_loading_AtlasJoinable.prototype = {
	__class__: com_loading_AtlasJoinable
};
var com_loading_Resources = function() {
	this.resources = [];
};
$hxClasses["com.loading.Resources"] = com_loading_Resources;
com_loading_Resources.__name__ = "com.loading.Resources";
com_loading_Resources.prototype = {
	add: function(resource) {
		this.resources.push(resource);
	}
	,load: function(onFinish) {
		this.loadedCount = 0;
		this.onFinish = onFinish;
		if(this.resources.length == 0) {
			onFinish();
			return;
		}
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].load($bind(this,this.onLoad));
	}
	,loadLocal: function(onFinish) {
		this.loadedCount = 0;
		this.onFinish = onFinish;
		if(this.resources.length == 0) {
			onFinish();
			return;
		}
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].loadLocal($bind(this,this.onLoad));
	}
	,onLoad: function() {
		++this.loadedCount;
		if(this.loadedCount == this.resources.length) {
			this.onFinish();
		}
	}
	,unload: function() {
		if(this.keepData) {
			var _g = 0;
			var _g1 = this.resources;
			while(_g < _g1.length) _g1[_g++].unloadLocal();
			this.resources.splice(0,this.resources.length);
		} else {
			var _g2 = 0;
			var _g11 = this.resources;
			while(_g2 < _g11.length) _g11[_g2++].unload();
			this.resources.splice(0,this.resources.length);
		}
	}
	,__class__: com_loading_Resources
};
var com_loading_basicResources_DataLoader = function(dataName) {
	this.name = dataName;
};
$hxClasses["com.loading.basicResources.DataLoader"] = com_loading_basicResources_DataLoader;
com_loading_basicResources_DataLoader.__name__ = "com.loading.basicResources.DataLoader";
com_loading_basicResources_DataLoader.__interfaces__ = [com_loading_Resource];
com_loading_basicResources_DataLoader.prototype = {
	load: function(callback) {
		kha_Assets.loadBlob(this.name,function(b) {
			callback();
		},null,{ fileName : "com/loading/basicResources/DataLoader.hx", lineNumber : 15, className : "com.loading.basicResources.DataLoader", methodName : "load"});
	}
	,loadLocal: function(callback) {
		callback();
	}
	,unload: function() {
		kha_Assets.blobs.get(this.name).unload();
		kha_Assets.blobs[this.name] = null;
	}
	,unloadLocal: function() {
	}
	,__class__: com_loading_basicResources_DataLoader
};
var com_loading_basicResources_TilesheetLoader = function(imageName,tileWidth,tileHeight,spacing) {
	this.imageName = imageName;
	this.tileWidth = tileWidth;
	this.tileHeight = tileHeight;
	this.spacing = spacing;
};
$hxClasses["com.loading.basicResources.TilesheetLoader"] = com_loading_basicResources_TilesheetLoader;
com_loading_basicResources_TilesheetLoader.__name__ = "com.loading.basicResources.TilesheetLoader";
com_loading_basicResources_TilesheetLoader.__interfaces__ = [com_loading_AtlasJoinable];
com_loading_basicResources_TilesheetLoader.createFrame = function(x,y,width,height,rotated) {
	if(rotated) {
		var temp = width;
		width = height;
		height = temp;
	}
	var frame = new com_gEngine_Frame();
	frame.vertexs = [];
	frame.UVs = [];
	frame.drawArea = new com_gEngine_DrawArea(x,y,x + width,y + height);
	frame.UVs.push(0);
	frame.UVs.push(0);
	frame.UVs.push(0);
	frame.UVs.push(1);
	frame.UVs.push(1);
	frame.UVs.push(0);
	frame.UVs.push(1);
	frame.UVs.push(1);
	if(rotated) {
		frame.vertexs.push(x);
		frame.vertexs.push(y + height);
		frame.vertexs.push(x + width);
		frame.vertexs.push(y + height);
		frame.vertexs.push(x);
		frame.vertexs.push(y);
		frame.vertexs.push(x + width);
		frame.vertexs.push(y);
	} else {
		frame.vertexs.push(x);
		frame.vertexs.push(y);
		frame.vertexs.push(x);
		frame.vertexs.push(y + height);
		frame.vertexs.push(x + width);
		frame.vertexs.push(y);
		frame.vertexs.push(x + width);
		frame.vertexs.push(y + height);
	}
	return frame;
};
com_loading_basicResources_TilesheetLoader.prototype = {
	load: function(callback) {
		var _gthis = this;
		kha_Assets.loadImage(this.imageName,function(image) {
			_gthis.fromSpriteSheet();
			callback();
		},null,{ fileName : "com/loading/basicResources/TilesheetLoader.hx", lineNumber : 31, className : "com.loading.basicResources.TilesheetLoader", methodName : "load"});
	}
	,loadLocal: function(callback) {
		this.fromSpriteSheet();
		callback();
	}
	,unload: function() {
		kha_Assets.images.get(this.imageName).unload();
		kha_Assets.images[this.imageName] = null;
	}
	,unloadLocal: function() {
	}
	,fromSpriteSheet: function() {
		var image = Reflect.field(kha_Assets.images,this.imageName);
		var spritesCount = (image.get_width() / (this.tileWidth + this.spacing * 2) | 0) * (image.get_height() / (this.tileHeight + this.spacing * 2) | 0);
		this.animation = new com_gEngine_AnimationData();
		var frames = [];
		this.bitmaps = [];
		var widthInFrames = image.get_width() / (this.tileWidth + this.spacing * 2) | 0;
		var _g = 0;
		while(_g < spritesCount) {
			var counter = _g++;
			var x = counter % widthInFrames * (this.tileWidth + this.spacing * 2);
			var y = (counter / widthInFrames | 0) * (this.tileHeight + this.spacing * 2);
			frames.push(com_loading_basicResources_TilesheetLoader.createFrame(0,0,this.tileWidth,this.tileHeight,false));
			var bitmap = new com_imageAtlas_Bitmap();
			bitmap.x = x;
			bitmap.y = y;
			bitmap.width = this.tileWidth + this.spacing * 2;
			bitmap.height = this.tileHeight + this.spacing * 2;
			bitmap.name = this.imageName + counter;
			bitmap.extrude = this.spacing;
			bitmap.image = image;
			this.bitmaps.push(bitmap);
		}
		this.animation.frames = frames;
		this.animation.name = this.imageName;
		this.animation.labels = [];
		this.animation.texturesID = com_gEngine_GEngine.get_i().addTexture(image);
		com_basicDisplay_SpriteSheetDB.get_i().add(this.animation);
	}
	,getBitmaps: function() {
		return this.bitmaps;
	}
	,update: function(atlasId) {
		this.animation.texturesID = atlasId;
		var _g = 0;
		var _g1 = this.bitmaps.length;
		while(_g < _g1) {
			var i = _g++;
			var frame = this.animation.frames[i];
			var bitmap = this.bitmaps[i];
			var UVs = [];
			UVs.push(bitmap.minUV.x);
			UVs.push(bitmap.minUV.y);
			UVs.push(bitmap.minUV.x);
			UVs.push(bitmap.maxUV.y);
			UVs.push(bitmap.maxUV.x);
			UVs.push(bitmap.minUV.y);
			UVs.push(bitmap.maxUV.x);
			UVs.push(bitmap.maxUV.y);
			frame.UVs = UVs;
		}
	}
	,__class__: com_loading_basicResources_TilesheetLoader
};
var com_loading_basicResources_FontLoader = function(imageName,size) {
	com_loading_basicResources_TilesheetLoader.call(this,imageName,0,0,0);
	this.size = size;
};
$hxClasses["com.loading.basicResources.FontLoader"] = com_loading_basicResources_FontLoader;
com_loading_basicResources_FontLoader.__name__ = "com.loading.basicResources.FontLoader";
com_loading_basicResources_FontLoader.__super__ = com_loading_basicResources_TilesheetLoader;
com_loading_basicResources_FontLoader.prototype = $extend(com_loading_basicResources_TilesheetLoader.prototype,{
	load: function(callback) {
		var _gthis = this;
		kha_Assets.loadFont(this.imageName,function(font) {
			_gthis.fromKhaFont();
			callback();
		},null,{ fileName : "com/loading/basicResources/FontLoader.hx", lineNumber : 29, className : "com.loading.basicResources.FontLoader", methodName : "load"});
	}
	,loadLocal: function(callback) {
		this.fromKhaFont();
		callback();
	}
	,fromKhaFont: function() {
		var kravurImage = Reflect.field(kha_Assets.fonts,this.imageName)._get(this.size);
		this.tex = kravurImage.getTexture();
		this.animation = new com_gEngine_FontData(this.size);
		var frames = [];
		var labels = [];
		this.bitmaps = [];
		var bakedQuadCache = new kha_AlignedQuad();
		var counter = 0;
		if(com_loading_basicResources_FontLoader.pipeline == null) {
			com_loading_basicResources_FontLoader.pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_Graphics2.createTextVertexStructure());
			com_loading_basicResources_FontLoader.pipeline.blendSource = 3;
			com_loading_basicResources_FontLoader.pipeline.blendDestination = 2;
			com_loading_basicResources_FontLoader.pipeline.alphaBlendSource = 3;
			com_loading_basicResources_FontLoader.pipeline.alphaBlendDestination = 2;
			com_loading_basicResources_FontLoader.pipeline.compile();
		}
		while(true) {
			var q = kravurImage.getBakedQuad(bakedQuadCache,counter,0,0);
			if(q != null) {
				++counter;
				var x = q.s0 * this.tex.get_realWidth() | 0;
				var y = q.t0 * this.tex.get_realHeight() | 0;
				var width = (q.s1 - q.s0) * this.tex.get_realWidth() | 0;
				var height = (q.t1 - q.t0) * this.tex.get_realHeight() | 0;
				frames.push(com_loading_basicResources_TilesheetLoader.createFrame(q.x0 | 0,q.y0 | 0,width,height,false));
				var bitmap = new com_imageAtlas_Bitmap();
				bitmap.x = x;
				bitmap.y = y;
				bitmap.width = width;
				bitmap.height = height;
				bitmap.specialPipeline = com_loading_basicResources_FontLoader.pipeline;
				bitmap.image = this.tex;
				this.bitmaps.push(bitmap);
			} else {
				break;
			}
		}
		this.animation.frames = frames;
		this.animation.name = this.imageName;
		this.animation.labels = labels;
		com_basicDisplay_SpriteSheetDB.get_i().add(this.animation);
	}
	,update: function(atlasId) {
		com_loading_basicResources_TilesheetLoader.prototype.update.call(this,atlasId);
	}
	,unload: function() {
	}
	,unloadLocal: function() {
	}
	,__class__: com_loading_basicResources_FontLoader
});
var com_loading_basicResources_ImageLoader = function(imageName) {
	var description = Reflect.field(kha_Assets.images,imageName + "Description");
	com_loading_basicResources_TilesheetLoader.call(this,imageName,description.original_width,description.original_height,0);
};
$hxClasses["com.loading.basicResources.ImageLoader"] = com_loading_basicResources_ImageLoader;
com_loading_basicResources_ImageLoader.__name__ = "com.loading.basicResources.ImageLoader";
com_loading_basicResources_ImageLoader.__super__ = com_loading_basicResources_TilesheetLoader;
com_loading_basicResources_ImageLoader.prototype = $extend(com_loading_basicResources_TilesheetLoader.prototype,{
	__class__: com_loading_basicResources_ImageLoader
});
var com_loading_basicResources_JoinAtlas = function(width,height,separation) {
	if(separation == null) {
		separation = 2;
	}
	this.loadedCounter = 0;
	this.width = width;
	this.height = height;
	this.separation = separation;
	this.resources = [];
};
$hxClasses["com.loading.basicResources.JoinAtlas"] = com_loading_basicResources_JoinAtlas;
com_loading_basicResources_JoinAtlas.__name__ = "com.loading.basicResources.JoinAtlas";
com_loading_basicResources_JoinAtlas.__interfaces__ = [com_loading_Resource];
com_loading_basicResources_JoinAtlas.prototype = {
	add: function(resource) {
		this.resources.push(resource);
	}
	,load: function(callback) {
		this.onFinish = callback;
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].load($bind(this,this.onLoad));
		if(this.resources.length == 0) {
			callback();
		}
	}
	,loadLocal: function(callback) {
		this.onFinish = callback;
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].loadLocal($bind(this,this.onLoad));
		if(this.resources.length == 0) {
			callback();
		}
	}
	,onLoad: function() {
		++this.loadedCounter;
		if(this.loadedCounter == this.resources.length) {
			this.createAtlas();
		}
	}
	,createAtlas: function() {
		var bitmaps = [];
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) bitmaps = bitmaps.concat(_g1[_g++].getBitmaps());
		this.image = com_imageAtlas_AtlasGenerator.generate(this.width,this.height,bitmaps,this.separation);
		var textureId = com_gEngine_GEngine.get_i().addTexture(this.image);
		var _g2 = 0;
		var _g3 = this.resources;
		while(_g2 < _g3.length) _g3[_g2++].update(textureId);
		this.onFinish();
	}
	,unload: function() {
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].unload();
		if(this.image != null) {
			this.image.unload();
		}
	}
	,unloadLocal: function() {
		var _g = 0;
		var _g1 = this.resources;
		while(_g < _g1.length) _g1[_g++].unloadLocal();
		this.image.unload();
	}
	,__class__: com_loading_basicResources_JoinAtlas
};
var com_loading_basicResources_SoundLoader = function(soundName,uncompress) {
	if(uncompress == null) {
		uncompress = true;
	}
	this.uncompress = true;
	this.name = soundName;
	this.uncompress = uncompress;
};
$hxClasses["com.loading.basicResources.SoundLoader"] = com_loading_basicResources_SoundLoader;
com_loading_basicResources_SoundLoader.__name__ = "com.loading.basicResources.SoundLoader";
com_loading_basicResources_SoundLoader.__interfaces__ = [com_loading_Resource];
com_loading_basicResources_SoundLoader.prototype = {
	load: function(callback) {
		this.onLoad = callback;
		kha_Assets.loadSound(this.name,$bind(this,this.onSoundLoad),null,{ fileName : "com/loading/basicResources/SoundLoader.hx", lineNumber : 20, className : "com.loading.basicResources.SoundLoader", methodName : "load"});
	}
	,loadLocal: function(callback) {
		this.onLoad = callback;
		this.onSoundLoad(Reflect.field(kha_Assets.sounds,this.name));
	}
	,onSoundLoad: function(sound) {
		com_soundLib_SoundManager.addSound(this.name,sound);
		if(this.uncompress && sound.compressedData != null) {
			sound.uncompress(this.onLoad);
		} else {
			this.onLoad();
		}
		this.onLoad = null;
	}
	,unload: function() {
		kha_Assets.sounds.get(this.name).unload();
		kha_Assets.sounds[this.name] = null;
	}
	,unloadLocal: function() {
	}
	,__class__: com_loading_basicResources_SoundLoader
};
var com_loading_basicResources_SparrowLoader = function(imageName,dataName) {
	com_loading_basicResources_TilesheetLoader.call(this,imageName,0,0,0);
	this.dataName = dataName;
};
$hxClasses["com.loading.basicResources.SparrowLoader"] = com_loading_basicResources_SparrowLoader;
com_loading_basicResources_SparrowLoader.__name__ = "com.loading.basicResources.SparrowLoader";
com_loading_basicResources_SparrowLoader.getBaseName = function(fullName) {
	var foundInt = false;
	var counter = fullName.length - 1;
	while(counter >= 0) {
		if(Std.parseInt(fullName.charAt(counter)) != null) {
			fullName = fullName.substring(0,counter) + fullName.substring(counter + 1);
			foundInt = true;
		} else if(foundInt) {
			break;
		}
		--counter;
	}
	return fullName;
};
com_loading_basicResources_SparrowLoader.__super__ = com_loading_basicResources_TilesheetLoader;
com_loading_basicResources_SparrowLoader.prototype = $extend(com_loading_basicResources_TilesheetLoader.prototype,{
	load: function(callback) {
		var _gthis = this;
		kha_Assets.loadImage(this.imageName,function(image) {
			kha_Assets.loadBlob(_gthis.dataName,function(b) {
				_gthis.fromSpriteSheet();
				callback();
			},null,{ fileName : "com/loading/basicResources/SparrowLoader.hx", lineNumber : 23, className : "com.loading.basicResources.SparrowLoader", methodName : "load"});
		},null,{ fileName : "com/loading/basicResources/SparrowLoader.hx", lineNumber : 22, className : "com.loading.basicResources.SparrowLoader", methodName : "load"});
	}
	,fromSpriteSheet: function() {
		var text = Reflect.field(kha_Assets.blobs,this.dataName);
		var x = Xml.parse(text.toString()).firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Invalid nodeType " + _$Xml_XmlType_$Impl_$.toString(x.nodeType));
		}
		var image = Reflect.field(kha_Assets.images,this.imageName);
		this.animation = new com_gEngine_AnimationData();
		var frames = [];
		var labels = [];
		this.bitmaps = [];
		var counter = 0;
		var currentAnimation = null;
		var textures = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(x,"SubTexture");
		textures.sort(function(a,b) {
			var aName = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(a,"name");
			var aNumber = "";
			var aString = "";
			var _g = 0;
			var _g1 = text.get_length();
			while(_g < _g1) {
				var char = _g++;
				if(Std.parseInt(aName.charAt(char)) != null) {
					aNumber += aName.charAt(char);
				} else {
					aString += aName.charAt(char);
				}
			}
			var bName = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(b,"name");
			var bNumber = "";
			var bString = "";
			var _g2 = 0;
			var _g3 = text.get_length();
			while(_g2 < _g3) {
				var char1 = _g2++;
				if(Std.parseInt(bName.charAt(char1)) != null) {
					bNumber += bName.charAt(char1);
				} else {
					bString += bName.charAt(char1);
				}
			}
			var aInt = Std.parseInt(aNumber);
			var bInt = Std.parseInt(bNumber);
			if(aString == bString) {
				if(aInt < bInt) {
					return -1;
				}
				if(aInt > bInt) {
					return 1;
				}
			}
			if(aString < bString) {
				return -1;
			}
			if(aString > bString) {
				return 1;
			}
			return 0;
		});
		var _g4 = 0;
		while(_g4 < textures.length) {
			var texture = textures[_g4];
			++_g4;
			var name = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"name");
			var trimmed = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(texture,"frameX");
			var rotated = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(texture,"rotated") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"rotated") == "true";
			if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(texture,"flipX")) {
				haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"flipX");
			}
			if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(texture,"flipY")) {
				haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"flipY");
			}
			var baseName = com_loading_basicResources_SparrowLoader.getBaseName(name);
			if(currentAnimation != baseName) {
				currentAnimation = baseName;
				labels.push(new com_gEngine_Label(baseName,counter));
			}
			++counter;
			frames.push(com_loading_basicResources_TilesheetLoader.createFrame(trimmed ? -Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"frameX")) : 0,trimmed ? -Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"frameY")) : 0,Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"width")),Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"height")),rotated));
			var bitmap = new com_imageAtlas_Bitmap();
			bitmap.x = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"x"));
			bitmap.y = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"y"));
			bitmap.width = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"width"));
			bitmap.height = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(texture,"height"));
			bitmap.name = name;
			bitmap.image = image;
			this.bitmaps.push(bitmap);
		}
		this.animation.frames = frames;
		this.animation.name = this.imageName;
		this.animation.labels = labels;
		com_basicDisplay_SpriteSheetDB.get_i().add(this.animation);
	}
	,__class__: com_loading_basicResources_SparrowLoader
});
var com_sequencer_SequenceCode = function() {
	this.functions = [];
	this.waitTimes = [];
	this.doForFunctions = [];
	this.condition = [];
	this.instant = [];
	this.anyFunctions = [];
};
$hxClasses["com.sequencer.SequenceCode"] = com_sequencer_SequenceCode;
com_sequencer_SequenceCode.__name__ = "com.sequencer.SequenceCode";
com_sequencer_SequenceCode.prototype = {
	addFunction: function(func,instant) {
		if(instant == null) {
			instant = false;
		}
		this.functions.push(func);
		this.instant.push(instant);
	}
	,update: function(aDt) {
		while(true) {
			com_sequencer_SequenceCode.execute = false;
			if(this.currentFunction == null && this.functions.length > 0 || this.currentFunction != null && this.currentFunction(aDt)) {
				this.currentFunction = null;
				if(this.functions.length > 0) {
					this.currentFunction = this.functions.shift();
					com_sequencer_SequenceCode.execute = this.instant.shift();
				}
			}
			if(!com_sequencer_SequenceCode.execute) {
				break;
			}
		}
	}
	,addWait: function(time,breakCond) {
		if(breakCond == null) {
			this.waitTimes.push(time);
			this.addFunction($bind(this,this.wait));
		} else {
			this.waitTimes.push(time);
			this.condition.push(breakCond);
			this.addFunction($bind(this,this.waitBreak));
		}
	}
	,waitBreak: function(aDt) {
		this.waitTimes[0] -= aDt;
		if(this.waitTimes[0] <= 0 || this.condition[0](aDt)) {
			this.waitTimes.shift();
			this.condition.shift();
			return true;
		}
		return false;
	}
	,wait: function(aDt) {
		this.waitTimes[0] -= aDt;
		if(this.waitTimes[0] <= 0) {
			this.waitTimes.shift();
			return true;
		}
		return false;
	}
	,flush: function() {
		this.functions.splice(0,this.functions.length);
		this.waitTimes.splice(0,this.waitTimes.length);
		this.doForFunctions.splice(0,this.doForFunctions.length);
		this.instant.splice(0,this.instant.length);
		this.condition.splice(0,this.condition.length);
		this.anyFunctions.splice(0,this.anyFunctions.length);
		this.currentFunction = null;
	}
	,__class__: com_sequencer_SequenceCode
};
var com_soundLib_SoundManager = function() { };
$hxClasses["com.soundLib.SoundManager"] = com_soundLib_SoundManager;
com_soundLib_SoundManager.__name__ = "com.soundLib.SoundManager";
com_soundLib_SoundManager.init = function() {
	com_soundLib_SoundManager.map = new haxe_ds_StringMap();
	com_soundLib_SoundManager.initied = true;
};
com_soundLib_SoundManager.addSound = function(soundName,sound) {
	var _this = com_soundLib_SoundManager.map;
	if(__map_reserved[soundName] != null) {
		_this.setReserved(soundName,sound);
	} else {
		_this.h[soundName] = sound;
	}
};
com_soundLib_SoundManager.playFx = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	if(!com_soundLib_SoundManager.soundMuted) {
		var _this = com_soundLib_SoundManager.map;
		return kha_audio2_Audio1.play(__map_reserved[sound] != null ? _this.getReserved(sound) : _this.h[sound],loop);
	}
	return null;
};
com_soundLib_SoundManager.playMusic = function(soundName,loop) {
	if(loop == null) {
		loop = true;
	}
	if(com_soundLib_SoundManager.music != null) {
		com_soundLib_SoundManager.music.stop();
	}
	com_soundLib_SoundManager.musicName = soundName;
	if(!com_soundLib_SoundManager.musicMuted) {
		var _this = com_soundLib_SoundManager.map;
		var sound = __map_reserved[soundName] != null ? _this.getReserved(soundName) : _this.h[soundName];
		if(sound.compressedData != null) {
			com_soundLib_SoundManager.music = kha_audio2_Audio1.stream(sound,loop);
		} else {
			com_soundLib_SoundManager.music = kha_audio2_Audio1.play(sound,loop);
		}
	}
};
com_soundLib_SoundManager.musicVolume = function(vol) {
	if(com_soundLib_SoundManager.music != null) {
		com_soundLib_SoundManager.music.set_volume(vol);
	}
};
com_soundLib_SoundManager.stopMusic = function() {
	if(com_soundLib_SoundManager.music != null) {
		com_soundLib_SoundManager.musicPosition = com_soundLib_SoundManager.music.get_position();
		com_soundLib_SoundManager.music.stop();
		com_soundLib_SoundManager.music = null;
	}
};
com_soundLib_SoundManager.reset = function() {
	com_soundLib_SoundManager.map = new haxe_ds_StringMap();
};
var format_tmx_TmxOrientation = $hxEnums["format.tmx.TmxOrientation"] = { __ename__ : true, __constructs__ : ["Orthogonal","Isometric","Staggered","Hexagonal","Unknown"]
	,Orthogonal: {_hx_index:0,__enum__:"format.tmx.TmxOrientation",toString:$estr}
	,Isometric: {_hx_index:1,__enum__:"format.tmx.TmxOrientation",toString:$estr}
	,Staggered: {_hx_index:2,__enum__:"format.tmx.TmxOrientation",toString:$estr}
	,Hexagonal: {_hx_index:3,__enum__:"format.tmx.TmxOrientation",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"format.tmx.TmxOrientation",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxRenderOrder = $hxEnums["format.tmx.TmxRenderOrder"] = { __ename__ : true, __constructs__ : ["RightDown","RightUp","LeftDown","LeftUp","Unknown"]
	,RightDown: {_hx_index:0,__enum__:"format.tmx.TmxRenderOrder",toString:$estr}
	,RightUp: {_hx_index:1,__enum__:"format.tmx.TmxRenderOrder",toString:$estr}
	,LeftDown: {_hx_index:2,__enum__:"format.tmx.TmxRenderOrder",toString:$estr}
	,LeftUp: {_hx_index:3,__enum__:"format.tmx.TmxRenderOrder",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"format.tmx.TmxRenderOrder",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxStaggerIndex = $hxEnums["format.tmx.TmxStaggerIndex"] = { __ename__ : true, __constructs__ : ["Even","Odd","Unknown"]
	,Even: {_hx_index:0,__enum__:"format.tmx.TmxStaggerIndex",toString:$estr}
	,Odd: {_hx_index:1,__enum__:"format.tmx.TmxStaggerIndex",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"format.tmx.TmxStaggerIndex",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxStaggerAxis = $hxEnums["format.tmx.TmxStaggerAxis"] = { __ename__ : true, __constructs__ : ["AxisX","AxisY","Unknown"]
	,AxisX: {_hx_index:0,__enum__:"format.tmx.TmxStaggerAxis",toString:$estr}
	,AxisY: {_hx_index:1,__enum__:"format.tmx.TmxStaggerAxis",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"format.tmx.TmxStaggerAxis",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxMap = function(version,tiledVersion,orientation,width,height,tileWidth,tileHeight,backgroundColor,renderOrder,staggerIndex,staggerAxis,hexSideLength,nextObjectId,nextLayerId,properties,tilesets,layers,infinite,localPath) {
	this.version = version;
	this.tiledVersion = tiledVersion;
	this.orientation = orientation;
	this.width = width;
	this.height = height;
	this.tileWidth = tileWidth;
	this.tileHeight = tileHeight;
	this.backgroundColor = backgroundColor;
	this.renderOrder = renderOrder;
	this.staggerIndex = staggerIndex;
	this.staggerAxis = staggerAxis;
	this.hexSideLength = hexSideLength;
	this.nextObjectId = nextObjectId;
	this.nextLayerId = nextLayerId;
	this.properties = properties;
	this.tilesets = tilesets;
	this.layers = layers;
	this.infinite = infinite;
	this.localPath = localPath;
};
$hxClasses["format.tmx.TmxMap"] = format_tmx_TmxMap;
format_tmx_TmxMap.__name__ = "format.tmx.TmxMap";
format_tmx_TmxMap.prototype = {
	__class__: format_tmx_TmxMap
};
var format_tmx_TmxTileset = function(firstGID,source,name,tileWidth,tileHeight,spacing,margin,tileCount,columns,tileOffset,properties,image,terrainTypes,tiles,grid,wangSets) {
	this.firstGID = firstGID;
	this.source = source;
	this.name = name;
	this.tileWidth = tileWidth;
	this.tileHeight = tileHeight;
	this.spacing = spacing;
	this.margin = margin;
	this.tileCount = tileCount;
	this.columns = columns;
	this.tileOffset = tileOffset;
	this.properties = properties;
	this.image = image;
	this.terrainTypes = terrainTypes;
	this.tiles = tiles;
	this.grid = grid;
	this.wangSets = wangSets;
};
$hxClasses["format.tmx.TmxTileset"] = format_tmx_TmxTileset;
format_tmx_TmxTileset.__name__ = "format.tmx.TmxTileset";
format_tmx_TmxTileset.prototype = {
	__class__: format_tmx_TmxTileset
};
var format_tmx_TmxTilesetGrid = function(orientation,width,height) {
	this.orientation = orientation;
	this.width = width;
	this.height = height;
};
$hxClasses["format.tmx.TmxTilesetGrid"] = format_tmx_TmxTilesetGrid;
format_tmx_TmxTilesetGrid.__name__ = "format.tmx.TmxTilesetGrid";
format_tmx_TmxTilesetGrid.prototype = {
	__class__: format_tmx_TmxTilesetGrid
};
var format_tmx_TmxTileOffset = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["format.tmx.TmxTileOffset"] = format_tmx_TmxTileOffset;
format_tmx_TmxTileOffset.__name__ = "format.tmx.TmxTileOffset";
format_tmx_TmxTileOffset.prototype = {
	__class__: format_tmx_TmxTileOffset
};
var format_tmx_TmxWangSet = function(name,tile,corners,edges,tiles) {
	this.name = name;
	this.tile = tile;
	this.corners = corners;
	this.edges = edges;
	this.tiles = tiles;
};
$hxClasses["format.tmx.TmxWangSet"] = format_tmx_TmxWangSet;
format_tmx_TmxWangSet.__name__ = "format.tmx.TmxWangSet";
format_tmx_TmxWangSet.prototype = {
	__class__: format_tmx_TmxWangSet
};
var format_tmx_TmxWangSetColor = function(name,color,tile,probability) {
	this.name = name;
	this.color = color;
	this.tile = tile;
	this.probability = probability;
};
$hxClasses["format.tmx.TmxWangSetColor"] = format_tmx_TmxWangSetColor;
format_tmx_TmxWangSetColor.__name__ = "format.tmx.TmxWangSetColor";
format_tmx_TmxWangSetColor.prototype = {
	__class__: format_tmx_TmxWangSetColor
};
var format_tmx_TmxWangSetTile = function(tileID,wangID) {
	this.tileID = tileID;
	this.wangID = wangID;
};
$hxClasses["format.tmx.TmxWangSetTile"] = format_tmx_TmxWangSetTile;
format_tmx_TmxWangSetTile.__name__ = "format.tmx.TmxWangSetTile";
format_tmx_TmxWangSetTile.prototype = {
	__class__: format_tmx_TmxWangSetTile
};
var format_tmx_TmxImage = function(format1,id,source,transparent,width,height,data) {
	this.format = format1;
	this.id = id;
	this.source = source;
	this.transparent = transparent;
	this.width = width;
	this.height = height;
	this.data = data;
};
$hxClasses["format.tmx.TmxImage"] = format_tmx_TmxImage;
format_tmx_TmxImage.__name__ = "format.tmx.TmxImage";
format_tmx_TmxImage.prototype = {
	__class__: format_tmx_TmxImage
};
var format_tmx_TmxTerrain = function(name,tile,properties) {
	this.name = name;
	this.tile = tile;
	this.properties = properties;
};
$hxClasses["format.tmx.TmxTerrain"] = format_tmx_TmxTerrain;
format_tmx_TmxTerrain.__name__ = "format.tmx.TmxTerrain";
format_tmx_TmxTerrain.prototype = {
	__class__: format_tmx_TmxTerrain
};
var format_tmx_TmxTilesetTile = function(id,type,terrain,probability,properties,image,objectGroup,animation) {
	this.id = id;
	this.type = type;
	this.terrain = terrain;
	this.probability = probability;
	this.properties = properties;
	this.image = image;
	this.objectGroup = objectGroup;
	this.animation = animation;
};
$hxClasses["format.tmx.TmxTilesetTile"] = format_tmx_TmxTilesetTile;
format_tmx_TmxTilesetTile.__name__ = "format.tmx.TmxTilesetTile";
format_tmx_TmxTilesetTile.prototype = {
	__class__: format_tmx_TmxTilesetTile
};
var format_tmx_TmxTilesetTileFrame = function(tileId,duration) {
	this.tileId = tileId;
	this.duration = duration;
};
$hxClasses["format.tmx.TmxTilesetTileFrame"] = format_tmx_TmxTilesetTileFrame;
format_tmx_TmxTilesetTileFrame.__name__ = "format.tmx.TmxTilesetTileFrame";
format_tmx_TmxTilesetTileFrame.prototype = {
	__class__: format_tmx_TmxTilesetTileFrame
};
var format_tmx_TmxLayer = $hxEnums["format.tmx.TmxLayer"] = { __ename__ : true, __constructs__ : ["LTileLayer","LObjectGroup","LImageLayer","LGroup"]
	,LTileLayer: ($_=function(layer) { return {_hx_index:0,layer:layer,__enum__:"format.tmx.TmxLayer",toString:$estr}; },$_.__params__ = ["layer"],$_)
	,LObjectGroup: ($_=function(group) { return {_hx_index:1,group:group,__enum__:"format.tmx.TmxLayer",toString:$estr}; },$_.__params__ = ["group"],$_)
	,LImageLayer: ($_=function(layer) { return {_hx_index:2,layer:layer,__enum__:"format.tmx.TmxLayer",toString:$estr}; },$_.__params__ = ["layer"],$_)
	,LGroup: ($_=function(group) { return {_hx_index:3,group:group,__enum__:"format.tmx.TmxLayer",toString:$estr}; },$_.__params__ = ["group"],$_)
};
var format_tmx_TmxGroup = function(id,name,offsetX,offsetY,opacity,visible,properties,layers) {
	this.id = id;
	this.name = name;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.opacity = opacity;
	this.visible = visible;
	this.properties = properties;
	this.layers = layers;
};
$hxClasses["format.tmx.TmxGroup"] = format_tmx_TmxGroup;
format_tmx_TmxGroup.__name__ = "format.tmx.TmxGroup";
format_tmx_TmxGroup.prototype = {
	__class__: format_tmx_TmxGroup
};
var format_tmx_TmxBaseLayer = function(id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties) {
	this.id = id;
	this.name = name;
	this.x = x;
	this.y = y;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.width = width;
	this.height = height;
	this.opacity = opacity;
	this.visible = visible;
	this.tintColor = tintColor;
	this.properties = properties;
};
$hxClasses["format.tmx.TmxBaseLayer"] = format_tmx_TmxBaseLayer;
format_tmx_TmxBaseLayer.__name__ = "format.tmx.TmxBaseLayer";
format_tmx_TmxBaseLayer.prototype = {
	__class__: format_tmx_TmxBaseLayer
};
var format_tmx_TmxImageLayer = function(image,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties) {
	format_tmx_TmxBaseLayer.call(this,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties);
	this.image = image;
};
$hxClasses["format.tmx.TmxImageLayer"] = format_tmx_TmxImageLayer;
format_tmx_TmxImageLayer.__name__ = "format.tmx.TmxImageLayer";
format_tmx_TmxImageLayer.__super__ = format_tmx_TmxBaseLayer;
format_tmx_TmxImageLayer.prototype = $extend(format_tmx_TmxBaseLayer.prototype,{
	__class__: format_tmx_TmxImageLayer
});
var format_tmx_TmxTileLayer = function(data,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties) {
	format_tmx_TmxBaseLayer.call(this,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties);
	this.data = data;
};
$hxClasses["format.tmx.TmxTileLayer"] = format_tmx_TmxTileLayer;
format_tmx_TmxTileLayer.__name__ = "format.tmx.TmxTileLayer";
format_tmx_TmxTileLayer.__super__ = format_tmx_TmxBaseLayer;
format_tmx_TmxTileLayer.prototype = $extend(format_tmx_TmxBaseLayer.prototype,{
	__class__: format_tmx_TmxTileLayer
});
var format_tmx_TmxDataEncoding = $hxEnums["format.tmx.TmxDataEncoding"] = { __ename__ : true, __constructs__ : ["None","Base64","CSV","Unknown"]
	,None: {_hx_index:0,__enum__:"format.tmx.TmxDataEncoding",toString:$estr}
	,Base64: {_hx_index:1,__enum__:"format.tmx.TmxDataEncoding",toString:$estr}
	,CSV: {_hx_index:2,__enum__:"format.tmx.TmxDataEncoding",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"format.tmx.TmxDataEncoding",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxDataCompression = $hxEnums["format.tmx.TmxDataCompression"] = { __ename__ : true, __constructs__ : ["None","GZip","ZLib","Unknown"]
	,None: {_hx_index:0,__enum__:"format.tmx.TmxDataCompression",toString:$estr}
	,GZip: {_hx_index:1,__enum__:"format.tmx.TmxDataCompression",toString:$estr}
	,ZLib: {_hx_index:2,__enum__:"format.tmx.TmxDataCompression",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"format.tmx.TmxDataCompression",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxData = function(encoding,compression,tiles,chunks,data) {
	this.encoding = encoding;
	this.compression = compression;
	this.tiles = tiles;
	this.chunks = chunks;
	this.data = data;
};
$hxClasses["format.tmx.TmxData"] = format_tmx_TmxData;
format_tmx_TmxData.__name__ = "format.tmx.TmxData";
format_tmx_TmxData.prototype = {
	__class__: format_tmx_TmxData
};
var format_tmx_TmxChunk = function(x,y,width,height,tiles) {
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.tiles = tiles;
};
$hxClasses["format.tmx.TmxChunk"] = format_tmx_TmxChunk;
format_tmx_TmxChunk.__name__ = "format.tmx.TmxChunk";
format_tmx_TmxChunk.prototype = {
	__class__: format_tmx_TmxChunk
};
var format_tmx_TmxObjectGroupDrawOrder = $hxEnums["format.tmx.TmxObjectGroupDrawOrder"] = { __ename__ : true, __constructs__ : ["Index","Topdown","Unknown"]
	,Index: {_hx_index:0,__enum__:"format.tmx.TmxObjectGroupDrawOrder",toString:$estr}
	,Topdown: {_hx_index:1,__enum__:"format.tmx.TmxObjectGroupDrawOrder",toString:$estr}
	,Unknown: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"format.tmx.TmxObjectGroupDrawOrder",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var format_tmx_TmxObjectGroup = function(drawOrder,objects,color,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties) {
	format_tmx_TmxBaseLayer.call(this,id,name,x,y,offsetX,offsetY,width,height,opacity,visible,tintColor,properties);
	this.color = color;
	this.drawOrder = drawOrder;
	this.objects = objects;
};
$hxClasses["format.tmx.TmxObjectGroup"] = format_tmx_TmxObjectGroup;
format_tmx_TmxObjectGroup.__name__ = "format.tmx.TmxObjectGroup";
format_tmx_TmxObjectGroup.__super__ = format_tmx_TmxBaseLayer;
format_tmx_TmxObjectGroup.prototype = $extend(format_tmx_TmxBaseLayer.prototype,{
	__class__: format_tmx_TmxObjectGroup
});
var format_tmx_TmxPoint = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["format.tmx.TmxPoint"] = format_tmx_TmxPoint;
format_tmx_TmxPoint.__name__ = "format.tmx.TmxPoint";
format_tmx_TmxPoint.prototype = {
	__class__: format_tmx_TmxPoint
};
var format_tmx_TmxObjectType = $hxEnums["format.tmx.TmxObjectType"] = { __ename__ : true, __constructs__ : ["OTRectangle","OTTile","OTExternalTile","OTEllipse","OTPoint","OTPolygon","OTText","OTPolyline"]
	,OTRectangle: {_hx_index:0,__enum__:"format.tmx.TmxObjectType",toString:$estr}
	,OTTile: ($_=function(gid) { return {_hx_index:1,gid:gid,__enum__:"format.tmx.TmxObjectType",toString:$estr}; },$_.__params__ = ["gid"],$_)
	,OTExternalTile: ($_=function(gid,tileset) { return {_hx_index:2,gid:gid,tileset:tileset,__enum__:"format.tmx.TmxObjectType",toString:$estr}; },$_.__params__ = ["gid","tileset"],$_)
	,OTEllipse: {_hx_index:3,__enum__:"format.tmx.TmxObjectType",toString:$estr}
	,OTPoint: {_hx_index:4,__enum__:"format.tmx.TmxObjectType",toString:$estr}
	,OTPolygon: ($_=function(points) { return {_hx_index:5,points:points,__enum__:"format.tmx.TmxObjectType",toString:$estr}; },$_.__params__ = ["points"],$_)
	,OTText: ($_=function(text) { return {_hx_index:6,text:text,__enum__:"format.tmx.TmxObjectType",toString:$estr}; },$_.__params__ = ["text"],$_)
	,OTPolyline: ($_=function(points) { return {_hx_index:7,points:points,__enum__:"format.tmx.TmxObjectType",toString:$estr}; },$_.__params__ = ["points"],$_)
};
var format_tmx_TmxObject = function(id,name,type,x,y,width,height,rotation,visible,objectType,properties,flippedHorizontally,flippedVertically,template) {
	this.id = id;
	this.name = name;
	this.type = type;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.rotation = rotation;
	this.visible = visible;
	this.objectType = objectType;
	this.properties = properties;
	this.flippedHorizontally = flippedHorizontally;
	this.flippedVertically = flippedVertically;
	this.template = template;
};
$hxClasses["format.tmx.TmxObject"] = format_tmx_TmxObject;
format_tmx_TmxObject.__name__ = "format.tmx.TmxObject";
format_tmx_TmxObject.prototype = {
	__class__: format_tmx_TmxObject
};
var format_tmx_TmxText = function(fontFamily,pixelSize,wrap,color,bold,italic,underline,strikeout,kerning,halign,valign,text) {
	this.fontFamily = fontFamily;
	this.pixelSize = pixelSize;
	this.wrap = wrap;
	this.color = color;
	this.bold = bold;
	this.italic = italic;
	this.underline = underline;
	this.strikeout = strikeout;
	this.kerning = kerning;
	this.halign = halign;
	this.valign = valign;
	this.text = text;
};
$hxClasses["format.tmx.TmxText"] = format_tmx_TmxText;
format_tmx_TmxText.__name__ = "format.tmx.TmxText";
format_tmx_TmxText.prototype = {
	__class__: format_tmx_TmxText
};
var format_tmx_TmxPropertyType = $hxEnums["format.tmx.TmxPropertyType"] = { __ename__ : true, __constructs__ : ["PTString","PTInt","PTBool","PTFloat","PTFile","PTColor"]
	,PTString: {_hx_index:0,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
	,PTInt: {_hx_index:1,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
	,PTBool: {_hx_index:2,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
	,PTFloat: {_hx_index:3,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
	,PTFile: {_hx_index:4,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
	,PTColor: {_hx_index:5,__enum__:"format.tmx.TmxPropertyType",toString:$estr}
};
var format_tmx__$Data_ImplTmxProperties = function() {
	this.names = [];
	this.types = [];
	this.strings = [];
	this.cache = [];
	this.ints = [];
	this.floats = [];
};
$hxClasses["format.tmx._Data.ImplTmxProperties"] = format_tmx__$Data_ImplTmxProperties;
format_tmx__$Data_ImplTmxProperties.__name__ = "format.tmx._Data.ImplTmxProperties";
format_tmx__$Data_ImplTmxProperties.prototype = {
	exists: function(name) {
		return this.names.indexOf(name) != -1;
	}
	,setRaw: function(name,value,type) {
		var idx = this.names.indexOf(name);
		if(idx == -1) {
			this.names.push(name);
			this.strings.push(value);
			this.types.push(type);
		} else {
			this.strings[idx] = value;
			this.types[idx] = type;
			this.cache[idx] = null;
		}
	}
	,getString: function(name) {
		var idx = this.names.indexOf(name);
		if(idx == -1) {
			return null;
		}
		return this.strings[idx];
	}
	,propagateTo: function(other,_override) {
		if(_override == null) {
			_override = false;
		}
		var i = 0;
		while(i < this.names.length) {
			if(other.names.indexOf(this.names[i]) == -1 || _override) {
				other.setRaw(this.names[i],this.strings[i],this.types[i]);
			}
			++i;
		}
	}
	,__class__: format_tmx__$Data_ImplTmxProperties
};
var format_tmx_TmxObjectTemplate = function(tileset,object) {
	this.tileset = tileset;
	this.object = object;
};
$hxClasses["format.tmx.TmxObjectTemplate"] = format_tmx_TmxObjectTemplate;
format_tmx_TmxObjectTemplate.__name__ = "format.tmx.TmxObjectTemplate";
format_tmx_TmxObjectTemplate.prototype = {
	__class__: format_tmx_TmxObjectTemplate
};
var format_tmx_TmxObjectTypeTemplate = function(name,color,properties) {
	this.name = name;
	this.color = color;
	this.properties = properties;
};
$hxClasses["format.tmx.TmxObjectTypeTemplate"] = format_tmx_TmxObjectTypeTemplate;
format_tmx_TmxObjectTypeTemplate.__name__ = "format.tmx.TmxObjectTypeTemplate";
format_tmx_TmxObjectTypeTemplate.prototype = {
	__class__: format_tmx_TmxObjectTypeTemplate
};
var format_tmx_TmxObjectTypeProperty = function(name,type,defaultValue) {
	this.name = name;
	this.type = type;
	this.defaultValue = defaultValue;
};
$hxClasses["format.tmx.TmxObjectTypeProperty"] = format_tmx_TmxObjectTypeProperty;
format_tmx_TmxObjectTypeProperty.__name__ = "format.tmx.TmxObjectTypeProperty";
format_tmx_TmxObjectTypeProperty.prototype = {
	__class__: format_tmx_TmxObjectTypeProperty
};
var format_tmx_Reader = function() {
};
$hxClasses["format.tmx.Reader"] = format_tmx_Reader;
format_tmx_Reader.__name__ = "format.tmx.Reader";
format_tmx_Reader.prototype = {
	read: function(xml,localPath) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Invalid nodeType " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
		}
		var map = haxe_xml__$Access_NodeAccess_$Impl_$.resolve(xml,"map");
		var properties = this.resolveProperties(map);
		var tilesets = [];
		var layers = [];
		var element = map.elements();
		while(element.hasNext()) {
			var element1 = element.next();
			var _g;
			if(element1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(element1.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(element1.nodeType));
				}
				_g = element1.nodeName;
			}
			switch(_g) {
			case "group":
				layers.push(format_tmx_TmxLayer.LGroup(this.resolveGroup(element1)));
				break;
			case "imagelayer":
				layers.push(format_tmx_TmxLayer.LImageLayer(this.resolveImageLayer(element1)));
				break;
			case "layer":
				layers.push(format_tmx_TmxLayer.LTileLayer(this.resolveTileLayer(element1)));
				break;
			case "objectgroup":
				layers.push(format_tmx_TmxLayer.LObjectGroup(this.resolveObjectGroup(element1)));
				break;
			case "tileset":
				var properties1 = this.resolveProperties(element1);
				var terrains = [];
				var hasTerrains = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"terraintypes");
				var tiles = [];
				var hasTiles = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"tile");
				var tileOffset = null;
				var hasTileOffset = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"tileoffset");
				var wangSets = [];
				var hasWangSets = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"wangsets");
				var grid = null;
				var hasGrid = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"grid");
				if(hasTileOffset) {
					var node = haxe_xml__$Access_NodeAccess_$Impl_$.resolve(element1,"tileoffset");
					tileOffset = new format_tmx_TmxTileOffset(Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"x")),Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"y")));
				}
				if(hasTerrains) {
					var _g1 = 0;
					var _g11 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(element1,"terraintypes"),"terrain");
					while(_g1 < _g11.length) {
						var node1 = _g11[_g1];
						++_g1;
						terrains.push(new format_tmx_TmxTerrain(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"name"),Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"tile")),this.resolveProperties(node1)));
					}
				}
				if(hasWangSets) {
					var _g2 = 0;
					var _g12 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(element1,"wangsets"),"wangset");
					while(_g2 < _g12.length) wangSets.push(this.resolveWangSet(_g12[_g2++]));
				}
				if(hasGrid) {
					var gnode = haxe_xml__$Access_NodeAccess_$Impl_$.resolve(element1,"grid");
					var _g13 = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(gnode,"width"));
					var _g3 = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(gnode,"height"));
					var input = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(gnode,"orientation");
					var grid1;
					switch(input) {
					case "hexagonal":
						grid1 = format_tmx_TmxOrientation.Hexagonal;
						break;
					case "isometric":
						grid1 = format_tmx_TmxOrientation.Isometric;
						break;
					case "orthogonal":
						grid1 = format_tmx_TmxOrientation.Orthogonal;
						break;
					case "staggered":
						grid1 = format_tmx_TmxOrientation.Staggered;
						break;
					default:
						grid1 = format_tmx_TmxOrientation.Unknown(input);
					}
					grid = new format_tmx_TmxTilesetGrid(grid1,_g13,_g3);
				}
				if(hasTiles) {
					var _g4 = 0;
					var _g14 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(element1,"tile");
					while(_g4 < _g14.length) {
						var node2 = _g14[_g4];
						++_g4;
						var animation = null;
						if(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(node2,"animation")) {
							animation = [];
							var _g5 = 0;
							var _g15 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(node2,"animation"),"frame");
							while(_g5 < _g15.length) {
								var frameInfo = _g15[_g5];
								++_g5;
								animation.push(new format_tmx_TmxTilesetTileFrame(Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(frameInfo,"tileid")),Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(frameInfo,"duration"))));
							}
						}
						var _g6 = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"id"));
						var _g51 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"terrain") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"terrain") : null;
						var _g41 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"probability") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"probability")) : 0;
						var _g31 = this.resolveProperties(node2);
						var _g21 = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(node2,"image") ? this.resolveImage(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(node2,"image")) : null;
						var _g16 = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(node2,"objectgroup") ? this.resolveObjectGroup(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(node2,"objectgroup")) : null;
						tiles.push(new format_tmx_TmxTilesetTile(_g6,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"type") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"type") : null,_g51,_g41,_g31,_g21,_g16,animation));
					}
				}
				var tmp;
				var _g9 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"firstgid") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"firstgid")) : null;
				var _g8 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"source") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"source") : null;
				var _g7 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"name") : null;
				var _g61 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"tilewidth") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"tilewidth")) : 0;
				var _g52 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"tileheight") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"tileheight")) : 0;
				var _g42 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"spacing") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"spacing")) : 0;
				var _g32 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"margin") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"margin")) : 0;
				var _g17 = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(element1,"image") ? this.resolveImage(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(element1,"image")) : null;
				var tset = new format_tmx_TmxTileset(_g9,_g8,_g7,_g61,_g52,_g42,_g32,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"tilecount") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"tilecount")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(element1,"columns") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(element1,"columns")) : 0,tileOffset,properties1,_g17,terrains,tiles,grid,wangSets);
				if(tset.source != null && this.resolveTSX != null) {
					format_tmx_Tools.applyTSX(this.resolveTSX(tset.source),tset);
				}
				tmp = tset;
				tilesets.push(tmp);
				break;
			}
		}
		this.width = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"width"));
		this.height = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"height"));
		var _g161 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"version");
		var _g151 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"tiledversion") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"tiledversion") : "";
		var input1 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"orientation");
		var _g141;
		switch(input1) {
		case "hexagonal":
			_g141 = format_tmx_TmxOrientation.Hexagonal;
			break;
		case "isometric":
			_g141 = format_tmx_TmxOrientation.Isometric;
			break;
		case "orthogonal":
			_g141 = format_tmx_TmxOrientation.Orthogonal;
			break;
		case "staggered":
			_g141 = format_tmx_TmxOrientation.Staggered;
			break;
		default:
			_g141 = format_tmx_TmxOrientation.Unknown(input1);
		}
		var _g131 = this.width;
		var _g121 = this.height;
		var _g111 = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"tilewidth"));
		var _g10 = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"tileheight"));
		var _g91;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"backgroundcolor")) {
			var input2 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"backgroundcolor");
			_g91 = HxOverrides.cca(input2,0) == 35 ? Std.parseInt("0x" + HxOverrides.substr(input2,1,null)) : Std.parseInt("0x" + input2);
		} else {
			_g91 = 0;
		}
		var _g81;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"renderorder")) {
			var input3 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"renderorder");
			switch(input3) {
			case "left-down":
				_g81 = format_tmx_TmxRenderOrder.LeftDown;
				break;
			case "left-up":
				_g81 = format_tmx_TmxRenderOrder.LeftUp;
				break;
			case "right-down":
				_g81 = format_tmx_TmxRenderOrder.RightDown;
				break;
			case "right-up":
				_g81 = format_tmx_TmxRenderOrder.RightUp;
				break;
			default:
				_g81 = format_tmx_TmxRenderOrder.Unknown(input3);
			}
		} else {
			_g81 = format_tmx_TmxRenderOrder.RightDown;
		}
		var _g43;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"staggerindex")) {
			var input4 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"staggerindex");
			switch(input4) {
			case "even":
				_g43 = format_tmx_TmxStaggerIndex.Even;
				break;
			case "odd":
				_g43 = format_tmx_TmxStaggerIndex.Odd;
				break;
			default:
				_g43 = format_tmx_TmxStaggerIndex.Unknown(input4);
			}
		} else {
			_g43 = null;
		}
		var _g33;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"staggeraxis")) {
			var input5 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"staggeraxis");
			switch(input5) {
			case "x":
				_g33 = format_tmx_TmxStaggerAxis.AxisX;
				break;
			case "y":
				_g33 = format_tmx_TmxStaggerAxis.AxisY;
				break;
			default:
				_g33 = format_tmx_TmxStaggerAxis.Unknown(input5);
			}
		} else {
			_g33 = null;
		}
		return new format_tmx_TmxMap(_g161,_g151,_g141,_g131,_g121,_g111,_g10,_g91,_g81,_g43,_g33,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"hexsidelength") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"hexsidelength")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"nextobjectid") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"nextobjectid")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"nextlayerid") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"nextlayerid")) : 0,properties,tilesets,layers,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(map,"infinite") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(map,"infinite") == "1",localPath);
	}
	,resolveGroup: function(input) {
		var layers = [];
		var element = input.elements();
		while(element.hasNext()) {
			var element1 = element.next();
			var _g;
			if(element1.nodeType == Xml.Document) {
				_g = "Document";
			} else {
				if(element1.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(element1.nodeType));
				}
				_g = element1.nodeName;
			}
			switch(_g) {
			case "group":
				layers.push(format_tmx_TmxLayer.LGroup(this.resolveGroup(element1)));
				break;
			case "imagelayer":
				layers.push(format_tmx_TmxLayer.LImageLayer(this.resolveImageLayer(element1)));
				break;
			case "layer":
				layers.push(format_tmx_TmxLayer.LTileLayer(this.resolveTileLayer(element1)));
				break;
			case "objectgroup":
				layers.push(format_tmx_TmxLayer.LObjectGroup(this.resolveObjectGroup(element1)));
				break;
			}
		}
		return new format_tmx_TmxGroup(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"id") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"id")) : 0,haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"name"),haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsetx") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsetx")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsety") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsety")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"opacity") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"opacity")) : 1,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"visible") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"visible") == "1" : true,this.resolveProperties(input),layers);
	}
	,resolveWangSet: function(input) {
		var corners = [];
		var edges = [];
		var tiles = [];
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"wangcornercolor");
		while(_g < _g1.length) {
			var node = _g1[_g];
			++_g;
			var _g2 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"name") : null;
			var _g11;
			if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"color")) {
				var input1 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"color");
				_g11 = HxOverrides.cca(input1,0) == 35 ? Std.parseInt("0x" + HxOverrides.substr(input1,1,null)) : Std.parseInt("0x" + input1);
			} else {
				_g11 = 0;
			}
			corners.push(new format_tmx_TmxWangSetColor(_g2,_g11,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"tile") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"tile")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"probability") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"probability")) : 0));
		}
		var _g21 = 0;
		var _g3 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"wangedgecolor");
		while(_g21 < _g3.length) {
			var node1 = _g3[_g21];
			++_g21;
			var _g22 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"name") : null;
			var _g12;
			if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"color")) {
				var input2 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"color");
				_g12 = HxOverrides.cca(input2,0) == 35 ? Std.parseInt("0x" + HxOverrides.substr(input2,1,null)) : Std.parseInt("0x" + input2);
			} else {
				_g12 = 0;
			}
			edges.push(new format_tmx_TmxWangSetColor(_g22,_g12,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"tile") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"tile")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"probability") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"probability")) : 0));
		}
		var _g4 = 0;
		var _g5 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"wangtile");
		while(_g4 < _g5.length) {
			var node2 = _g5[_g4];
			++_g4;
			tiles.push(new format_tmx_TmxWangSetTile(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"tileid") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"tileid")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"wangid") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"wangid")) : 0));
		}
		return new format_tmx_TmxWangSet(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"name") : null,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"tile") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"tile")) : 0,corners,edges,tiles);
	}
	,resolveImage: function(input) {
		var _g5 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"format") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"format") : "";
		var _g4 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"id") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"id") : "";
		var _g3 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"source") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"source") : "";
		var _g2;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"transparent")) {
			var input1 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"transparent");
			_g2 = HxOverrides.cca(input1,0) == 35 ? Std.parseInt("0x" + HxOverrides.substr(input1,1,null)) : Std.parseInt("0x" + input1);
		} else {
			_g2 = null;
		}
		return new format_tmx_TmxImage(_g5,_g4,_g3,_g2,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"width")) : null,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"height")) : null,haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"data") ? this.resolveData(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(input,"data"),false) : null);
	}
	,resolveData: function(input,isTileData) {
		if(isTileData == null) {
			isTileData = true;
		}
		var encoding = format_tmx_TmxDataEncoding.None;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"encoding")) {
			switch(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"encoding")) {
			case "base64":
				encoding = format_tmx_TmxDataEncoding.Base64;
				break;
			case "csv":
				encoding = format_tmx_TmxDataEncoding.CSV;
				break;
			default:
				throw new js__$Boot_HaxeError("Unknown encoding \"" + haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"encoding") + "\"");
			}
		}
		var compression = format_tmx_TmxDataCompression.None;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"compression")) {
			switch(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"compression")) {
			case "gzip":
				compression = format_tmx_TmxDataCompression.GZip;
				break;
			case "zlib":
				compression = format_tmx_TmxDataCompression.ZLib;
				break;
			default:
				throw new js__$Boot_HaxeError("Unknown compression \"" + haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"compression") + "\"");
			}
		}
		var chunks = null;
		var tiles = null;
		var data = null;
		switch(encoding._hx_index) {
		case 0:
			if(isTileData) {
				if(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"chunk")) {
					chunks = [];
					var _g = 0;
					var _g1 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"chunk");
					while(_g < _g1.length) {
						var node = _g1[_g];
						++_g;
						var chunk = new format_tmx_TmxChunk(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"x") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"y") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"width")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node,"height")) : 0,[]);
						var chunkTiles = chunk.tiles;
						var _g2 = 0;
						var _g11 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(node,"tile");
						while(_g2 < _g11.length) chunkTiles.push(Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(_g11[_g2++],"gid")));
						chunks.push(chunk);
					}
				} else {
					tiles = [];
					var _g3 = 0;
					var _g12 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"tile");
					while(_g3 < _g12.length) tiles.push(Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(_g12[_g3++],"gid")));
				}
			} else if(compression == format_tmx_TmxDataCompression.None) {
				data = haxe_io_Bytes.ofString(StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(input)));
			} else {
				data = this.uncompressData(new haxe_io_StringInput(StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(input))),compression);
			}
			break;
		case 1:
			var tile;
			if(isTileData && haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"chunk")) {
				chunks = [];
				var _g4 = 0;
				var _g13 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"chunk");
				while(_g4 < _g13.length) {
					var node1 = _g13[_g4];
					++_g4;
					var chunk1 = new format_tmx_TmxChunk(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"x") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"y") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"width")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node1,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node1,"height")) : 0,[]);
					var chunkTiles1 = chunk1.tiles;
					data = haxe_crypto_Base64.decode(StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(node1)));
					if(compression != format_tmx_TmxDataCompression.None) {
						data = this.uncompressData(new haxe_io_BytesInput(data),compression);
					}
					var tilesCount = data.length / 4 | 0;
					var d = new haxe_io_BytesInput(data);
					d.set_bigEndian(false);
					var _g5 = 0;
					while(_g5 < tilesCount) {
						++_g5;
						tile = d.readInt32();
						chunkTiles1.push(tile);
					}
					chunks.push(chunk1);
				}
				data = null;
			} else {
				data = haxe_crypto_Base64.decode(StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(input)));
				if(compression != format_tmx_TmxDataCompression.None) {
					data = this.uncompressData(new haxe_io_BytesInput(data),compression);
				}
				if(isTileData) {
					tiles = [];
					var tilesCount1 = data.length / 4 | 0;
					var d1 = new haxe_io_BytesInput(data);
					d1.set_bigEndian(false);
					var _g6 = 0;
					while(_g6 < tilesCount1) {
						++_g6;
						tile = d1.readInt32();
						tiles.push(tile);
					}
					data = null;
				}
			}
			break;
		case 2:
			if(isTileData) {
				if(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"chunk")) {
					chunks = [];
					var _g7 = 0;
					var _g14 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"chunk");
					while(_g7 < _g14.length) {
						var node2 = _g14[_g7];
						++_g7;
						var chunk2 = new format_tmx_TmxChunk(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"x") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"y") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"width")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(node2,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(node2,"height")) : 0,[]);
						var chunkTiles2 = chunk2.tiles;
						var split = StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(node2)).split(",");
						var _g8 = 0;
						while(_g8 < split.length) chunkTiles2.push(Std.parseInt(split[_g8++]));
						chunks.push(chunk2);
					}
				} else {
					tiles = [];
					var split1 = StringTools.trim(haxe_xml__$Access_Access_$Impl_$.get_innerData(input)).split(",");
					var _g9 = 0;
					while(_g9 < split1.length) tiles.push(Std.parseInt(split1[_g9++]));
				}
			} else {
				throw new js__$Boot_HaxeError("CSV encoding available only for tile data");
			}
			break;
		case 3:
			throw new js__$Boot_HaxeError("Unknown data encoding: " + encoding.value);
		}
		return new format_tmx_TmxData(encoding,compression,tiles,chunks,data);
	}
	,uncompressData: function(i,compression) {
		switch(compression._hx_index) {
		case 0:
			return i.readAll();
		case 1:
			throw new js__$Boot_HaxeError("GZip compression currently not supported.");
		case 2:
			return haxe_zip_InflateImpl.run(i);
		case 3:
			throw new js__$Boot_HaxeError("Unknown compression method: " + compression.value);
		}
	}
	,resolveTileLayer: function(input) {
		return new format_tmx_TmxTileLayer(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"data") ? this.resolveData(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(input,"data")) : null,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"id") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"id")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"name") : "",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"x") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"y") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsetx") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsetx")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsety") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsety")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"width")) : this.width,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"height")) : this.height,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"opacity") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"opacity")) : 1,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"visible") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"visible") == "1" : true,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"tintcolor") ? this.parseColor(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"tintcolor")) : 16777215,this.resolveProperties(input));
	}
	,resolveObjectGroup: function(input) {
		var objects = [];
		var _g = 0;
		var _g1 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(input,"object");
		while(_g < _g1.length) objects.push(this.resolveObject(_g1[_g++]));
		var group;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"draworder")) {
			var input1 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"draworder");
			switch(input1) {
			case "index":
				group = format_tmx_TmxObjectGroupDrawOrder.Index;
				break;
			case "topdown":
				group = format_tmx_TmxObjectGroupDrawOrder.Topdown;
				break;
			default:
				group = format_tmx_TmxObjectGroupDrawOrder.Unknown(input1);
			}
		} else {
			group = format_tmx_TmxObjectGroupDrawOrder.Topdown;
		}
		return new format_tmx_TmxObjectGroup(group,objects,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"color") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"color")) : null,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"id") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"id")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"name") : "",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"x") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"y") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsetx") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsetx")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsety") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsety")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"width")) : this.width,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"height")) : this.height,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"opacity") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"opacity")) : 1,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"visible") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"visible") == "1" : true,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"tintcolor") ? this.parseColor(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"tintcolor")) : 16777215,this.resolveProperties(input));
	}
	,resolveObject: function(obj,applyObjectTypeTemplate) {
		if(applyObjectTypeTemplate == null) {
			applyObjectTypeTemplate = true;
		}
		var flippedV = false;
		var flippedH = false;
		var type;
		if(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(obj,"ellipse")) {
			type = format_tmx_TmxObjectType.OTEllipse;
		} else if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"gid")) {
			var gid = Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"gid"));
			flippedH = (gid & -2147483648) == -2147483648;
			if(flippedH && gid < 0) {
				gid = -gid;
			}
			flippedV = (gid & 1073741824) == 1073741824;
			type = format_tmx_TmxObjectType.OTTile(gid & 1073741823);
		} else {
			type = haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(obj,"polygon") ? format_tmx_TmxObjectType.OTPolygon(this.readPoints(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(obj,"polygon"))) : haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(obj,"polyline") ? format_tmx_TmxObjectType.OTPolyline(this.readPoints(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(obj,"polyline"))) : haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(obj,"text") ? format_tmx_TmxObjectType.OTText(this.resolveText(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(obj,"text"))) : haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(obj,"point") ? format_tmx_TmxObjectType.OTPoint : format_tmx_TmxObjectType.OTRectangle;
		}
		var object = new format_tmx_TmxObject(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"id") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"id")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"name") : "",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"type") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"type") : "",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"x") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"y") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"width") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"width")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"height") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"height")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"rotation") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"rotation")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"visible") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"visible") == "1" : true,type,this.resolveProperties(obj),flippedH,flippedV,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"template") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"template") : null);
		if(object.template != null && this.resolveTemplate != null) {
			var template = this.resolveTemplate(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(obj,"template"));
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"name")) {
				object.name = template.object.name;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"type")) {
				object.type = template.object.type;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"x")) {
				object.x = template.object.x;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"y")) {
				object.x = template.object.y;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"width")) {
				object.width = template.object.width;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"height")) {
				object.height = template.object.height;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"rotation")) {
				object.rotation = template.object.rotation;
			}
			if(!haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(obj,"gid")) {
				object.flippedHorizontally = template.object.flippedHorizontally;
				object.flippedVertically = template.object.flippedVertically;
			}
			template.object.properties.propagateTo(object.properties);
			var _g13 = template.object.objectType;
			object.objectType = _g13._hx_index == 1 ? format_tmx_TmxObjectType.OTExternalTile(_g13.gid,template.tileset) : template.object.objectType;
		}
		if(applyObjectTypeTemplate && object.type != null && object.type != "" && this.resolveTypeTemplate != null) {
			format_tmx_Tools.applyObjectTypeTemplate(object,this.resolveTypeTemplate(object.type));
		}
		return object;
	}
	,readPoints: function(input) {
		var arr = [];
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"points")) {
			var points = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"points").split(" ");
			var _g = 0;
			while(_g < points.length) {
				var point = points[_g];
				++_g;
				var idx = point.indexOf(",");
				arr.push(new format_tmx_TmxPoint(parseFloat(HxOverrides.substr(point,0,idx)),parseFloat(HxOverrides.substr(point,idx + 1,null))));
			}
		}
		return arr;
	}
	,resolveText: function(input) {
		var _g10 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"fontfamily") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"fontfamily") : "sans-serif";
		var _g9 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"pixelsize") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"pixelsize")) : 16;
		var _g8 = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"wrap") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"wrap") == "1";
		var _g7;
		if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"color")) {
			var input1 = haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"color");
			_g7 = HxOverrides.cca(input1,0) == 35 ? Std.parseInt("0x" + HxOverrides.substr(input1,1,null)) : Std.parseInt("0x" + input1);
		} else {
			_g7 = 0;
		}
		return new format_tmx_TmxText(_g10,_g9,_g8,_g7,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"bold") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"bold") == "1",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"italic") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"italic") == "1",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"underline") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"underline") == "1",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"strikeout") && haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"strikeout") == "1",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"kerning") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"kerning") == "1" : true,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"halign") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"halign") : "left",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"valign") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"valign") : "top",haxe_xml__$Access_Access_$Impl_$.get_innerData(input));
	}
	,resolveImageLayer: function(input) {
		return new format_tmx_TmxImageLayer(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"image") ? this.resolveImage(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(input,"image")) : null,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"id") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"id")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"name") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"name") : "",haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"x") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"x")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"y") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"y")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsetx") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsetx")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"offsety") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"offsety")) : 0,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"width") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"width")) : this.width,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"height") ? Std.parseInt(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"height")) : this.height,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"opacity") ? parseFloat(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"opacity")) : 1,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"visible") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"visible") == "1" : true,haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(input,"tintcolor") ? this.parseColor(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(input,"tintcolor")) : 16777215,this.resolveProperties(input));
	}
	,parseColor: function(color) {
		return Std.parseInt("0x" + HxOverrides.substr(color,1,null));
	}
	,resolveProperties: function(input) {
		var props = new format_tmx__$Data_ImplTmxProperties();
		var value;
		if(haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve(input,"properties")) {
			var _g = 0;
			var _g1 = haxe_xml__$Access_NodeListAccess_$Impl_$.resolve(haxe_xml__$Access_NodeAccess_$Impl_$.resolve(input,"properties"),"property");
			while(_g < _g1.length) {
				var prop = _g1[_g];
				++_g;
				value = haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(prop,"value") ? haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"value") : haxe_xml__$Access_Access_$Impl_$.get_innerData(prop);
				if(haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve(prop,"type")) {
					switch(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"type")) {
					case "bool":
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTBool);
						break;
					case "color":
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTColor);
						break;
					case "file":
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTFile);
						break;
					case "float":
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTFloat);
						break;
					case "int":
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTInt);
						break;
					default:
						props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTString);
					}
				} else {
					props.setRaw(haxe_xml__$Access_AttribAccess_$Impl_$.resolve(prop,"name"),value,format_tmx_TmxPropertyType.PTString);
				}
			}
		}
		return props;
	}
	,__class__: format_tmx_Reader
};
var format_tmx_Tools = function() { };
$hxClasses["format.tmx.Tools"] = format_tmx_Tools;
format_tmx_Tools.__name__ = "format.tmx.Tools";
format_tmx_Tools.applyTSX = function(tsx,base) {
	base.properties = tsx.properties;
	base.name = tsx.name;
	base.columns = tsx.columns;
	base.grid = tsx.grid;
	base.image = tsx.image;
	base.margin = tsx.margin;
	base.spacing = tsx.spacing;
	base.tileOffset = tsx.tileOffset;
	base.tileCount = tsx.tileCount;
	base.tileHeight = tsx.tileHeight;
	base.tileWidth = tsx.tileWidth;
	base.terrainTypes = tsx.terrainTypes;
	base.tiles = tsx.tiles;
	base.wangSets = tsx.wangSets;
};
format_tmx_Tools.applyObjectTypeTemplate = function(obj,ot) {
	var props = obj.properties;
	var _g = 0;
	var _g1 = ot.properties;
	while(_g < _g1.length) {
		var prop = _g1[_g];
		++_g;
		if(prop.defaultValue != null && !props.exists(prop.name)) {
			props.setRaw(prop.name,prop.defaultValue,prop.type);
		}
	}
};
var gameObjects_Arm = function() {
	com_framework_utils_Entity.call(this);
	this.pool = true;
};
$hxClasses["gameObjects.Arm"] = gameObjects_Arm;
gameObjects_Arm.__name__ = "gameObjects.Arm";
gameObjects_Arm.__super__ = com_framework_utils_Entity;
gameObjects_Arm.prototype = $extend(com_framework_utils_Entity.prototype,{
	shoot: function(aX,aY,dirX,dirY) {
		this.recycle(gameObjects_Projectile).shoot(aX,aY,dirX,dirY);
	}
	,__class__: gameObjects_Arm
});
var gameObjects_Bullet = function() {
	this.damage = 20;
	this.permanentDir = 0;
	this.framesExisting = 0;
	this.frameCheck = 4;
	this.totalLifeTime = 1;
	this.lifeTime = 0;
	com_framework_utils_Entity.call(this);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 60;
	this.collision.height = 10;
	this.collision.userData = this;
	this.display = new com_gEngine_helper_RectangleDisplay();
	this.display = new com_gEngine_display_Sprite("bullet");
	this.display.scaleX = 0.7;
	this.display.scaleY = 0.7;
	this.display.offsetY = -40;
};
$hxClasses["gameObjects.Bullet"] = gameObjects_Bullet;
gameObjects_Bullet.__name__ = "gameObjects.Bullet";
gameObjects_Bullet.__super__ = com_framework_utils_Entity;
gameObjects_Bullet.prototype = $extend(com_framework_utils_Entity.prototype,{
	limboStart: function() {
		this.display.removeFromParent();
		this.collision.removeFromParent();
	}
	,update: function(dt) {
		this.framesExisting++;
		if(!GlobalGameData.isTimeStopped || this.framesExisting <= this.frameCheck) {
			this.lifeTime += dt;
			if(this.lifeTime >= this.totalLifeTime) {
				this.die();
			}
		}
		this.collision.update(dt);
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,shoot: function(x,y,dirX,dirY) {
		this.lifeTime = 0;
		this.collision.x = dirX == 1 ? x : x - 60;
		this.collision.y = y;
		this.collision.velocityX = 1500 * dirX;
		this.permanentDir = dirX;
		this.collision.velocityY = 0;
		GlobalGameData.simulationLayer.addChild(this.display);
		GlobalGameData.bullets.add(this.collision);
		GlobalGameData.bulletList.push(this);
	}
	,stopTimeline: function() {
		if(this.framesExisting > this.frameCheck) {
			this.collision.velocityX = 0;
			this.collision.velocityY = 0;
		}
	}
	,resetTimeline: function() {
		this.collision.velocityX = 1500 * this.permanentDir;
	}
	,__class__: gameObjects_Bullet
});
var gameObjects_Enemy = function() {
	com_framework_utils_Entity.call(this);
};
$hxClasses["gameObjects.Enemy"] = gameObjects_Enemy;
gameObjects_Enemy.__name__ = "gameObjects.Enemy";
gameObjects_Enemy.__super__ = com_framework_utils_Entity;
gameObjects_Enemy.prototype = $extend(com_framework_utils_Entity.prototype,{
	update: function(dt) {
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,render: function() {
		com_framework_utils_Entity.prototype.render.call(this);
	}
	,__class__: gameObjects_Enemy
});
var gameObjects_Gun = function() {
	com_framework_utils_Entity.call(this);
	this.pool = true;
};
$hxClasses["gameObjects.Gun"] = gameObjects_Gun;
gameObjects_Gun.__name__ = "gameObjects.Gun";
gameObjects_Gun.__super__ = com_framework_utils_Entity;
gameObjects_Gun.prototype = $extend(com_framework_utils_Entity.prototype,{
	shoot: function(aX,aY,dirX,dirY) {
		this.recycle(gameObjects_Bullet).shoot(aX,aY,dirX,kha_math_Random.getFloatIn(-0.05,0.05));
	}
	,__class__: gameObjects_Gun
});
var gameObjects_Homura = function(X,Y,layer) {
	this.timeStopReady = 0;
	this.timeStopCooldown = 1200 - 60 * GlobalGameData.lap;
	this.playSpecialAnimation = false;
	this.timeCounter = 0;
	this.returnControl = 0;
	this.controlEnabled = true;
	this.isNotAlive = false;
	this.hurtCounter = 0;
	this.isHurt = false;
	this.jump = 0;
	this.isAir = false;
	this.health = 100;
	this.rocketRecoil = 0;
	this.pistolRecoil = 0;
	com_framework_utils_Entity.call(this);
	if(this.timeStopCooldown < 600) {
		this.timeStopCooldown = 600;
	}
	this.screenWidth = com_gEngine_GEngine.get_i().width;
	this.screenHeight = com_gEngine_GEngine.get_i().height;
	this.direction = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("homurarpg");
	this.display.timeline.playAnimation("idle_");
	this.display.timeline.frameRate = 0.066666666666666666;
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 80;
	this.collision.height = 110;
	this.collision.x = X;
	this.collision.y = Y;
	this.collision.accelerationY = 2000;
	this.collision.maxVelocityX = 500;
	this.collision.maxVelocityY = 800;
	layer.addChild(this.display);
	this.gun = new gameObjects_Gun();
	this.addChild(this.gun);
	this.display.set_smooth(false);
	this.rocketLauncher = new gameObjects_RocketLauncher();
	this.addChild(this.rocketLauncher);
	this.display.set_smooth(false);
	this.shootingPistol = false;
	this.pistolRecoil = 0;
	this.shootingRocket = false;
	this.rocketRecoil = 0;
};
$hxClasses["gameObjects.Homura"] = gameObjects_Homura;
gameObjects_Homura.__name__ = "gameObjects.Homura";
gameObjects_Homura.__super__ = com_framework_utils_Entity;
gameObjects_Homura.prototype = $extend(com_framework_utils_Entity.prototype,{
	update: function(dt) {
		if(this.health <= 0) {
			this.collision.velocityX = 0;
			this.isNotAlive = true;
		}
		if(this.timeStopReady > 0) {
			this.timeStopReady--;
		}
		if(this.timeCounter == 30) {
			this.playSpecialAnimation = false;
		}
		if(GlobalGameData.isTimeStopped) {
			this.timeCounter++;
		}
		if(this.timeCounter >= GlobalGameData.timeStopDuration) {
			GlobalGameData.isTimeStopped = false;
			this.timeCounter = 0;
		}
		this.returnControl++;
		if(this.returnControl == 30) {
			this.returnControl = 0;
			this.controlEnabled = true;
		}
		if(!this.isNotAlive && this.controlEnabled) {
			this.collision.velocityX = 0;
			if(this.collision.isTouching(8)) {
				this.isAir = false;
				this.jump = 0;
			} else {
				this.isAir = true;
			}
			if(this.isHurt) {
				this.hurtCounter++;
			}
			if(this.hurtCounter >= 15) {
				this.isHurt = false;
			}
			if(com_framework_utils_Input.i.isKeyCodeDown(37)) {
				if(!this.playSpecialAnimation && !this.shootingPistol && !this.shootingRocket || this.isAir) {
					this.collision.velocityX = -500.;
				}
			}
			if(com_framework_utils_Input.i.isKeyCodeDown(39)) {
				if(!this.playSpecialAnimation && !this.shootingPistol && !this.shootingRocket || this.isAir) {
					this.collision.velocityX = 500;
				}
			}
			if(com_framework_utils_Input.i.isKeyCodePressed(32) && this.shootingPistol != true && this.shootingRocket != true) {
				this.beginJump();
			}
			if(this.collision.velocityX != 0) {
				var _this = this.direction;
				var x = this.collision.velocityX;
				var y = this.collision.velocityY;
				if(y == null) {
					y = 0;
				}
				if(x == null) {
					x = 0;
				}
				_this.x = x;
				_this.y = y;
				var _this1 = this.direction;
				var _this2 = this.direction;
				var x1 = _this2.x;
				var y1 = _this2.y;
				if(y1 == null) {
					y1 = 0;
				}
				if(x1 == null) {
					x1 = 0;
				}
				var v_x = x1;
				var v_y = y1;
				var currentLength = Math.sqrt(v_x * v_x + v_y * v_y);
				if(currentLength != 0) {
					var mul = 1 / currentLength;
					v_x *= mul;
					v_y *= mul;
				}
				_this1.x = v_x;
				_this1.y = v_y;
			} else {
				this.direction.y = -1;
			}
			if(com_framework_utils_Input.i.isKeyCodePressed(90)) {
				if(this.pistolRecoil == 0 && this.rocketRecoil == 0) {
					this.pistolRecoil++;
					this.shootingPistol = true;
					this.gun.shoot(this.get_x(),this.get_y() - this.get_height() * 0.65,this.display.scaleX,0);
					com_soundLib_SoundManager.playFx("gunshot2",false);
				}
			}
			if(this.shootingPistol) {
				this.pistolRecoil++;
				if(this.pistolRecoil == 15) {
					this.pistolRecoil = 0;
					this.shootingPistol = false;
				}
			}
			if(com_framework_utils_Input.i.isKeyCodePressed(88) && GlobalGameData.launcherEnabled) {
				if(this.rocketRecoil == 0 && this.pistolRecoil == 0) {
					this.rocketRecoil++;
					this.shootingRocket = true;
				}
			}
			if(this.shootingRocket) {
				this.rocketRecoil++;
				if(this.rocketRecoil == 30) {
					this.rocketLauncher.shoot(this.get_x(),this.get_y() - this.get_height() * 0.70,this.display.scaleX,0);
					com_soundLib_SoundManager.playFx("rpg",false);
				}
				if(this.rocketRecoil == 45) {
					this.rocketRecoil = 0;
					this.shootingRocket = false;
				}
			}
			if(com_framework_utils_Input.i.isKeyCodePressed(65) && this.timeStopReady == 0 && GlobalGameData.specialEnabled) {
				this.timeStopReady = this.timeStopCooldown;
				GlobalGameData.isTimeStopped = true;
				this.playSpecialAnimation = true;
			}
		}
		this.collision.update(dt);
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,get_x: function() {
		return this.collision.x + this.collision.width * 0.5;
	}
	,get_y: function() {
		return this.collision.y + this.collision.height;
	}
	,get_height: function() {
		return this.collision.height;
	}
	,render: function() {
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		if(this.isNotAlive) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("dies_");
			this.display.timeline.frameRate = 0.1;
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = 0;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
			this.display.timeline.frameRate = 0.1;
		} else if(this.shootingPistol == true) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("gun_");
			this.display.timeline.frameRate = 0.033333333333333333;
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = 0;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
			this.display.timeline.frameRate = 0.066666666666666666;
		} else if(this.shootingRocket == true) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("rpg_");
			this.display.timeline.frameRate = 0.033333333333333333;
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = -20;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 110;
			}
			this.display.timeline.frameRate = 0.066666666666666666;
		} else if(this.isHurt) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("hurt_");
			this.display.timeline.frameRate = 0.033333333333333333;
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = 0;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
			this.display.timeline.frameRate = 0.066666666666666666;
		} else if(this.playSpecialAnimation) {
			this.display.timeline.playAnimation("spec_");
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = 0;
				this.display.offsetY = 4;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
				this.display.offsetY = 4;
			}
		} else if(this.collision.velocityX == 0 && this.collision.velocityY == 0) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("idle_");
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = 0;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
		} else {
			this.display.timeline.playAnimation("run_");
			if(this.direction.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetY = 10;
				this.display.offsetX = -10;
			} else {
				this.display.scaleX = -1;
				this.display.offsetY = 10;
				this.display.offsetX = 94;
			}
		}
		com_framework_utils_Entity.prototype.render.call(this);
	}
	,beginJump: function() {
		var aux = 0;
		if(GlobalGameData.doubleJumpEnabled) {
			aux = 2;
		} else {
			aux = 1;
		}
		if(this.jump < aux) {
			this.collision.velocityY = -750;
			this.jump++;
		}
	}
	,damage: function(dmg) {
		this.isHurt = true;
		this.health -= dmg;
	}
	,removeControl: function() {
		this.controlEnabled = false;
	}
	,__class__: gameObjects_Homura
});
var gameObjects_Kyubey = function(X,Y,layer) {
	com_framework_utils_Entity.call(this);
	this.screenWidth = com_gEngine_GEngine.get_i().width;
	this.screenHeight = com_gEngine_GEngine.get_i().height;
	this.direction = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("coobie");
	this.display.timeline.playAnimation("qb_");
	this.display.timeline.frameRate = 0.066666666666666666;
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 46;
	this.collision.height = 46;
	this.collision.x = X;
	this.collision.y = Y;
	layer.addChild(this.display);
};
$hxClasses["gameObjects.Kyubey"] = gameObjects_Kyubey;
gameObjects_Kyubey.__name__ = "gameObjects.Kyubey";
gameObjects_Kyubey.__super__ = com_framework_utils_Entity;
gameObjects_Kyubey.prototype = $extend(com_framework_utils_Entity.prototype,{
	update: function(dt) {
		this.collision.velocityX = 0;
		this.collision.velocityY = 0;
		this.collision.update(dt);
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,render: function() {
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		com_framework_utils_Entity.prototype.render.call(this);
	}
	,changeDirection: function() {
		this.display.scaleX = -1;
	}
	,__class__: gameObjects_Kyubey
});
var gameObjects_Meguca = function(X,Y,layer,col) {
	this.oldDirection = 0;
	this.changeCounter = 0;
	this.changeDirection = 90;
	gameObjects_Enemy.call(this);
	this.collisionGroup = col;
	this.health = 1;
	this.screenWidth = com_gEngine_GEngine.get_i().width;
	this.screenHeight = com_gEngine_GEngine.get_i().height;
	this.dir = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("meguca");
	this.display.timeline.playAnimation("Meguca_");
	this.display.timeline.frameRate = 0.066666666666666666;
	this.display.scaleX = 0.5;
	this.display.scaleY = 0.5;
	layer.addChild(this.display);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 40;
	this.collision.height = 40;
	this.collision.userData = this;
	this.collision.x = X;
	this.collision.y = Y;
	this.collision.velocityX = 300;
	this.oldDirection = this.collision.velocityX;
	col.add(this.collision);
};
$hxClasses["gameObjects.Meguca"] = gameObjects_Meguca;
gameObjects_Meguca.__name__ = "gameObjects.Meguca";
gameObjects_Meguca.__super__ = gameObjects_Enemy;
gameObjects_Meguca.prototype = $extend(gameObjects_Enemy.prototype,{
	update: function(dt) {
		if(!GlobalGameData.isTimeStopped) {
			this.changeCounter++;
			if(this.changeDirection == this.changeCounter) {
				this.collision.velocityX *= -1;
				this.oldDirection = this.collision.velocityX;
				this.changeCounter = 0;
			}
		}
		this.collision.update(dt);
		gameObjects_Enemy.prototype.update.call(this,dt);
	}
	,render: function() {
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		this.display.timeline.playAnimation("Meguca_");
		if(this.oldDirection == 300) {
			this.display.scaleX = 0.5;
			this.display.offsetX = 0;
		} else {
			this.display.scaleX = -0.5;
			this.display.offsetX = 47;
		}
		gameObjects_Enemy.prototype.render.call(this);
	}
	,stopTimeline: function() {
		if(this.collision.velocityX != 0) {
			this.oldDirection = this.collision.velocityX;
		}
		this.collision.velocityX = 0;
		this.display.timeline.frameRate = 1 / 0;
	}
	,resetTimeline: function() {
		this.collision.velocityX = this.oldDirection;
		if(this.oldDirection == 0) {
			this.oldDirection = 300;
		}
		this.display.timeline.frameRate = 0.1;
	}
	,__class__: gameObjects_Meguca
});
var gameObjects_Pawn = function(X,Y,layer,col) {
	this.wasRunning = false;
	this.currentCharge = 0;
	this.attackCharge = 60;
	this.attackRespite = 0;
	this.isAttacking = false;
	this.isPreparingAttack = false;
	this.canJump = true;
	gameObjects_Enemy.call(this);
	this.collisionGroup = col;
	this.health = 50 + 10 * GlobalGameData.lap;
	this.screenWidth = com_gEngine_GEngine.get_i().width;
	this.screenHeight = com_gEngine_GEngine.get_i().height;
	this.dir = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("pawn");
	this.display.timeline.playAnimation("stand_");
	this.display.timeline.frameRate = 0.090909090909090912;
	layer.addChild(this.display);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 80;
	this.collision.height = 110;
	this.collision.userData = this;
	this.collision.x = X;
	this.collision.y = Y;
	this.collision.accelerationY = 2000;
	this.collision.maxVelocityX = 500;
	this.collision.maxVelocityY = 800;
	this.sword = new gameObjects_Sword();
	this.addChild(this.sword);
	col.add(this.collision);
};
$hxClasses["gameObjects.Pawn"] = gameObjects_Pawn;
gameObjects_Pawn.__name__ = "gameObjects.Pawn";
gameObjects_Pawn.__super__ = gameObjects_Enemy;
gameObjects_Pawn.prototype = $extend(gameObjects_Enemy.prototype,{
	update: function(dt) {
		var target = GlobalGameData.player;
		if(this.health > 0 && !GlobalGameData.isTimeStopped) {
			if(this.isPreparingAttack) {
				this.collision.velocityX = 0;
				this.currentCharge++;
			}
			if(this.currentCharge == this.attackCharge) {
				this.isPreparingAttack = false;
				this.isAttacking = true;
				this.sword.swing(this.collision.x,this.collision.y,this.dir.x,this.dir.y);
				com_soundLib_SoundManager.playFx("swoosh",false);
				this.attackRespite++;
				this.currentCharge = 0;
			}
			if(this.attackRespite > 0 && this.attackRespite < 15) {
				this.attackRespite++;
			}
			if(this.attackRespite == 15) {
				this.attackRespite = 0;
				this.isAttacking = false;
			}
			if(target.get_y() - this.collision.y <= 200 && target.get_y() - this.collision.y >= -200 && (target.get_x() - this.collision.x <= 400 && target.get_x() - this.collision.x >= -400) || this.health < 30) {
				if(!this.isAttacking && !this.isPreparingAttack) {
					this.dir = new kha_math_FastVector2(target.get_x() - (this.collision.x + this.collision.width * 0.5),0);
					var _this = this.dir;
					var _this1 = this.dir;
					var x = _this1.x;
					var y = _this1.y;
					if(y == null) {
						y = 0;
					}
					if(x == null) {
						x = 0;
					}
					var v_x = x;
					var v_y = y;
					var currentLength = Math.sqrt(v_x * v_x + v_y * v_y);
					if(currentLength != 0) {
						var mul = 1 / currentLength;
						v_x *= mul;
						v_y *= mul;
					}
					_this.x = v_x;
					_this.y = v_y;
					var _this2 = this.dir;
					var _this3 = this.dir;
					var x1 = _this3.x * 250;
					var y1 = _this3.y * 250;
					if(y1 == null) {
						y1 = 0;
					}
					if(x1 == null) {
						x1 = 0;
					}
					_this2.x = x1;
					_this2.y = y1;
					this.collision.velocityX = this.dir.x;
					if(target.get_y() < this.collision.y && this.canJump) {
						this.collision.velocityY = -1000;
						this.canJump = false;
					}
					if(!this.isAttacking && this.collision.velocityY > 0 && this.canJump) {
						this.collision.velocityY = -1000;
						this.canJump = false;
					}
					if(!this.isAttacking && this.collision.isTouching(8)) {
						this.canJump = true;
					}
				}
			}
		}
		this.collision.update(dt);
		gameObjects_Enemy.prototype.update.call(this,dt);
	}
	,render: function() {
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		if(this.isAttacking) {
			this.display.timeline.playAnimation("attack_");
			if(this.dir.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = -10;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
		} else if(this.collision.velocityX == 0 && this.collision.velocityY == 0 && !this.wasRunning) {
			this.display.offsetY = 0;
			this.display.timeline.playAnimation("stand_");
			if(this.dir.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = -10;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
		} else {
			this.display.timeline.playAnimation("run_");
			if(this.dir.x >= 0) {
				this.display.scaleX = 1;
				this.display.offsetX = -10;
			} else {
				this.display.scaleX = -1;
				this.display.offsetX = 94;
			}
		}
		gameObjects_Enemy.prototype.render.call(this);
	}
	,damage: function(dmg) {
		this.health -= dmg;
		if(this.health <= 0) {
			this.collision.removeFromParent();
			this.display.removeFromParent();
		}
	}
	,attack: function() {
		if(this.attackRespite == 0 && this.collision.isTouching(8)) {
			this.isPreparingAttack = true;
		}
	}
	,stopTimeline: function() {
		if(this.collision.velocityX != 0) {
			this.wasRunning = true;
		}
		this.collision.accelerationY = 0;
		this.collision.velocityX = 0;
		this.collision.velocityY = 0;
		this.display.timeline.frameRate = 1 / 0;
	}
	,resetTimeline: function() {
		this.wasRunning = false;
		this.collision.accelerationY = 2000;
		this.display.timeline.frameRate = 0.090909090909090912;
	}
	,__class__: gameObjects_Pawn
});
var gameObjects_Projectile = function() {
	this.damage = 10 + 5 * GlobalGameData.lap;
	this.permanentDirY = 0;
	this.permanentDirX = 0;
	this.totalLifeTime = 2;
	this.lifeTime = 0;
	com_framework_utils_Entity.call(this);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 10;
	this.collision.height = 10;
	this.collision.userData = this;
	this.display = new com_gEngine_helper_RectangleDisplay();
	this.display = new com_gEngine_display_Sprite("Proj");
	this.display.scaleX = 0.1;
	this.display.scaleY = 0.1;
	this.display.offsetY = 0;
};
$hxClasses["gameObjects.Projectile"] = gameObjects_Projectile;
gameObjects_Projectile.__name__ = "gameObjects.Projectile";
gameObjects_Projectile.__super__ = com_framework_utils_Entity;
gameObjects_Projectile.prototype = $extend(com_framework_utils_Entity.prototype,{
	limboStart: function() {
		this.display.removeFromParent();
		this.collision.removeFromParent();
	}
	,update: function(dt) {
		if(!GlobalGameData.isTimeStopped) {
			this.lifeTime += dt;
			if(this.lifeTime > this.totalLifeTime) {
				this.die();
			}
			this.collision.update(dt);
			this.display.x = this.collision.x - 5;
			this.display.y = this.collision.y - 5;
		}
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,shoot: function(x,y,dirX,dirY) {
		this.lifeTime = 0;
		this.collision.x = x;
		this.collision.y = y;
		this.collision.velocityX = 500 * dirX;
		this.collision.velocityY = 500 * dirY;
		this.permanentDirX = dirX;
		this.permanentDirY = dirY;
		GlobalGameData.projectiles.add(this.collision);
		GlobalGameData.simulationLayer.addChild(this.display);
		GlobalGameData.projectileList.push(this);
	}
	,stopTimeline: function() {
		this.collision.velocityX = 0;
		this.collision.velocityY = 0;
	}
	,resetTimeline: function() {
		this.collision.velocityX = 500 * this.permanentDirX;
		this.collision.velocityY = 500 * this.permanentDirY;
	}
	,__class__: gameObjects_Projectile
});
var gameObjects_Raganos = function(X,Y,layer,col) {
	this.stage3Threshold = 0;
	this.stage2Threshold = 0;
	this.leftToRightY = true;
	this.leftToRightX = true;
	this.followCounter = 0;
	this.yAngle = 0;
	this.xAngle = -1;
	this.tripleShotTimer = 0;
	this.bossStage = 1;
	this.health = 1500 + 500 * GlobalGameData.lap;
	this.stage2Threshold = 1000 + 250 * GlobalGameData.lap;
	this.stage3Threshold = 500 + 125 * GlobalGameData.lap;
	gameObjects_Enemy.call(this);
	this.collisionGroup = col;
	this.screenWidth = com_gEngine_GEngine.get_i().width;
	this.screenHeight = com_gEngine_GEngine.get_i().height;
	this.direction = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("witch");
	this.display.timeline.playAnimation("witch_");
	this.display.timeline.frameRate = 0.066666666666666666;
	this.display.scaleX = 2;
	this.display.scaleY = 2;
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 244;
	this.collision.height = 220;
	this.collision.x = X;
	this.collision.y = Y;
	this.collision.userData = this;
	this.arm = new gameObjects_Arm();
	this.addChild(this.arm);
	col.add(this.collision);
	this.originX = X + this.collision.width / 2;
	this.originY = Y + this.collision.height / 2;
	layer.addChild(this.display);
};
$hxClasses["gameObjects.Raganos"] = gameObjects_Raganos;
gameObjects_Raganos.__name__ = "gameObjects.Raganos";
gameObjects_Raganos.__super__ = gameObjects_Enemy;
gameObjects_Raganos.prototype = $extend(gameObjects_Enemy.prototype,{
	update: function(dt) {
		if(this.health > 0 && !GlobalGameData.isTimeStopped) {
			this.tripleShotTimer++;
			this.checkStage();
			if(this.bossStage == 1) {
				this.stageOneBehavior();
			}
			if(this.bossStage == 2) {
				this.stageTwoBehavior();
			}
			if(this.bossStage == 3) {
				this.stageThreeBehavior();
			}
		}
		this.collision.velocityX = 0;
		this.collision.velocityY = 0;
		this.collision.update(dt);
		gameObjects_Enemy.prototype.update.call(this,dt);
	}
	,render: function() {
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		gameObjects_Enemy.prototype.render.call(this);
	}
	,damage: function(dmg) {
		this.health -= dmg;
		if(this.health <= 0) {
			this.collision.removeFromParent();
			this.display.removeFromParent();
		}
	}
	,checkStage: function() {
		if(this.health <= this.stage2Threshold && this.health > this.stage3Threshold) {
			this.bossStage = 2;
		}
		if(this.health <= this.stage3Threshold) {
			this.bossStage = 3;
		}
		if(this.health >= this.stage2Threshold - 20 && this.health <= this.stage2Threshold + 20 || this.health >= this.stage3Threshold - 20 && this.health <= this.stage3Threshold + 20) {
			com_soundLib_SoundManager.playFx("laugh2");
		}
	}
	,stageOneBehavior: function() {
		if(this.tripleShotTimer % 180 == 0) {
			this.tripleShotHorizontal(1);
			this.tripleShotHorizontal(-1);
			this.tripleShotVertical(1);
			this.tripleShotVertical(-1);
		}
	}
	,stageTwoBehavior: function() {
		this.followShot();
	}
	,stageThreeBehavior: function() {
		this.stageOneBehavior();
		this.stageTwoBehavior();
	}
	,tripleShotHorizontal: function(dirX) {
		this.arm.shoot(this.originX,this.originY,dirX,0);
		this.arm.shoot(this.originX,this.originY,dirX,0.5);
		this.arm.shoot(this.originX,this.originY,dirX,-0.5);
	}
	,tripleShotVertical: function(dirY) {
		this.arm.shoot(this.originX,this.originY,0,dirY);
		this.arm.shoot(this.originX,this.originY,0.5,dirY);
		this.arm.shoot(this.originX,this.originY,-0.5,dirY);
	}
	,followShot: function() {
		this.followCounter++;
		if(this.followCounter % 7 == 0) {
			this.arm.shoot(this.originX,this.originY,this.xAngle,this.yAngle);
			if(this.xAngle >= 1) {
				this.leftToRightX = false;
			}
			if(this.xAngle <= -1) {
				this.leftToRightX = true;
			}
			if(this.yAngle >= 1) {
				this.leftToRightY = true;
			}
			if(this.yAngle <= -1) {
				this.leftToRightY = false;
			}
			if(this.leftToRightX) {
				this.xAngle += 0.05;
			} else {
				this.xAngle -= 0.05;
			}
			if(this.leftToRightY) {
				this.yAngle -= 0.05;
			} else {
				this.yAngle += 0.05;
			}
		}
	}
	,stopTimeline: function() {
		this.collision.velocityX = 0;
		this.collision.velocityY = 0;
		this.display.timeline.frameRate = 1 / 0;
	}
	,resetTimeline: function() {
		this.display.timeline.frameRate = 0.066666666666666666;
	}
	,__class__: gameObjects_Raganos
});
var gameObjects_Rocket = function() {
	this.framesExisting = 0;
	this.frameCheck = 4;
	this.permanentDir = 0;
	this.damage = 50;
	this.totalLifeTime = 1;
	this.lifeTime = 0;
	com_framework_utils_Entity.call(this);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 60;
	this.collision.height = 10;
	this.collision.userData = this;
	this.direction = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_display_Sprite("rocket");
	this.display.scaleX = 0.7;
	this.display.scaleY = 0.7;
	this.display.offsetX = 10;
	this.display.offsetY = -10;
};
$hxClasses["gameObjects.Rocket"] = gameObjects_Rocket;
gameObjects_Rocket.__name__ = "gameObjects.Rocket";
gameObjects_Rocket.__super__ = com_framework_utils_Entity;
gameObjects_Rocket.prototype = $extend(com_framework_utils_Entity.prototype,{
	limboStart: function() {
		this.display.removeFromParent();
		this.collision.removeFromParent();
	}
	,update: function(dt) {
		this.framesExisting++;
		if(!GlobalGameData.isTimeStopped || this.framesExisting <= this.frameCheck) {
			this.lifeTime += dt;
			if(this.lifeTime >= this.totalLifeTime) {
				this.die();
			}
			if(this.direction.x < 0) {
				this.display.scaleX = -0.7;
				this.display.offsetX = 50;
			} else {
				this.display.scaleX = 0.7;
				this.display.offsetX = 10;
			}
		}
		this.collision.update(dt);
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,shoot: function(x,y,dirX,dirY) {
		this.lifeTime = 0;
		this.collision.x = dirX == 1 ? x : x - 60;
		this.collision.y = y;
		this.collision.velocityX = 1000 * dirX;
		this.permanentDir = dirX;
		this.collision.velocityY = 0;
		var _this = this.direction;
		var x1 = this.collision.velocityX;
		var y1 = this.collision.velocityY;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		_this.x = x1;
		_this.y = y1;
		var _this1 = this.direction;
		var _this2 = this.direction;
		var x2 = _this2.x;
		var y2 = _this2.y;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var v_x = x2;
		var v_y = y2;
		var currentLength = Math.sqrt(v_x * v_x + v_y * v_y);
		if(currentLength != 0) {
			var mul = 1 / currentLength;
			v_x *= mul;
			v_y *= mul;
		}
		_this1.x = v_x;
		_this1.y = v_y;
		GlobalGameData.simulationLayer.addChild(this.display);
		GlobalGameData.rockets.add(this.collision);
		GlobalGameData.rocketList.push(this);
	}
	,stopTimeline: function() {
		if(this.framesExisting > this.frameCheck) {
			this.collision.velocityX = 0;
			this.collision.velocityY = 0;
		}
	}
	,resetTimeline: function() {
		this.collision.velocityX = 1000 * this.permanentDir;
	}
	,__class__: gameObjects_Rocket
});
var gameObjects_RocketLauncher = function() {
	com_framework_utils_Entity.call(this);
	this.pool = true;
};
$hxClasses["gameObjects.RocketLauncher"] = gameObjects_RocketLauncher;
gameObjects_RocketLauncher.__name__ = "gameObjects.RocketLauncher";
gameObjects_RocketLauncher.__super__ = com_framework_utils_Entity;
gameObjects_RocketLauncher.prototype = $extend(com_framework_utils_Entity.prototype,{
	shoot: function(aX,aY,dirX,dirY) {
		this.recycle(gameObjects_Rocket).shoot(aX,aY,dirX,kha_math_Random.getFloatIn(-0.05,0.05));
	}
	,__class__: gameObjects_RocketLauncher
});
var gameObjects_Swing = function() {
	this.damage = 30 + 5 * GlobalGameData.lap;
	this.totalLifeTime = 1;
	this.lifeTime = 0;
	com_framework_utils_Entity.call(this);
	this.collision = new com_collision_platformer_CollisionBox();
	this.collision.width = 40;
	this.collision.height = 90;
	this.collision.userData = this;
	this.direction = new kha_math_FastVector2(1,0);
	this.display = new com_gEngine_helper_RectangleDisplay();
	this.display = new com_gEngine_display_Sprite("Swing");
	this.display.scaleX = 1;
	this.display.scaleY = 1;
	this.display.offsetY = 0;
};
$hxClasses["gameObjects.Swing"] = gameObjects_Swing;
gameObjects_Swing.__name__ = "gameObjects.Swing";
gameObjects_Swing.__super__ = com_framework_utils_Entity;
gameObjects_Swing.prototype = $extend(com_framework_utils_Entity.prototype,{
	limboStart: function() {
		this.display.removeFromParent();
		this.collision.removeFromParent();
	}
	,update: function(dt) {
		this.lifeTime += dt;
		if(this.lifeTime >= this.totalLifeTime) {
			this.die();
		}
		this.collision.update(dt);
		this.display.x = this.collision.x;
		this.display.y = this.collision.y;
		if(this.direction.x < 0) {
			this.display.scaleX = -1;
			this.display.offsetX = 100;
		} else {
			this.display.scaleX = 1;
			this.display.offsetX = -70;
		}
		com_framework_utils_Entity.prototype.update.call(this,dt);
	}
	,swing: function(x,y,dirX,dirY,swordCollision) {
		this.lifeTime = 0;
		if(dirX >= 0) {
			this.collision.x = x + 80;
		} else {
			this.collision.x = x - 40;
		}
		this.collision.y = y;
		this.collision.velocityX = 0.1 * dirX;
		this.collision.velocityY = 0;
		var _this = this.direction;
		var x1 = this.collision.velocityX;
		var y1 = this.collision.velocityY;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		_this.x = x1;
		_this.y = y1;
		var _this1 = this.direction;
		var _this2 = this.direction;
		var x2 = _this2.x;
		var y2 = _this2.y;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var v_x = x2;
		var v_y = y2;
		var currentLength = Math.sqrt(v_x * v_x + v_y * v_y);
		if(currentLength != 0) {
			var mul = 1 / currentLength;
			v_x *= mul;
			v_y *= mul;
		}
		_this1.x = v_x;
		_this1.y = v_y;
		swordCollision.add(this.collision);
		GlobalGameData.simulationLayer.addChild(this.display);
	}
	,__class__: gameObjects_Swing
});
var gameObjects_Sword = function() {
	com_framework_utils_Entity.call(this);
	this.pool = true;
	this.swordCollisions = new com_collision_platformer_CollisionGroup();
};
$hxClasses["gameObjects.Sword"] = gameObjects_Sword;
gameObjects_Sword.__name__ = "gameObjects.Sword";
gameObjects_Sword.__super__ = com_framework_utils_Entity;
gameObjects_Sword.prototype = $extend(com_framework_utils_Entity.prototype,{
	swing: function(aX,aY,dirX,dirY) {
		this.recycle(gameObjects_Swing).swing(aX,aY,dirX,dirY,this.swordCollisions);
	}
	,__class__: gameObjects_Sword
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s] != null) {
					h1.setReserved(s,value);
				} else {
					h1.h[s] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer((len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0)));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf.charCodeAt(i1++)];
				var c2 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = c11 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c12 = codes[buf.charCodeAt(i1++)];
				var c21 = codes[buf.charCodeAt(i1++)];
				bytes.b[bpos++] = c12 << 2 | c21 >> 4;
				if(rest == 3) {
					var c31 = codes[buf.charCodeAt(i1++)];
					bytes.b[bpos++] = c21 << 4 | c31 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s1 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s1 = decodeURIComponent(s1.split("+").join(" "));
			this.scache.push(s1);
			return s1;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	a.a1 = i.readByte() << 8 | i.readByte();
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			a1 = (a1 + b.b[_g++]) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var code1 = (c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		this.u8.set(new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len),this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if(!((((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof) instanceof haxe_io_Eof)) {
				throw eof;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				total.addBytes(buf,0,len);
			}
		} catch( e ) {
			if(!((((e) instanceof js__$Boot_HaxeError) ? e.val : e) instanceof haxe_io_Eof)) {
				throw e;
			}
		}
		return total.getBytes();
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = "haxe.io.StringInput";
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = "haxe.io._UInt8Array.UInt8Array_Impl_";
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_xml__$Access_NodeAccess_$Impl_$ = {};
$hxClasses["haxe.xml._Access.NodeAccess_Impl_"] = haxe_xml__$Access_NodeAccess_$Impl_$;
haxe_xml__$Access_NodeAccess_$Impl_$.__name__ = "haxe.xml._Access.NodeAccess_Impl_";
haxe_xml__$Access_NodeAccess_$Impl_$.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
			}
			xname = this1.nodeName;
		}
		throw new js__$Boot_HaxeError(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Invalid nodeType " + _$Xml_XmlType_$Impl_$.toString(x.nodeType));
	}
	return x;
};
var haxe_xml__$Access_AttribAccess_$Impl_$ = {};
$hxClasses["haxe.xml._Access.AttribAccess_Impl_"] = haxe_xml__$Access_AttribAccess_$Impl_$;
haxe_xml__$Access_AttribAccess_$Impl_$.__name__ = "haxe.xml._Access.AttribAccess_Impl_";
haxe_xml__$Access_AttribAccess_$Impl_$.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
		}
		throw new js__$Boot_HaxeError(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasAttribAccess_$Impl_$ = {};
$hxClasses["haxe.xml._Access.HasAttribAccess_Impl_"] = haxe_xml__$Access_HasAttribAccess_$Impl_$;
haxe_xml__$Access_HasAttribAccess_$Impl_$.__name__ = "haxe.xml._Access.HasAttribAccess_Impl_";
haxe_xml__$Access_HasAttribAccess_$Impl_$.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw new js__$Boot_HaxeError("Cannot access document attribute " + name);
	}
	return this1.exists(name);
};
var haxe_xml__$Access_HasNodeAccess_$Impl_$ = {};
$hxClasses["haxe.xml._Access.HasNodeAccess_Impl_"] = haxe_xml__$Access_HasNodeAccess_$Impl_$;
haxe_xml__$Access_HasNodeAccess_$Impl_$.__name__ = "haxe.xml._Access.HasNodeAccess_Impl_";
haxe_xml__$Access_HasNodeAccess_$Impl_$.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml__$Access_NodeListAccess_$Impl_$ = {};
$hxClasses["haxe.xml._Access.NodeListAccess_Impl_"] = haxe_xml__$Access_NodeListAccess_$Impl_$;
haxe_xml__$Access_NodeListAccess_$Impl_$.__name__ = "haxe.xml._Access.NodeListAccess_Impl_";
haxe_xml__$Access_NodeListAccess_$Impl_$.resolve = function(this1,name) {
	var l = [];
	var x = this1.elementsNamed(name);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Invalid nodeType " + _$Xml_XmlType_$Impl_$.toString(x1.nodeType));
		}
		l.push(x1);
	}
	return l;
};
var haxe_xml__$Access_Access_$Impl_$ = {};
$hxClasses["haxe.xml._Access.Access_Impl_"] = haxe_xml__$Access_Access_$Impl_$;
haxe_xml__$Access_Access_$Impl_$.__name__ = "haxe.xml._Access.Access_Impl_";
haxe_xml__$Access_Access_$Impl_$.get_innerData = function(this1) {
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
	}
	var it = HxOverrides.iter(this1.children);
	if(!it.hasNext()) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
			}
			tmp = this1.nodeName;
		}
		throw new js__$Boot_HaxeError(tmp + " does not have data");
	}
	var v = it.next();
	if(it.hasNext()) {
		var n = it.next();
		var tmp1;
		if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData) {
			if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(v.nodeType));
			}
			tmp1 = StringTools.trim(v.nodeValue) == "";
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(!it.hasNext()) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(n.nodeType));
				}
				return n.nodeValue;
			}
			var n2 = it.next();
			var tmp2;
			if(n2.nodeType == Xml.PCData) {
				if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(n2.nodeType));
				}
				tmp2 = StringTools.trim(n2.nodeValue) == "";
			} else {
				tmp2 = false;
			}
			if(tmp2 && !it.hasNext()) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(n.nodeType));
				}
				return n.nodeValue;
			}
		}
		var tmp3;
		if(this1.nodeType == Xml.Document) {
			tmp3 = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
			}
			tmp3 = this1.nodeName;
		}
		throw new js__$Boot_HaxeError(tmp3 + " does not only have data");
	}
	if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) {
		var tmp4;
		if(this1.nodeType == Xml.Document) {
			tmp4 = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this1.nodeType));
			}
			tmp4 = this1.nodeName;
		}
		throw new js__$Boot_HaxeError(tmp4 + " does not have data");
	}
	if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(v.nodeType));
	}
	return v.nodeValue;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	while(_g < position) {
		var c = xml.charCodeAt(_g++);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				aname = HxOverrides.substr(str,start,p - start);
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.addChild(Xml.createProcessingInstruction(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createCData(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						buf.b += Std.string(__map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s]);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
			}
			throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
				}
				var child = HxOverrides.iter(value.children);
				while(child.hasNext()) this.writeNode(child.next(),this.pretty ? tabs + "\t" : tabs);
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input1 = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input1);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			this.output.b += Std.string(StringTools.trim(commentContent));
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var child1 = HxOverrides.iter(value.children);
			while(child1.hasNext()) this.writeNode(child1.next(),tabs);
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
		}
		var child = HxOverrides.iter(value.children);
		while(child.hasNext()) {
			var child1 = child.next();
			switch(child1.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child1.nodeType == Xml.Document || child1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(child1.nodeType));
				}
				if(StringTools.ltrim(child1.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var haxe_zip_Huffman = $hxEnums["haxe.zip.Huffman"] = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"]
	,Found: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["i"],$_)
	,NeedBit: ($_=function(left,right) { return {_hx_index:1,left:left,right:right,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["left","right"],$_)
	,NeedBits: ($_=function(n,table) { return {_hx_index:2,n:n,table:table,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["n","table"],$_)
};
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = "haxe.zip.HuffTools";
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t._hx_index) {
		case 0:
			return 0;
		case 1:
			var da = this.treeDepth(t.left);
			var db = this.treeDepth(t.right);
			return 1 + (da < db ? da : db);
		case 2:
			throw new js__$Boot_HaxeError("assert");
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t._hx_index == 1) {
				return haxe_zip_Huffman.NeedBit(this.treeCompress(t.left),this.treeCompress(t.right));
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g = 0;
		while(_g < size) {
			++_g;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t._hx_index == 1) {
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,t.left);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,t.right);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		if(nlengths == 1) {
			return haxe_zip_Huffman.NeedBit(haxe_zip_Huffman.Found(0),haxe_zip_Huffman.Found(0));
		}
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var _g = 0;
		while(_g < maxbits) {
			++_g;
			counts.push(0);
			tmp.push(0);
		}
		var _g2 = 0;
		while(_g2 < nlengths) {
			var p = lengths[_g2++ + pos];
			if(p >= maxbits) {
				throw new js__$Boot_HaxeError("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g4 = 1;
		var _g5 = maxbits - 1;
		while(_g4 < _g5) {
			var i = _g4++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g6 = 0;
		while(_g6 < nlengths) {
			var i1 = _g6++;
			var l = lengths[i1 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i1;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = "haxe.zip._InflateImpl.Window";
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxEnums["haxe.zip._InflateImpl.State"] = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"]
	,Head: {_hx_index:0,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Block: {_hx_index:1,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,CData: {_hx_index:2,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Flat: {_hx_index:3,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Crc: {_hx_index:4,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Dist: {_hx_index:5,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,DistOne: {_hx_index:6,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Done: {_hx_index:7,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
};
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this.isFinal = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = "haxe.zip.InflateImpl";
haxe_zip_InflateImpl.run = function(i,bufsize) {
	if(bufsize == null) {
		bufsize = 65536;
	}
	var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
	var output = new haxe_io_BytesBuffer();
	var inflate = new haxe_zip_InflateImpl(i);
	while(true) {
		var len = inflate.readBytes(buf,0,bufsize);
		output.addBytes(buf,0,len);
		if(len < bufsize) {
			break;
		}
	}
	return output.getBytes();
};
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g = 0;
		while(_g < n) {
			++_g;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h._hx_index) {
		case 0:
			return h.i;
		case 1:
			return this.applyHuffman(this.getBit() ? h.right : h.left);
		case 2:
			return this.applyHuffman(h.table[this.getBits(h.n)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state._hx_index) {
		case 0:
			var cmf = this.input.readByte();
			if((cmf & 15) != 8) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			var flg = this.input.readByte();
			if(((cmf << 8) + flg) % 31 != 0) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			if((flg & 32) != 0) {
				throw new js__$Boot_HaxeError("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this.isFinal = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				if(this.input.readUInt16() != 65535 - this.len) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g = 0;
				while(_g < hclen) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g++]] = this.getBits(3);
				var _g2 = hclen;
				while(_g2 < 19) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g2++]] = 0;
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g4 = 0;
				var _g5 = hlit + hdist;
				while(_g4 < _g5) {
					++_g4;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			if(!calc.equals(haxe_crypto_Adler32.read(this.input))) {
				throw new js__$Boot_HaxeError("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen1 = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen1);
				this.len -= rlen1;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen2 = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen2);
			this.len -= rlen2;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = intf[_g++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var kha__$Assets_ImageList = function() {
	this.witchDescription = { name : "witch", original_height : 112, file_sizes : [13791], original_width : 992, files : ["witch.png"], type : "image"};
	this.witch = null;
	this.rocketDescription = { name : "rocket", original_height : 42, file_sizes : [648], original_width : 64, files : ["rocket.png"], type : "image"};
	this.rocket = null;
	this.pawnDescription = { name : "pawn", original_height : 908, file_sizes : [63900], original_width : 487, files : ["pawn.png"], type : "image"};
	this.pawn = null;
	this.megucaDescription = { name : "meguca", original_height : 1440, file_sizes : [20050], original_width : 59, files : ["meguca.png"], type : "image"};
	this.meguca = null;
	this.level1bDescription = { name : "level1b", original_height : 480, file_sizes : [17721], original_width : 288, files : ["level1b.png"], type : "image"};
	this.level1b = null;
	this.homurarpgDescription = { name : "homurarpg", original_height : 1217, file_sizes : [406237], original_width : 977, files : ["homurarpg.png"], type : "image"};
	this.homurarpg = null;
	this.gun_hitDescription = { name : "gun_hit", original_height : 128, file_sizes : [8842], original_width : 128, files : ["gun_hit.png"], type : "image"};
	this.gun_hit = null;
	this.gameOverDescription = { name : "gameOver", original_height : 244, file_sizes : [14916], original_width : 231, files : ["gameOver.png"], type : "image"};
	this.gameOver = null;
	this.coobieDescription = { name : "coobie", original_height : 48, file_sizes : [3678], original_width : 880, files : ["coobie.png"], type : "image"};
	this.coobie = null;
	this.bulletDescription = { name : "bullet", original_height : 128, file_sizes : [792], original_width : 128, files : ["bullet.png"], type : "image"};
	this.bullet = null;
	this.blowingDescription = { name : "blowing", original_height : 128, file_sizes : [4117], original_width : 128, files : ["blowing.png"], type : "image"};
	this.blowing = null;
	this.SwingDescription = { name : "Swing", original_height : 128, file_sizes : [8049], original_width : 128, files : ["Swing.png"], type : "image"};
	this.Swing = null;
	this.SpecialIconDescription = { name : "SpecialIcon", original_height : 39, file_sizes : [2124], original_width : 53, files : ["SpecialIcon.png"], type : "image"};
	this.SpecialIcon = null;
	this.SoulgemDescription = { name : "Soulgem", original_height : 20, file_sizes : [696], original_width : 15, files : ["Soulgem.png"], type : "image"};
	this.Soulgem = null;
	this.SecondAreaDBgDescription = { name : "SecondAreaDBg", original_height : 1334, file_sizes : [1435707], original_width : 3839, files : ["SecondAreaDBg.png"], type : "image"};
	this.SecondAreaDBg = null;
	this.SecondAreaDDescription = { name : "SecondAreaD", original_height : 816, file_sizes : [106447], original_width : 2704, files : ["SecondAreaD.png"], type : "image"};
	this.SecondAreaD = null;
	this.RocketIconDescription = { name : "RocketIcon", original_height : 39, file_sizes : [2188], original_width : 53, files : ["RocketIcon.png"], type : "image"};
	this.RocketIcon = null;
	this.ProjDescription = { name : "Proj", original_height : 185, file_sizes : [2119], original_width : 181, files : ["Proj.png"], type : "image"};
	this.Proj = null;
	this.PistolIconDescription = { name : "PistolIcon", original_height : 39, file_sizes : [1992], original_width : 53, files : ["PistolIcon.png"], type : "image"};
	this.PistolIcon = null;
	this.IntroDescription = { name : "Intro", original_height : 720, file_sizes : [1420030], original_width : 1280, files : ["Intro.png"], type : "image"};
	this.Intro = null;
	this.FirstAreaDBgDescription = { name : "FirstAreaDBg", original_height : 898, file_sizes : [1767246], original_width : 1678, files : ["FirstAreaDBg.png"], type : "image"};
	this.FirstAreaDBg = null;
	this.FirstAreaDDescription = { name : "FirstAreaD", original_height : 562, file_sizes : [164186], original_width : 654, files : ["FirstAreaD.png"], type : "image"};
	this.FirstAreaD = null;
	this.EndingDescription = { name : "Ending", original_height : 907, file_sizes : [2516819], original_width : 1284, files : ["Ending.png"], type : "image"};
	this.Ending = null;
	this.BossAreaBgDescription = { name : "BossAreaBg", original_height : 800, file_sizes : [1517189], original_width : 1280, files : ["BossAreaBg.png"], type : "image"};
	this.BossAreaBg = null;
	this.BossAreaDescription = { name : "BossArea", original_height : 768, file_sizes : [41422], original_width : 1536, files : ["BossArea.png"], type : "image"};
	this.BossArea = null;
	this.BonusAreaBgDescription = { name : "BonusAreaBg", original_height : 939, file_sizes : [2424317], original_width : 1505, files : ["BonusAreaBg.png"], type : "image"};
	this.BonusAreaBg = null;
	this.BonusAreaDescription = { name : "BonusArea", original_height : 272, file_sizes : [20623], original_width : 800, files : ["BonusArea.png"], type : "image"};
	this.BonusArea = null;
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = "kha._Assets.ImageList";
kha__$Assets_ImageList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
	this.swooshDescription = { name : "swoosh", file_sizes : [7072,33017], files : ["swoosh.ogg","swoosh.mp3"], type : "sound"};
	this.swoosh = null;
	this.rpgDescription = { name : "rpg", file_sizes : [12076,33017], files : ["rpg.ogg","rpg.mp3"], type : "sound"};
	this.rpg = null;
	this.laugh2Description = { name : "laugh2", file_sizes : [88982,144612], files : ["laugh2.ogg","laugh2.mp3"], type : "sound"};
	this.laugh2 = null;
	this.gunshot2Description = { name : "gunshot2", file_sizes : [25606,29256], files : ["gunshot2.ogg","gunshot2.mp3"], type : "sound"};
	this.gunshot2 = null;
	this.SecondAreaDMDescription = { name : "SecondAreaDM", file_sizes : [2379776,2666160], files : ["SecondAreaDM.ogg","SecondAreaDM.mp3"], type : "sound"};
	this.SecondAreaDM = null;
	this.KyubeyThemeDescription = { name : "KyubeyTheme", file_sizes : [2382169,2881827], files : ["KyubeyTheme.ogg","KyubeyTheme.mp3"], type : "sound"};
	this.KyubeyTheme = null;
	this.InevitabilisDescription = { name : "Inevitabilis", file_sizes : [1322508,1834003], files : ["Inevitabilis.ogg","Inevitabilis.mp3"], type : "sound"};
	this.Inevitabilis = null;
	this.FirstAreaDMDescription = { name : "FirstAreaDM", file_sizes : [1886716,2157504], files : ["FirstAreaDM.ogg","FirstAreaDM.mp3"], type : "sound"};
	this.FirstAreaDM = null;
	this.BossAreaMDescription = { name : "BossAreaM", file_sizes : [1727010,2038386], files : ["BossAreaM.ogg","BossAreaM.mp3"], type : "sound"};
	this.BossAreaM = null;
	this.BonusAreaMDescription = { name : "BonusAreaM", file_sizes : [1566142,1869112], files : ["BonusAreaM.ogg","BonusAreaM.mp3"], type : "sound"};
	this.BonusAreaM = null;
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = "kha._Assets.SoundList";
kha__$Assets_SoundList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
	this.witch_xmlDescription = { name : "witch_xml", file_sizes : [1709], files : ["witch.xml"], type : "blob"};
	this.witch_xml = null;
	this.pawn_xmlDescription = { name : "pawn_xml", file_sizes : [3103], files : ["pawn.xml"], type : "blob"};
	this.pawn_xml = null;
	this.meguca_xmlDescription = { name : "meguca_xml", file_sizes : [2279], files : ["meguca.xml"], type : "blob"};
	this.meguca_xml = null;
	this.homurarpg_xmlDescription = { name : "homurarpg_xml", file_sizes : [8662], files : ["homurarpg.xml"], type : "blob"};
	this.homurarpg_xml = null;
	this.coobie_xmlDescription = { name : "coobie_xml", file_sizes : [1870], files : ["coobie.xml"], type : "blob"};
	this.coobie_xml = null;
	this.SecondAreaD_tmxDescription = { name : "SecondAreaD_tmx", file_sizes : [42830], files : ["SecondAreaD.tmx"], type : "blob"};
	this.SecondAreaD_tmx = null;
	this.FirstAreaD_tmxDescription = { name : "FirstAreaD_tmx", file_sizes : [22343], files : ["FirstAreaD.tmx"], type : "blob"};
	this.FirstAreaD_tmx = null;
	this.BossArea_tmxDescription = { name : "BossArea_tmx", file_sizes : [11331], files : ["BossArea.tmx"], type : "blob"};
	this.BossArea_tmx = null;
	this.BonusArea_tmxDescription = { name : "BonusArea_tmx", file_sizes : [7081], files : ["BonusArea.tmx"], type : "blob"};
	this.BonusArea_tmx = null;
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = "kha._Assets.BlobList";
kha__$Assets_BlobList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.mainfontDescription = { name : "mainfont", file_sizes : [91504], files : ["mainfont.ttf"], type : "font"};
	this.mainfont = null;
	this.Kenney_ThickDescription = { name : "Kenney_Thick", file_sizes : [9448], files : ["Kenney Thick.ttf"], type : "font"};
	this.Kenney_ThickName = "Kenney_Thick";
	this.Kenney_Thick = null;
	this.Kenney_PixelDescription = { name : "Kenney_Pixel", file_sizes : [28276], files : ["Kenney Pixel.ttf"], type : "font"};
	this.Kenney_Pixel = null;
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = "kha._Assets.FontList";
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,__class__: kha__$Assets_FontList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = "kha.Assets";
kha_Assets.loadImage = function(name,done,failed,pos) {
	kha_LoaderImpl.loadImageFromDescription(Reflect.field(kha_Assets.images,name + "Description"),function(image) {
		kha_Assets.images[name] = image;
		done(image);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadBlob = function(name,done,failed,pos) {
	kha_LoaderImpl.loadBlobFromDescription(Reflect.field(kha_Assets.blobs,name + "Description"),function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadSound = function(name,done,failed,pos) {
	kha_LoaderImpl.loadSoundFromDescription(Reflect.field(kha_Assets.sounds,name + "Description"),function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	},kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	kha_LoaderImpl.loadFontFromDescription(Reflect.field(kha_Assets.fonts,name + "Description"),function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},kha_Assets.reporter(failed,pos));
	return;
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			f(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = "kha.Canvas";
kha_Canvas.__isInterface__ = true;
kha_Canvas.prototype = {
	__class__: kha_Canvas
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = "kha.Resource";
kha_Resource.__isInterface__ = true;
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = "kha.Image";
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,0,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,0,false,0,1);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	var img1 = new kha_CanvasImage(width,height,format,false);
	img1.get_g2().canvas.putImageData(new ImageData(new Uint8ClampedArray(bytes.b.bufferValue),width,height),0,0);
	return img1;
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.renderTargetsInvertedY = function() {
	return true;
};
kha_Image.prototype = {
	unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_realWidth: function() {
		return 0;
	}
	,get_realHeight: function() {
		return 0;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = "kha.CanvasImage";
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == 0 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g = 0;
				var _g1 = this.get_height();
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g11 = this.get_width();
					while(_g2 < _g11) {
						var x = _g2++;
						var value = this.bytes.b[y * this.get_width() + x];
						rgbaBytes.b[y * this.get_width() * 4 + x * 4] = value;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 1] = value;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 2] = value;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 3] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = "kha._Color.Color_Impl_";
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$._new = function(value) {
	return value;
};
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = "kha.Display";
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.prototype = {
	get_frequency: function() {
		return 60;
	}
	,__class__: kha_Display
};
var kha_DisplayMode = function() { };
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = "kha.DisplayMode";
var kha_Framebuffer = function($window,g1,g2,g4) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = "kha.Framebuffer";
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = "kha.FramebufferOptions";
kha_FramebufferOptions.prototype = {
	__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = "kha.AlignedQuad";
kha_AlignedQuad.prototype = {
	__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) chars[_g++].yoff += this.baseline;
	this.texture = kha_Image.create(width,height,1);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		var _g11 = 0;
		while(_g11 < width) {
			++_g11;
			bytes.b[pos] = pixels.readU8(pos);
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = "kha.KravurImage";
kha_KravurImage.prototype = {
	getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = "kha.Kravur";
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.prototype = {
	_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g = 1;
			var _g1 = glyphs.length;
			while(_g < _g1) {
				var i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var baked = new Array(glyphs.length);
			var _g2 = 0;
			var _g11 = baked.length;
			while(_g2 < _g11) baked[_g2++] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			var pixels = null;
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var image = new kha_KravurImage(fontSize | 0,Math.round(metrics.ascent * scale),Math.round(metrics.descent * scale),Math.round(metrics.lineGap * scale),width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = "kha.LoaderImpl";
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,2,readable ? 1 : 0);
			done(tmp);
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event1) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.crossOrigin = "";
		img.src = desc.files[0];
	}
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g2 = 0;
			var _g11 = desc.files.length;
			while(_g2 < _g11) {
				var file1 = desc.files[_g2++];
				if(StringTools.endsWith(file1,".mp3")) {
					new kha_js_WebAudioSound(file1,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g3 = 0;
			var _g12 = desc.files.length;
			while(_g3 < _g12) {
				var file2 = desc.files[_g3++];
				if(StringTools.endsWith(file2,".wav")) {
					new kha_js_WebAudioSound(file2,done,failed);
					return;
				}
			}
		}
		var _g4 = 0;
		var _g13 = desc.files.length;
		while(_g4 < _g13) {
			var file3 = desc.files[_g4++];
			if(StringTools.endsWith(file3,".ogg")) {
				new kha_js_WebAudioSound(file3,done,failed);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g5 = 0;
			var _g14 = desc.files.length;
			while(_g5 < _g14) {
				var file4 = desc.files[_g5++];
				if(StringTools.endsWith(file4,".mp4")) {
					new kha_js_MobileWebAudioSound(file4,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/mp3") != "") {
			var _g6 = 0;
			var _g15 = desc.files.length;
			while(_g6 < _g15) {
				var file5 = desc.files[_g6++];
				if(StringTools.endsWith(file5,".mp3")) {
					new kha_js_MobileWebAudioSound(file5,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/wav") != "") {
			var _g7 = 0;
			var _g16 = desc.files.length;
			while(_g7 < _g16) {
				var file6 = desc.files[_g7++];
				if(StringTools.endsWith(file6,".wav")) {
					new kha_js_MobileWebAudioSound(file6,done,failed);
					return;
				}
			}
		}
		var _g8 = 0;
		var _g17 = desc.files.length;
		while(_g8 < _g17) {
			var file7 = desc.files[_g8++];
			if(StringTools.endsWith(file7,".ogg")) {
				new kha_js_MobileWebAudioSound(file7,done,failed);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = "kha.TimeTask";
kha_TimeTask.prototype = {
	__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = "kha.FrameTask";
kha_FrameTask.prototype = {
	__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = "kha.Scheduler";
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) kha_Scheduler.deltas[_g++] = 0;
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) kha_Scheduler.deltas[_g++] = 0;
	if(restartTimers) {
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasks;
		while(_g2 < _g3.length) _g3[_g2++].paused = false;
		var _g4 = 0;
		var _g5 = kha_Scheduler.frameTasks;
		while(_g4 < _g5.length) _g5[_g4++].paused = false;
	}
};
kha_Scheduler.executeFrame = function() {
	var delta = kha_Scheduler.realTime() - kha_Scheduler.startTime - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta >= 0) {
		if(kha_netsync_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var realdif = kha_Scheduler.onedifhz;
				while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g2 = 0;
				var _g11 = kha_Scheduler.DIF_COUNT - 1;
				while(_g2 < _g11) {
					var i1 = _g2++;
					kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g21 = 0;
				var _g3 = kha_Scheduler.DIF_COUNT;
				while(_g21 < _g3) next += kha_Scheduler.deltas[_g21++];
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = frameEnd;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.current = frameEnd;
		}
		var _g4 = 0;
		var _g12 = kha_Scheduler.pausedTimeTasks;
		while(_g4 < _g12.length) _g12[_g4++].next += delta;
		if(kha_Scheduler.stopped) {
			var _g22 = 0;
			var _g31 = kha_Scheduler.timeTasks;
			while(_g22 < _g31.length) _g31[_g22++].next += delta;
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g23 = 0;
		var _g32 = kha_Scheduler.outdatedTimeTasks;
		while(_g23 < _g32.length) {
			var task = _g32[_g23];
			++_g23;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g41 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g41 < _g5.length) HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,_g5[_g41++]);
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g13 = kha_Scheduler.frameTasks;
	while(_g6 < _g13.length) {
		var frameTask = _g13[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g24 = 0;
	var _g33 = kha_Scheduler.frameTasks;
	while(_g24 < _g33.length) {
		var frameTask1 = _g33[_g24];
		++_g24;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.DIF_COUNT;
	while(_g2 < _g3) kha_Scheduler.deltas[_g2++] = 0;
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = "kha.Shaders";
kha_Shaders.init = function() {
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"HighPassFilter_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"HighPassFilter_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"HighPassFilter_fragData" + 2))));
	kha_Shaders.HighPassFilter_frag = new kha_graphics4_FragmentShader(blobs,["HighPassFilter.frag.essl","HighPassFilter-webgl2.frag.essl","HighPassFilter-relaxed.frag.essl"]);
	var blobs1 = [];
	blobs1.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"alpha_vertData" + 0))));
	blobs1.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"alpha_vertData" + 1))));
	blobs1.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"alpha_vertData" + 2))));
	kha_Shaders.alpha_vert = new kha_graphics4_VertexShader(blobs1,["alpha.vert.essl","alpha-webgl2.vert.essl","alpha-relaxed.vert.essl"]);
	var blobs2 = [];
	blobs2.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFragmentShader_fragData" + 0))));
	blobs2.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFragmentShader_fragData" + 1))));
	blobs2.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFragmentShader_fragData" + 2))));
	kha_Shaders.blurFragmentShader_frag = new kha_graphics4_FragmentShader(blobs2,["blurFragmentShader.frag.essl","blurFragmentShader-webgl2.frag.essl","blurFragmentShader-relaxed.frag.essl"]);
	var blobs3 = [];
	blobs3.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blur_pass_fragData" + 0))));
	blobs3.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blur_pass_fragData" + 1))));
	blobs3.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blur_pass_fragData" + 2))));
	kha_Shaders.blur_pass_frag = new kha_graphics4_FragmentShader(blobs3,["blur_pass.frag.essl","blur_pass-webgl2.frag.essl","blur_pass-relaxed.frag.essl"]);
	var blobs4 = [];
	blobs4.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"filmGrain_fragData" + 0))));
	blobs4.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"filmGrain_fragData" + 1))));
	blobs4.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"filmGrain_fragData" + 2))));
	kha_Shaders.filmGrain_frag = new kha_graphics4_FragmentShader(blobs4,["filmGrain.frag.essl","filmGrain-webgl2.frag.essl","filmGrain-relaxed.frag.essl"]);
	var blobs5 = [];
	blobs5.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fov_fragData" + 0))));
	blobs5.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fov_fragData" + 1))));
	blobs5.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fov_fragData" + 2))));
	kha_Shaders.fov_frag = new kha_graphics4_FragmentShader(blobs5,["fov.frag.essl","fov-webgl2.frag.essl","fov-relaxed.frag.essl"]);
	var blobs6 = [];
	blobs6.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fxaa_fragData" + 0))));
	blobs6.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fxaa_fragData" + 1))));
	blobs6.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"fxaa_fragData" + 2))));
	kha_Shaders.fxaa_frag = new kha_graphics4_FragmentShader(blobs6,["fxaa.frag.essl","fxaa-webgl2.frag.essl","fxaa-relaxed.frag.essl"]);
	var blobs7 = [];
	blobs7.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"hBlurVertexShader_vertData" + 0))));
	blobs7.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"hBlurVertexShader_vertData" + 1))));
	blobs7.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"hBlurVertexShader_vertData" + 2))));
	kha_Shaders.hBlurVertexShader_vert = new kha_graphics4_VertexShader(blobs7,["hBlurVertexShader.vert.essl","hBlurVertexShader-webgl2.vert.essl","hBlurVertexShader-relaxed.vert.essl"]);
	var blobs8 = [];
	blobs8.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshBones_vertData" + 0))));
	blobs8.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshBones_vertData" + 1))));
	blobs8.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshBones_vertData" + 2))));
	kha_Shaders.meshBones_vert = new kha_graphics4_VertexShader(blobs8,["meshBones.vert.essl","meshBones-webgl2.vert.essl","meshBones-relaxed.vert.essl"]);
	var blobs9 = [];
	blobs9.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshNoShade_fragData" + 0))));
	blobs9.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshNoShade_fragData" + 1))));
	blobs9.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"meshNoShade_fragData" + 2))));
	kha_Shaders.meshNoShade_frag = new kha_graphics4_FragmentShader(blobs9,["meshNoShade.frag.essl","meshNoShade-webgl2.frag.essl","meshNoShade-relaxed.frag.essl"]);
	var blobs10 = [];
	blobs10.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_fragData" + 0))));
	blobs10.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_fragData" + 1))));
	blobs10.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_fragData" + 2))));
	kha_Shaders.mesh_frag = new kha_graphics4_FragmentShader(blobs10,["mesh.frag.essl","mesh-webgl2.frag.essl","mesh-relaxed.frag.essl"]);
	var blobs11 = [];
	blobs11.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_vertData" + 0))));
	blobs11.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_vertData" + 1))));
	blobs11.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mesh_vertData" + 2))));
	kha_Shaders.mesh_vert = new kha_graphics4_VertexShader(blobs11,["mesh.vert.essl","mesh-webgl2.vert.essl","mesh-relaxed.vert.essl"]);
	var blobs12 = [];
	blobs12.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mirage_fragData" + 0))));
	blobs12.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mirage_fragData" + 1))));
	blobs12.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mirage_fragData" + 2))));
	kha_Shaders.mirage_frag = new kha_graphics4_FragmentShader(blobs12,["mirage.frag.essl","mirage-webgl2.frag.essl","mirage-relaxed.frag.essl"]);
	var blobs13 = [];
	blobs13.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mosaic_fragData" + 0))));
	blobs13.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mosaic_fragData" + 1))));
	blobs13.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"mosaic_fragData" + 2))));
	kha_Shaders.mosaic_frag = new kha_graphics4_FragmentShader(blobs13,["mosaic.frag.essl","mosaic-webgl2.frag.essl","mosaic-relaxed.frag.essl"]);
	var blobs14 = [];
	blobs14.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"multiplyColor_fragData" + 0))));
	blobs14.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"multiplyColor_fragData" + 1))));
	blobs14.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"multiplyColor_fragData" + 2))));
	kha_Shaders.multiplyColor_frag = new kha_graphics4_FragmentShader(blobs14,["multiplyColor.frag.essl","multiplyColor-webgl2.frag.essl","multiplyColor-relaxed.frag.essl"]);
	var blobs15 = [];
	blobs15.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"outline_fragData" + 0))));
	blobs15.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"outline_fragData" + 1))));
	blobs15.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"outline_fragData" + 2))));
	kha_Shaders.outline_frag = new kha_graphics4_FragmentShader(blobs15,["outline.frag.essl","outline-webgl2.frag.essl","outline-relaxed.frag.essl"]);
	var blobs16 = [];
	blobs16.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 0))));
	blobs16.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 1))));
	blobs16.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 2))));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs16,["painter-colored.frag.essl","painter-colored-webgl2.frag.essl","painter-colored-relaxed.frag.essl"]);
	var blobs17 = [];
	blobs17.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 0))));
	blobs17.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 1))));
	blobs17.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 2))));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs17,["painter-colored.vert.essl","painter-colored-webgl2.vert.essl","painter-colored-relaxed.vert.essl"]);
	var blobs18 = [];
	blobs18.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 0))));
	blobs18.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 1))));
	blobs18.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 2))));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs18,["painter-image.frag.essl","painter-image-webgl2.frag.essl","painter-image-relaxed.frag.essl"]);
	var blobs19 = [];
	blobs19.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 0))));
	blobs19.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 1))));
	blobs19.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 2))));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs19,["painter-image.vert.essl","painter-image-webgl2.vert.essl","painter-image-relaxed.vert.essl"]);
	var blobs20 = [];
	blobs20.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 0))));
	blobs20.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 1))));
	blobs20.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 2))));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs20,["painter-text.frag.essl","painter-text-webgl2.frag.essl","painter-text-relaxed.frag.essl"]);
	var blobs21 = [];
	blobs21.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 0))));
	blobs21.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 1))));
	blobs21.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 2))));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs21,["painter-text.vert.essl","painter-text-webgl2.vert.essl","painter-text-relaxed.vert.essl"]);
	var blobs22 = [];
	blobs22.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 0))));
	blobs22.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 1))));
	blobs22.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 2))));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs22,["painter-video.frag.essl","painter-video-webgl2.frag.essl","painter-video-relaxed.frag.essl"]);
	var blobs23 = [];
	blobs23.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 0))));
	blobs23.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 1))));
	blobs23.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 2))));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs23,["painter-video.vert.essl","painter-video-webgl2.vert.essl","painter-video-relaxed.vert.essl"]);
	var blobs24 = [];
	blobs24.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"renderAreaTint_fragData" + 0))));
	blobs24.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"renderAreaTint_fragData" + 1))));
	blobs24.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"renderAreaTint_fragData" + 2))));
	kha_Shaders.renderAreaTint_frag = new kha_graphics4_FragmentShader(blobs24,["renderAreaTint.frag.essl","renderAreaTint-webgl2.frag.essl","renderAreaTint-relaxed.frag.essl"]);
	var blobs25 = [];
	blobs25.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"rgbSplit_fragData" + 0))));
	blobs25.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"rgbSplit_fragData" + 1))));
	blobs25.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"rgbSplit_fragData" + 2))));
	kha_Shaders.rgbSplit_frag = new kha_graphics4_FragmentShader(blobs25,["rgbSplit.frag.essl","rgbSplit-webgl2.frag.essl","rgbSplit-relaxed.frag.essl"]);
	var blobs26 = [];
	blobs26.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shInverseMask_fragData" + 0))));
	blobs26.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shInverseMask_fragData" + 1))));
	blobs26.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shInverseMask_fragData" + 2))));
	kha_Shaders.shInverseMask_frag = new kha_graphics4_FragmentShader(blobs26,["shInverseMask.frag.essl","shInverseMask-webgl2.frag.essl","shInverseMask-relaxed.frag.essl"]);
	var blobs27 = [];
	blobs27.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_fragData" + 0))));
	blobs27.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_fragData" + 1))));
	blobs27.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_fragData" + 2))));
	kha_Shaders.shMask_frag = new kha_graphics4_FragmentShader(blobs27,["shMask.frag.essl","shMask-webgl2.frag.essl","shMask-relaxed.frag.essl"]);
	var blobs28 = [];
	blobs28.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_vertData" + 0))));
	blobs28.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_vertData" + 1))));
	blobs28.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMask_vertData" + 2))));
	kha_Shaders.shMask_vert = new kha_graphics4_VertexShader(blobs28,["shMask.vert.essl","shMask-webgl2.vert.essl","shMask-relaxed.vert.essl"]);
	var blobs29 = [];
	blobs29.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMaxBlend_fragData" + 0))));
	blobs29.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMaxBlend_fragData" + 1))));
	blobs29.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMaxBlend_fragData" + 2))));
	kha_Shaders.shMaxBlend_frag = new kha_graphics4_FragmentShader(blobs29,["shMaxBlend.frag.essl","shMaxBlend-webgl2.frag.essl","shMaxBlend-relaxed.frag.essl"]);
	var blobs30 = [];
	blobs30.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMixGlow_fragData" + 0))));
	blobs30.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMixGlow_fragData" + 1))));
	blobs30.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"shMixGlow_fragData" + 2))));
	kha_Shaders.shMixGlow_frag = new kha_graphics4_FragmentShader(blobs30,["shMixGlow.frag.essl","shMixGlow-webgl2.frag.essl","shMixGlow-relaxed.frag.essl"]);
	var blobs31 = [];
	blobs31.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_fragData" + 0))));
	blobs31.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_fragData" + 1))));
	blobs31.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_fragData" + 2))));
	kha_Shaders.simpleAlpha_frag = new kha_graphics4_FragmentShader(blobs31,["simpleAlpha.frag.essl","simpleAlpha-webgl2.frag.essl","simpleAlpha-relaxed.frag.essl"]);
	var blobs32 = [];
	blobs32.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_vertData" + 0))));
	blobs32.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_vertData" + 1))));
	blobs32.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleAlpha_vertData" + 2))));
	kha_Shaders.simpleAlpha_vert = new kha_graphics4_VertexShader(blobs32,["simpleAlpha.vert.essl","simpleAlpha-webgl2.vert.essl","simpleAlpha-relaxed.vert.essl"]);
	var blobs33 = [];
	blobs33.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_fragData" + 0))));
	blobs33.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_fragData" + 1))));
	blobs33.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_fragData" + 2))));
	kha_Shaders.simpleColorTransformation_frag = new kha_graphics4_FragmentShader(blobs33,["simpleColorTransformation.frag.essl","simpleColorTransformation-webgl2.frag.essl","simpleColorTransformation-relaxed.frag.essl"]);
	var blobs34 = [];
	blobs34.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_vertData" + 0))));
	blobs34.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_vertData" + 1))));
	blobs34.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleColorTransformation_vertData" + 2))));
	kha_Shaders.simpleColorTransformation_vert = new kha_graphics4_VertexShader(blobs34,["simpleColorTransformation.vert.essl","simpleColorTransformation-webgl2.vert.essl","simpleColorTransformation-relaxed.vert.essl"]);
	var blobs35 = [];
	blobs35.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleLight_fragData" + 0))));
	blobs35.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleLight_fragData" + 1))));
	blobs35.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleLight_fragData" + 2))));
	kha_Shaders.simpleLight_frag = new kha_graphics4_FragmentShader(blobs35,["simpleLight.frag.essl","simpleLight-webgl2.frag.essl","simpleLight-relaxed.frag.essl"]);
	var blobs36 = [];
	blobs36.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleRgbSplit_fragData" + 0))));
	blobs36.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleRgbSplit_fragData" + 1))));
	blobs36.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleRgbSplit_fragData" + 2))));
	kha_Shaders.simpleRgbSplit_frag = new kha_graphics4_FragmentShader(blobs36,["simpleRgbSplit.frag.essl","simpleRgbSplit-webgl2.frag.essl","simpleRgbSplit-relaxed.frag.essl"]);
	var blobs37 = [];
	blobs37.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleTime_vertData" + 0))));
	blobs37.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleTime_vertData" + 1))));
	blobs37.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simpleTime_vertData" + 2))));
	kha_Shaders.simpleTime_vert = new kha_graphics4_VertexShader(blobs37,["simpleTime.vert.essl","simpleTime-webgl2.vert.essl","simpleTime-relaxed.vert.essl"]);
	var blobs38 = [];
	blobs38.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 0))));
	blobs38.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 1))));
	blobs38.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 2))));
	kha_Shaders.simple_frag = new kha_graphics4_FragmentShader(blobs38,["simple.frag.essl","simple-webgl2.frag.essl","simple-relaxed.frag.essl"]);
	var blobs39 = [];
	blobs39.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 0))));
	blobs39.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 1))));
	blobs39.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 2))));
	kha_Shaders.simple_vert = new kha_graphics4_VertexShader(blobs39,["simple.vert.essl","simple-webgl2.vert.essl","simple-relaxed.vert.essl"]);
	var blobs40 = [];
	blobs40.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vBlurVertexShader_vertData" + 0))));
	blobs40.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vBlurVertexShader_vertData" + 1))));
	blobs40.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vBlurVertexShader_vertData" + 2))));
	kha_Shaders.vBlurVertexShader_vert = new kha_graphics4_VertexShader(blobs40,["vBlurVertexShader.vert.essl","vBlurVertexShader-webgl2.vert.essl","vBlurVertexShader-relaxed.vert.essl"]);
};
var kha_Sound = function() {
	this.sampleRate = 0;
	this.channels = 0;
	this.length = 0;
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = "kha.Sound";
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = new Float32Array(count * 2);
			var _g = 0;
			while(_g < count) {
				var i = _g++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = new Float32Array(count);
			var _g1 = 0;
			while(_g1 < count) {
				var i1 = _g1++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.channels = header.channel;
		this.sampleRate = header.sampleRate;
		this.compressedData = null;
		done();
	}
	,unload: function() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
	,__class__: kha_Sound
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,null,null,null,null,null,null,null,null) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(null,null,null,null,null,null) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = "kha.SystemOptions";
kha_SystemOptions.prototype = {
	__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = "kha.System";
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) _g1[_g++](framebuffers);
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = "kha.GamepadStates";
kha_GamepadStates.prototype = {
	__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = "kha.SystemImpl";
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	if(kha_SystemImpl.mobile || kha_SystemImpl.chrome) {
		kha_SystemImpl.mobileAudioPlaying = false;
	} else {
		kha_SystemImpl.mobileAudioPlaying = true;
	}
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	callback(kha_SystemImpl.window);
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	if(window.navigator.userAgent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	if(window.navigator.userAgent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e) {
		kha_input_Gamepad.sendConnectEvent(e.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e1) {
		kha_input_Gamepad.sendDisconnectEvent(e1.gamepad.index);
	});
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g = 0;
		while(_g < 256) {
			++_g;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g1 = 0;
		while(_g1 < 256) {
			++_g1;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	var onCopy = function(e2) {
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e2.clipboardData.setData("text/plain",data);
			}
			e2.preventDefault();
		}
	};
	var onCut = function(e3) {
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e3.clipboardData.setData("text/plain",data1);
			}
			e3.preventDefault();
		}
	};
	var onPaste = function(e4) {
		if(kha_System.pasteListener != null) {
			var onPaste1 = e4.clipboardData.getData("text/plain");
			kha_System.pasteListener(onPaste1);
			e4.preventDefault();
		}
	};
	var document = window.document;
	document.addEventListener("copy",onCopy);
	document.addEventListener("cut",onCut);
	document.addEventListener("paste",onPaste);
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g2 = 0;
	var _g3 = pad.buttons.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.getCanvasElement = function() {
	if(kha_SystemImpl.khanvas != null) {
		return kha_SystemImpl.khanvas;
	}
	return window.document.getElementById("khanvas");
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.getCanvasElement();
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 345, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( e2 ) {
			var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 367, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.666666666666668);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var i = _g++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext != null) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate,16.666666666666668);
	} else {
		requestAnimationFrame(animate);
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			}).catch(function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 607, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
		kha_audio2_Audio.wakeChannels();
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.insideInputEvent = true;
	var _g = kha_input_Mouse.wheelEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		if(_g.func(event)) {
			event.preventDefault();
		}
		break;
	}
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	kha_SystemImpl.insideInputEvent = false;
	return;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	var _g = kha_input_Surface.touchDownEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		if(_g.func(event)) {
			event.preventDefault();
		}
		break;
	}
	var index = 0;
	var _g2 = 0;
	var _g3 = event.changedTouches;
	while(_g2 < _g3.length) {
		var touch = _g3[_g2];
		++_g2;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		if(index == 0) {
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
		}
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = kha_input_Keyboard.keyBehavior;
	switch(_g._hx_index) {
	case 0:
		kha_SystemImpl.defaultKeyBlock(event);
		break;
	case 1:
		event.preventDefault();
		break;
	case 2:
		break;
	case 3:
		if(_g.func(event.keyCode)) {
			event.preventDefault();
		}
		break;
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.keyboard.sendDownEvent(kha_SystemImpl.fixedKeyCode(event));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.fixedKeyCode = function(event) {
	switch(event.keyCode) {
	case 91:case 93:
		return 224;
	case 186:
		return 59;
	case 187:
		return 61;
	case 189:
		return 173;
	default:
		return event.keyCode;
	}
};
kha_SystemImpl.defaultKeyBlock = function(e) {
	if(e.ctrlKey || e.metaKey) {
		if(e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86) {
			return;
		}
		e.preventDefault();
		return;
	}
	if(e.keyCode >= 112 && e.keyCode <= 123) {
		return;
	}
	if(e.key == null || e.key.length == 1) {
		return;
	}
	e.preventDefault();
};
kha_SystemImpl.keyUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	kha_SystemImpl.keyboard.sendUpEvent(kha_SystemImpl.fixedKeyCode(event));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.keyPress = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unkown";
};
kha_SystemImpl.getGamepadVendor = function(index) {
	return "unknown";
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.MSAAFrameBuffer = null;
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = "kha.WebGLImage";
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	default:
		return 4;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAAFrameBuffer = kha_SystemImpl.gl.createFramebuffer();
					this.MSAAColorBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAAColorBuffer);
					var MSAAFormat;
					switch(this.format) {
					case 0:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
						break;
					case 2:
						MSAAFormat = kha_SystemImpl.gl.RGBA32F;
						break;
					case 4:
						MSAAFormat = kha_SystemImpl.gl.RGBA16F;
						break;
					case 5:
						MSAAFormat = 33326;
						break;
					case 6:
						MSAAFormat = 33325;
						break;
					default:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
					}
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,MSAAFormat,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36064,36161,this.MSAAColorBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			var e = kha_SystemImpl.gl.checkFramebufferStatus(36160);
			if(e != 36053) {
				haxe_Log.trace("checkframebufferStatus error " + e,{ fileName : "kha/WebGLImage.hx", lineNumber : 250, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.format) {
			case 0:
				if(((this.image) instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					if(depthStencilFormat == 1) {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33190,this.get_realWidth(),this.get_realHeight());
					} else {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33189,this.get_realWidth(),this.get_realHeight());
					}
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,35056,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepthStencilFrom: function(image) {
		this.depthTexture = (js_Boot.__cast(image , kha_WebGLImage)).depthTexture;
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		switch(this.format) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g = 0;
					var _g1 = this.get_height();
					while(_g < _g1) {
						var y = _g++;
						var _g2 = 0;
						var _g11 = this.get_width();
						while(_g2 < _g11) {
							var x = _g2++;
							var value = this.bytes.b[y * this.get_width() + x];
							rgbaBytes.b[y * this.get_width() * 4 + x * 4] = value;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 1] = value;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 2] = value;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 3] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
		if(this.MSAAFrameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.MSAAFrameBuffer);
		}
		if(this.MSAAColorBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAAColorBuffer);
		}
		if(this.MSAADepthBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAADepthBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(defaultWidth,defaultHeight,canvas) {
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = "kha.Window";
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	get_width: function() {
		if(this.canvas.clientWidth == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.clientWidth;
		}
	}
	,get_height: function() {
		if(this.canvas.clientHeight == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.clientHeight;
		}
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(display == null) {
		display = -1;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = -1;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = "kha.WindowOptions";
kha_WindowOptions.prototype = {
	__class__: kha_WindowOptions
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = "kha.audio1.AudioChannel";
kha_audio1_AudioChannel.__isInterface__ = true;
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
};
var kha_internal_IntBox = function(value) {
	this.value = value;
};
$hxClasses["kha.internal.IntBox"] = kha_internal_IntBox;
kha_internal_IntBox.__name__ = "kha.internal.IntBox";
kha_internal_IntBox.prototype = {
	__class__: kha_internal_IntBox
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = "kha.audio2.Audio";
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	kha_audio2_Audio.samplesPerSecond = Math.round(kha_audio2_Audio._context.sampleRate);
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(8192,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(2048,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.intBox.value = e.outputBuffer.length * 2;
			kha_audio2_Audio.audioCallback(kha_audio2_Audio.intBox,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = e.outputBuffer.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.wakeChannels = function() {
	kha_SystemImpl.mobileAudioPlaying = true;
	var _g = 0;
	var _g1 = kha_audio2_Audio.virtualChannels;
	while(_g < _g1.length) _g1[_g++].wake();
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	element.src = URL.createObjectURL(new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"}));
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element,loop);
	if(kha_SystemImpl.mobileAudioPlaying) {
		channel.play();
		return channel;
	} else {
		var virtualChannel = new kha_audio2_VirtualStreamChannel(channel,loop);
		kha_audio2_Audio.virtualChannels.push(virtualChannel);
		return virtualChannel;
	}
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = "kha.audio2.Audio1";
kha_audio2_Audio1._init = function() {
	kha_audio2_Audio1.soundChannels = new Array(32);
	kha_audio2_Audio1.streamChannels = new Array(32);
	kha_audio2_Audio1.internalSoundChannels = new Array(32);
	kha_audio2_Audio1.internalStreamChannels = new Array(32);
	kha_audio2_Audio1.sampleCache1 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache2 = new Float32Array(512);
	kha_audio2_Audio1.lastAllocationCount = 0;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samplesBox,buffer) {
	var samples = samplesBox.value;
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		if(kha_audio2_Audio.disableGcInteractions) {
			haxe_Log.trace("Unexpected allocation request in audio thread.",{ fileName : "kha/audio2/Audio1.hx", lineNumber : 50, className : "kha.audio2.Audio1", methodName : "mix"});
			var _g = 0;
			while(_g < samples) {
				++_g;
				buffer.data[buffer.writeLocation] = 0;
				buffer.writeLocation += 1;
				if(buffer.writeLocation >= buffer.size) {
					buffer.writeLocation = 0;
				}
			}
			kha_audio2_Audio1.lastAllocationCount = 0;
			kha_audio2_Audio.disableGcInteractions = false;
			return;
		}
		kha_audio2_Audio1.sampleCache1 = new Float32Array(samples * 2);
		kha_audio2_Audio1.sampleCache2 = new Float32Array(samples * 2);
		kha_audio2_Audio1.lastAllocationCount = 0;
	} else if(kha_audio2_Audio1.lastAllocationCount > 100) {
		kha_audio2_Audio.disableGcInteractions = true;
	} else {
		kha_audio2_Audio1.lastAllocationCount += 1;
	}
	var _g1 = 0;
	while(_g1 < samples) kha_audio2_Audio1.sampleCache2[_g1++] = 0;
	var _g2 = 0;
	while(_g2 < 32) {
		var i = _g2++;
		kha_audio2_Audio1.internalSoundChannels[i] = kha_audio2_Audio1.soundChannels[i];
	}
	var _g3 = 0;
	while(_g3 < 32) {
		var i1 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i1] = kha_audio2_Audio1.streamChannels[i1];
	}
	var _g4 = 0;
	var _g5 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g5.length) {
		var channel = _g5[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g51 = 0;
		while(_g51 < samples) {
			var i2 = _g51++;
			kha_audio2_Audio1.sampleCache2[i2] += kha_audio2_Audio1.sampleCache1[i2] * channel.get_volume();
		}
	}
	var _g6 = 0;
	var _g7 = kha_audio2_Audio1.internalStreamChannels;
	while(_g6 < _g7.length) {
		var channel1 = _g7[_g6];
		++_g6;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g71 = 0;
		while(_g71 < samples) {
			var i3 = _g71++;
			kha_audio2_Audio1.sampleCache2[i3] += kha_audio2_Audio1.sampleCache1[i3] * channel1.get_volume();
		}
	}
	var _g8 = 0;
	while(_g8 < samples) {
		var a = kha_audio2_Audio1.sampleCache2[_g8++];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	if(kha_audio2_Audio.samplesPerSecond != sound.sampleRate) {
		channel = new kha_audio2_ResamplingAudioChannel(loop,sound.sampleRate);
	} else {
		channel = new kha_audio2_AudioChannel(loop);
	}
	channel.data = sound.uncompressedData;
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			kha_audio2_Audio1.streamChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
var kha_audio2_AudioChannel = function(looping) {
	this.looping = false;
	this.stopped = false;
	this.paused = false;
	this.myPosition = 0;
	this.myVolume = 1;
	this.data = null;
	this.looping = looping;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = "kha.audio2.AudioChannel";
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			while(_g < requestedLength) requestedSamples[_g++] = 0;
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g1 = 0;
			var a = this.data.length - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g11 = a < b ? a : b;
			while(_g1 < _g11) {
				++_g1;
				requestedSamples[requestedSamplesIndex++] = this.data[this.myPosition++];
			}
			if(this.myPosition >= this.data.length) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples[requestedSamplesIndex++] = 0;
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,get_position: function() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_AudioChannel
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	this.data = new Float32Array(size);
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = "kha.audio2.Buffer";
kha_audio2_Buffer.prototype = {
	__class__: kha_audio2_Buffer
};
var kha_audio2_ResamplingAudioChannel = function(looping,sampleRate) {
	kha_audio2_AudioChannel.call(this,looping);
	this.sampleRate = sampleRate;
};
$hxClasses["kha.audio2.ResamplingAudioChannel"] = kha_audio2_ResamplingAudioChannel;
kha_audio2_ResamplingAudioChannel.__name__ = "kha.audio2.ResamplingAudioChannel";
kha_audio2_ResamplingAudioChannel.__super__ = kha_audio2_AudioChannel;
kha_audio2_ResamplingAudioChannel.prototype = $extend(kha_audio2_AudioChannel.prototype,{
	nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			while(_g < requestedLength) requestedSamples[_g++] = 0;
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g1 = 0;
			var value = Math.ceil(this.data.length * (sampleRate / this.sampleRate));
			var a = (value % 2 == 0 ? value : value + 1) - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g11 = a < b ? a : b;
			while(_g1 < _g11) {
				++_g1;
				var index = requestedSamplesIndex++;
				var position = this.myPosition++;
				var factor = this.sampleRate / sampleRate;
				var value1;
				if(position % 2 == 0) {
					position = position / 2 | 0;
					var pos = factor * position;
					var pos1 = Math.floor(pos);
					var pos2 = Math.floor(pos + 1);
					pos1 *= 2;
					pos2 *= 2;
					var maximum = this.data.length - 1;
					if(maximum % 2 == 0) {
						maximum = maximum;
					} else {
						--maximum;
					}
					var t = pos - Math.floor(pos);
					value1 = (1 - t) * (pos1 < 0 || pos1 > maximum ? 0 : this.data[pos1]) + t * (pos2 < 0 || pos2 > maximum ? 0 : this.data[pos2]);
				} else {
					position = position / 2 | 0;
					var pos3 = factor * position;
					var pos11 = Math.floor(pos3);
					var pos21 = Math.floor(pos3 + 1);
					pos11 = pos11 * 2 + 1;
					pos21 = pos21 * 2 + 1;
					var maximum1 = this.data.length - 1;
					if(maximum1 % 2 != 0) {
						maximum1 = maximum1;
					} else {
						--maximum1;
					}
					var t1 = pos3 - Math.floor(pos3);
					value1 = (1 - t1) * (pos11 < 1 || pos11 > maximum1 ? 0 : this.data[pos11]) + t1 * (pos21 < 1 || pos21 > maximum1 ? 0 : this.data[pos21]);
				}
				requestedSamples[index] = value1;
			}
			var value2 = Math.ceil(this.data.length * (sampleRate / this.sampleRate));
			if(this.myPosition >= (value2 % 2 == 0 ? value2 : value2 + 1)) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples[requestedSamplesIndex++] = 0;
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,get_position: function() {
		return this.myPosition / kha_audio2_Audio.samplesPerSecond / 2;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_ResamplingAudioChannel
});
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = "kha.audio2.StreamChannel";
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			while(_g < length) samples[_g++] = 0;
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g1 = count;
			while(_g1 < length) samples[_g1++] = 0;
		}
	}
	,stop: function() {
		this.atend = true;
	}
	,get_position: function() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
};
var kha_audio2_VirtualStreamChannel = function(aeChannel,looping) {
	this.mode = 2;
	this.aeChannel = aeChannel;
	this.looping = looping;
	this.lastTickTime = kha_Scheduler.realTime();
	this.lastPosition = 0;
};
$hxClasses["kha.audio2.VirtualStreamChannel"] = kha_audio2_VirtualStreamChannel;
kha_audio2_VirtualStreamChannel.__name__ = "kha.audio2.VirtualStreamChannel";
kha_audio2_VirtualStreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_VirtualStreamChannel.prototype = {
	wake: function() {
		this.updatePosition();
		this.aeChannel.set_position(this.lastPosition);
		this.aeChannel.play();
	}
	,updatePosition: function() {
		var now = kha_Scheduler.realTime();
		switch(this.mode) {
		case 0:
			this.lastPosition = 0;
			break;
		case 1:
			break;
		case 2:
			this.lastPosition += now - this.lastTickTime;
			while(this.lastPosition > this.get_length()) this.lastPosition -= this.get_length();
			break;
		}
		this.lastTickTime = now;
	}
	,stop: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.stop();
		} else {
			this.updatePosition();
			this.mode = 0;
		}
	}
	,get_length: function() {
		return this.aeChannel.get_length();
	}
	,get_position: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.get_position();
		} else {
			this.updatePosition();
			return this.lastPosition;
		}
	}
	,set_volume: function(value) {
		return this.aeChannel.set_volume(value);
	}
	,__class__: kha_audio2_VirtualStreamChannel
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = "kha.audio2.ogg.tools.Crc32";
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	kha_audio2_ogg_tools_Crc32.table = new Array(256);
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = "kha.audio2.ogg.vorbis.Reader";
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var buffer = new Float32Array(4096 * header.channel);
	while(true) {
		var n = decoder.read(buffer,4096,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) output.writeFloat(buffer[_g++]);
		if(n == 0) {
			break;
		}
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		return _$UInt_UInt_$Impl_$.toFloat(this.get_currentSample()) / _$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = "kha.audio2.ogg.vorbis.VorbisDecodeState";
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var vec = new Array(segmentCount);
		var _g = 0;
		while(_g < segmentCount) vec[_g++] = this.input.readByte();
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i = segmentCount - 1;
			while(i >= 0) {
				if(this.segments[i] < 255) {
					break;
				}
				if(i >= 0) {
					this.endSegWithKnownLoc = i;
					this.knownLocForPacket = loc0;
				}
				--i;
			}
		}
		if(this.firstDecode) {
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g1 = 0;
			while(_g1 < segmentCount) len += this.segments[_g1++];
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = e1;
					return 0;
				} else {
					throw e;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				if(((((e) instanceof js__$Boot_HaxeError) ? e.val : e) instanceof haxe_io_Eof)) {
					eof = true;
					x = 0;
				} else {
					throw e;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			end = _g.end;
			last = _g.last;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g3 = this.findPage(seekFunc,inputLength);
			switch(_g3._hx_index) {
			case 0:
				end = _g3.end;
				last = _g3.last;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var vec = new Array(6);
		var _g1 = 0;
		while(_g1 < 6) vec[_g1++] = this.input.readByte();
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				if(this.input.readByte() == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var header = new Array(27);
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[_g++] ^ crc >>> 24];
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							++_g1;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							++_g3;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( e ) {
						if(((((e) instanceof js__$Boot_HaxeError) ? e.val : e) instanceof haxe_io_Eof)) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw e;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e1 ) {
			if(((((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1) instanceof haxe_io_Eof)) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw e1;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var packetType = new Array(255);
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var vec = new Array(27);
		var _g = 0;
		while(_g < 27) vec[_g++] = this.input.readByte();
		var n = vec[26];
		this.inputPosition += n;
		var vec1 = new Array(n);
		var _g1 = 0;
		while(_g1 < n) vec1[_g1++] = this.input.readByte();
		var len = 0;
		var _g2 = 0;
		var _g11 = vec[26];
		while(_g2 < _g11) len += vec1[_g2++];
		z.pageEnd = z.pageStart + 27 + vec[26] + len;
		z.lastDecodedSample = vec[6] + (vec[7] << 8) + (vec[8] << 16) + (vec[9] << 16);
		if((vec[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (vec[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g21 = 0;
		var _g3 = vec[26];
		while(_g21 < _g3) {
			var i = _g21++;
			if(packetStart) {
				if(vec1[i] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				n1 &= (1 << (n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0)) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = vec1[i] - 1;
				this.inputPosition += len1;
				var vec2 = new Array(len1);
				var _g4 = 0;
				while(_g4 < len1) vec2[_g4++] = this.input.readByte();
			} else {
				var len2 = vec1[i];
				this.inputPosition += len2;
				var vec3 = new Array(len2);
				var _g5 = 0;
				while(_g5 < len2) vec3[_g5++] = this.input.readByte();
			}
			packetStart = vec1[i] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples = packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i1 = numPacket - 2;
		while(i1 >= 1) {
			--i1;
			if(packetType[i1]) {
				if(packetType[i1 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i1;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	this.channelBuffers = new Array(header.channel);
	this.previousWindow = new Array(header.channel);
	this.finalY = new Array(header.channel);
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		this.channelBuffers[i] = new Array(header.blocksize1);
		this.previousWindow[i] = new Array(header.blocksize1 / 2 | 0);
		this.finalY[i] = [];
	}
	this.a = new Array(2);
	this.b = new Array(2);
	this.c = new Array(2);
	this.window = new Array(2);
	this.bitReverseData = new Array(2);
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = "kha.audio2.ogg.vorbis.VorbisDecoder";
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(kha_audio2_ogg_vorbis_data_Header.read(decodeState),decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	read: function(output,samples,channels,sampleRate,useFloat) {
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate) | 0) != 0) {
			var this1 = this.header.sampleRate;
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(this1 == null ? null : _$UInt_UInt_$Impl_$.toFloat(this1)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				while(_g2 < sampleRepeat) {
					++_g2;
					var _g3 = 0;
					var _g11 = this.header.channel;
					while(_g3 < _g11) {
						var i = _g3++;
						var _g4 = 0;
						while(_g4 < channelRepeat) {
							++_g4;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g5 = n;
		var _g12 = len;
		while(_g5 < _g12) {
			++_g5;
			var _g6 = 0;
			while(_g6 < sampleRepeat) {
				++_g6;
				var _g7 = 0;
				var _g13 = this.header.channel;
				while(_g7 < _g13) {
					++_g7;
					var _g8 = 0;
					while(_g8 < channelRepeat) {
						++_g8;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : _$UInt_UInt_$Impl_$.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				switch(this.decodeState.findPage(seekFunc,inputLength)._hx_index) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				while(_g2 < n) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g3 = 0;
		var _g11 = this.header.channel;
		while(_g3 < _g11) {
			var i1 = _g3++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g4 = 0;
			var _g12 = len - right;
			while(_g4 < _g12) {
				var j1 = _g4++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		this.a[bs] = new Array(n2);
		this.b[bs] = new Array(n2);
		this.c[bs] = new Array(n >> 2);
		this.window[bs] = new Array(n2);
		this.bitReverseData[bs] = new Array(n >> 3);
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var buf2 = new Array(n2);
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		while(eOffset != n2) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = buf2[eOffset0 + 1] - buf2[eOffset1 + 1];
			var v40_20 = buf2[eOffset0] - buf2[eOffset1];
			buffer[dOffset0 + 1] = buf2[eOffset0 + 1] + buf2[eOffset1 + 1];
			buffer[dOffset0] = buf2[eOffset0] + buf2[eOffset1];
			buffer[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			buffer[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = buf2[eOffset0 + 3] - buf2[eOffset1 + 3];
			v40_20 = buf2[eOffset0 + 2] - buf2[eOffset1 + 2];
			buffer[dOffset0 + 3] = buf2[eOffset0 + 3] + buf2[eOffset1 + 3];
			buffer[dOffset0 + 2] = buf2[eOffset0 + 2] + buf2[eOffset1 + 2];
			buffer[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			buffer[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eeOffset0] - buffer[eeOffset2];
			var k01_21 = buffer[eeOffset0 + (-1)] - buffer[eeOffset2 + (-1)];
			var _g = eeOffset0;
			buffer[_g] = buffer[_g] + buffer[eeOffset2];
			var _g1 = eeOffset0 + (-1);
			buffer[_g1] = buffer[_g1] + buffer[eeOffset2 + (-1)];
			buffer[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-2)] - buffer[eeOffset2 + (-2)];
			k01_21 = buffer[eeOffset0 + (-3)] - buffer[eeOffset2 + (-3)];
			var _g2 = eeOffset0 + (-2);
			buffer[_g2] = buffer[_g2] + buffer[eeOffset2 + (-2)];
			var _g3 = eeOffset0 + (-3);
			buffer[_g3] = buffer[_g3] + buffer[eeOffset2 + (-3)];
			buffer[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-4)] - buffer[eeOffset2 + (-4)];
			k01_21 = buffer[eeOffset0 + (-5)] - buffer[eeOffset2 + (-5)];
			var _g4 = eeOffset0 + (-4);
			buffer[_g4] = buffer[_g4] + buffer[eeOffset2 + (-4)];
			var _g5 = eeOffset0 + (-5);
			buffer[_g5] = buffer[_g5] + buffer[eeOffset2 + (-5)];
			buffer[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-6)] - buffer[eeOffset2 + (-6)];
			k01_21 = buffer[eeOffset0 + (-7)] - buffer[eeOffset2 + (-7)];
			var _g6 = eeOffset0 + (-6);
			buffer[_g6] = buffer[_g6] + buffer[eeOffset2 + (-6)];
			var _g7 = eeOffset0 + (-7);
			buffer[_g7] = buffer[_g7] + buffer[eeOffset2 + (-7)];
			buffer[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = buffer[eeOffset01] - buffer[eeOffset21];
			var k01_211 = buffer[eeOffset01 + (-1)] - buffer[eeOffset21 + (-1)];
			var _g8 = eeOffset01;
			buffer[_g8] = buffer[_g8] + buffer[eeOffset21];
			var _g9 = eeOffset01 + (-1);
			buffer[_g9] = buffer[_g9] + buffer[eeOffset21 + (-1)];
			buffer[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			buffer[eeOffset21 + (-1)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = buffer[eeOffset01 + (-2)] - buffer[eeOffset21 + (-2)];
			k01_211 = buffer[eeOffset01 + (-3)] - buffer[eeOffset21 + (-3)];
			var _g10 = eeOffset01 + (-2);
			buffer[_g10] = buffer[_g10] + buffer[eeOffset21 + (-2)];
			var _g11 = eeOffset01 + (-3);
			buffer[_g11] = buffer[_g11] + buffer[eeOffset21 + (-3)];
			buffer[eeOffset21 + (-2)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			buffer[eeOffset21 + (-3)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = buffer[eeOffset01 + (-4)] - buffer[eeOffset21 + (-4)];
			k01_211 = buffer[eeOffset01 + (-5)] - buffer[eeOffset21 + (-5)];
			var _g12 = eeOffset01 + (-4);
			buffer[_g12] = buffer[_g12] + buffer[eeOffset21 + (-4)];
			var _g13 = eeOffset01 + (-5);
			buffer[_g13] = buffer[_g13] + buffer[eeOffset21 + (-5)];
			buffer[eeOffset21 + (-4)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			buffer[eeOffset21 + (-5)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = buffer[eeOffset01 + (-6)] - buffer[eeOffset21 + (-6)];
			k01_211 = buffer[eeOffset01 + (-7)] - buffer[eeOffset21 + (-7)];
			var _g14 = eeOffset01 + (-6);
			buffer[_g14] = buffer[_g14] + buffer[eeOffset21 + (-6)];
			var _g15 = eeOffset01 + (-7);
			buffer[_g15] = buffer[_g15] + buffer[eeOffset21 + (-7)];
			buffer[eeOffset21 + (-6)] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			buffer[eeOffset21 + (-7)] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = buffer[eOffset01] - buffer[eOffset2];
			var k01_212 = buffer[eOffset01 + (-1)] - buffer[eOffset2 + (-1)];
			var _g16 = eOffset01;
			buffer[_g16] = buffer[_g16] + buffer[eOffset2];
			var _g17 = eOffset01 + (-1);
			buffer[_g17] = buffer[_g17] + buffer[eOffset2 + (-1)];
			buffer[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			buffer[eOffset2 + (-1)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = buffer[eOffset01 + (-2)] - buffer[eOffset2 + (-2)];
			k01_212 = buffer[eOffset01 + (-3)] - buffer[eOffset2 + (-3)];
			var _g18 = eOffset01 + (-2);
			buffer[_g18] = buffer[_g18] + buffer[eOffset2 + (-2)];
			var _g19 = eOffset01 + (-3);
			buffer[_g19] = buffer[_g19] + buffer[eOffset2 + (-3)];
			buffer[eOffset2 + (-2)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			buffer[eOffset2 + (-3)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = buffer[eOffset01 + (-4)] - buffer[eOffset2 + (-4)];
			k01_212 = buffer[eOffset01 + (-5)] - buffer[eOffset2 + (-5)];
			var _g20 = eOffset01 + (-4);
			buffer[_g20] = buffer[_g20] + buffer[eOffset2 + (-4)];
			var _g21 = eOffset01 + (-5);
			buffer[_g21] = buffer[_g21] + buffer[eOffset2 + (-5)];
			buffer[eOffset2 + (-4)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			buffer[eOffset2 + (-5)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = buffer[eOffset01 + (-6)] - buffer[eOffset2 + (-6)];
			k01_212 = buffer[eOffset01 + (-7)] - buffer[eOffset2 + (-7)];
			var _g22 = eOffset01 + (-6);
			buffer[_g22] = buffer[_g22] + buffer[eOffset2 + (-6)];
			var _g23 = eOffset01 + (-7);
			buffer[_g23] = buffer[_g23] + buffer[eOffset2 + (-7)];
			buffer[eOffset2 + (-6)] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			buffer[eOffset2 + (-7)] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = buffer[eOffset02] - buffer[eOffset21];
			var k01_213 = buffer[eOffset02 + (-1)] - buffer[eOffset21 + (-1)];
			var _g24 = eOffset02;
			buffer[_g24] = buffer[_g24] + buffer[eOffset21];
			var _g25 = eOffset02 + (-1);
			buffer[_g25] = buffer[_g25] + buffer[eOffset21 + (-1)];
			buffer[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			buffer[eOffset21 + (-1)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = buffer[eOffset02 + (-2)] - buffer[eOffset21 + (-2)];
			k01_213 = buffer[eOffset02 + (-3)] - buffer[eOffset21 + (-3)];
			var _g26 = eOffset02 + (-2);
			buffer[_g26] = buffer[_g26] + buffer[eOffset21 + (-2)];
			var _g27 = eOffset02 + (-3);
			buffer[_g27] = buffer[_g27] + buffer[eOffset21 + (-3)];
			buffer[eOffset21 + (-2)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			buffer[eOffset21 + (-3)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = buffer[eOffset02 + (-4)] - buffer[eOffset21 + (-4)];
			k01_213 = buffer[eOffset02 + (-5)] - buffer[eOffset21 + (-5)];
			var _g28 = eOffset02 + (-4);
			buffer[_g28] = buffer[_g28] + buffer[eOffset21 + (-4)];
			var _g29 = eOffset02 + (-5);
			buffer[_g29] = buffer[_g29] + buffer[eOffset21 + (-5)];
			buffer[eOffset21 + (-4)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			buffer[eOffset21 + (-5)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = buffer[eOffset02 + (-6)] - buffer[eOffset21 + (-6)];
			k01_213 = buffer[eOffset02 + (-7)] - buffer[eOffset21 + (-7)];
			var _g30 = eOffset02 + (-6);
			buffer[_g30] = buffer[_g30] + buffer[eOffset21 + (-6)];
			var _g31 = eOffset02 + (-7);
			buffer[_g31] = buffer[_g31] + buffer[eOffset21 + (-7)];
			buffer[eOffset21 + (-6)] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			buffer[eOffset21 + (-7)] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = buffer[eOffset03] - buffer[eOffset22];
			var k01_214 = buffer[eOffset03 + (-1)] - buffer[eOffset22 + (-1)];
			var _g32 = eOffset03;
			buffer[_g32] = buffer[_g32] + buffer[eOffset22];
			var _g33 = eOffset03 + (-1);
			buffer[_g33] = buffer[_g33] + buffer[eOffset22 + (-1)];
			buffer[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			buffer[eOffset22 + (-1)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = buffer[eOffset03 + (-2)] - buffer[eOffset22 + (-2)];
			k01_214 = buffer[eOffset03 + (-3)] - buffer[eOffset22 + (-3)];
			var _g34 = eOffset03 + (-2);
			buffer[_g34] = buffer[_g34] + buffer[eOffset22 + (-2)];
			var _g35 = eOffset03 + (-3);
			buffer[_g35] = buffer[_g35] + buffer[eOffset22 + (-3)];
			buffer[eOffset22 + (-2)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			buffer[eOffset22 + (-3)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = buffer[eOffset03 + (-4)] - buffer[eOffset22 + (-4)];
			k01_214 = buffer[eOffset03 + (-5)] - buffer[eOffset22 + (-5)];
			var _g36 = eOffset03 + (-4);
			buffer[_g36] = buffer[_g36] + buffer[eOffset22 + (-4)];
			var _g37 = eOffset03 + (-5);
			buffer[_g37] = buffer[_g37] + buffer[eOffset22 + (-5)];
			buffer[eOffset22 + (-4)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			buffer[eOffset22 + (-5)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = buffer[eOffset03 + (-6)] - buffer[eOffset22 + (-6)];
			k01_214 = buffer[eOffset03 + (-7)] - buffer[eOffset22 + (-7)];
			var _g38 = eOffset03 + (-6);
			buffer[_g38] = buffer[_g38] + buffer[eOffset22 + (-6)];
			var _g39 = eOffset03 + (-7);
			buffer[_g39] = buffer[_g39] + buffer[eOffset22 + (-7)];
			buffer[eOffset22 + (-6)] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			buffer[eOffset22 + (-7)] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = buffer[eOffset04] - buffer[eOffset23];
			var k01_215 = buffer[eOffset04 + (-1)] - buffer[eOffset23 + (-1)];
			var _g40 = eOffset04;
			buffer[_g40] = buffer[_g40] + buffer[eOffset23];
			var _g41 = eOffset04 + (-1);
			buffer[_g41] = buffer[_g41] + buffer[eOffset23 + (-1)];
			buffer[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			buffer[eOffset23 + (-1)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = buffer[eOffset04 + (-2)] - buffer[eOffset23 + (-2)];
			k01_215 = buffer[eOffset04 + (-3)] - buffer[eOffset23 + (-3)];
			var _g42 = eOffset04 + (-2);
			buffer[_g42] = buffer[_g42] + buffer[eOffset23 + (-2)];
			var _g43 = eOffset04 + (-3);
			buffer[_g43] = buffer[_g43] + buffer[eOffset23 + (-3)];
			buffer[eOffset23 + (-2)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			buffer[eOffset23 + (-3)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = buffer[eOffset04 + (-4)] - buffer[eOffset23 + (-4)];
			k01_215 = buffer[eOffset04 + (-5)] - buffer[eOffset23 + (-5)];
			var _g44 = eOffset04 + (-4);
			buffer[_g44] = buffer[_g44] + buffer[eOffset23 + (-4)];
			var _g45 = eOffset04 + (-5);
			buffer[_g45] = buffer[_g45] + buffer[eOffset23 + (-5)];
			buffer[eOffset23 + (-4)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			buffer[eOffset23 + (-5)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = buffer[eOffset04 + (-6)] - buffer[eOffset23 + (-6)];
			k01_215 = buffer[eOffset04 + (-7)] - buffer[eOffset23 + (-7)];
			var _g46 = eOffset04 + (-6);
			buffer[_g46] = buffer[_g46] + buffer[eOffset23 + (-6)];
			var _g47 = eOffset04 + (-7);
			buffer[_g47] = buffer[_g47] + buffer[eOffset23 + (-7)];
			buffer[eOffset23 + (-6)] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			buffer[eOffset23 + (-7)] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g48 = 2;
		var _g110 = ld - 3 >> 1;
		while(_g48 < _g110) {
			var l = _g48++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g49 = 0;
			while(_g49 < lim) {
				var d04 = n2 - 1 - k0 * _g49++;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i6 = (n >> l + 4 >> 2) + 1;
				while(--i6 > 0) {
					var k00_206 = buffer[eOffset05] - buffer[eOffset24];
					var k01_216 = buffer[eOffset05 + (-1)] - buffer[eOffset24 + (-1)];
					var _g50 = eOffset05;
					buffer[_g50] = buffer[_g50] + buffer[eOffset24];
					var _g51 = eOffset05 + (-1);
					buffer[_g51] = buffer[_g51] + buffer[eOffset24 + (-1)];
					buffer[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					buffer[eOffset24 + (-1)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = buffer[eOffset05 + (-2)] - buffer[eOffset24 + (-2)];
					k01_216 = buffer[eOffset05 + (-3)] - buffer[eOffset24 + (-3)];
					var _g52 = eOffset05 + (-2);
					buffer[_g52] = buffer[_g52] + buffer[eOffset24 + (-2)];
					var _g53 = eOffset05 + (-3);
					buffer[_g53] = buffer[_g53] + buffer[eOffset24 + (-3)];
					buffer[eOffset24 + (-2)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					buffer[eOffset24 + (-3)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = buffer[eOffset05 + (-4)] - buffer[eOffset24 + (-4)];
					k01_216 = buffer[eOffset05 + (-5)] - buffer[eOffset24 + (-5)];
					var _g54 = eOffset05 + (-4);
					buffer[_g54] = buffer[_g54] + buffer[eOffset24 + (-4)];
					var _g55 = eOffset05 + (-5);
					buffer[_g55] = buffer[_g55] + buffer[eOffset24 + (-5)];
					buffer[eOffset24 + (-4)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					buffer[eOffset24 + (-5)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = buffer[eOffset05 + (-6)] - buffer[eOffset24 + (-6)];
					k01_216 = buffer[eOffset05 + (-7)] - buffer[eOffset24 + (-7)];
					var _g56 = eOffset05 + (-6);
					buffer[_g56] = buffer[_g56] + buffer[eOffset24 + (-6)];
					var _g57 = eOffset05 + (-7);
					buffer[_g57] = buffer[_g57] + buffer[eOffset24 + (-7)];
					buffer[eOffset24 + (-6)] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					buffer[eOffset24 + (-7)] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g210 = ld - 3 >> 1;
		var _g310 = ld - 6;
		while(_g210 < _g310) {
			var l1 = _g210++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = (n >> l1 + 6) + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i7 = lim1 + 1;
				while(--i7 > 0) {
					var k00 = buffer[eeOffset02] - buffer[eeOffset22];
					var k111 = buffer[eeOffset02 + (-1)] - buffer[eeOffset22 + (-1)];
					buffer[eeOffset02] = buffer[eeOffset02] + buffer[eeOffset22];
					buffer[eeOffset02 + (-1)] = buffer[eeOffset02 + (-1)] + buffer[eeOffset22 + (-1)];
					buffer[eeOffset22] = k00 * A0 - k111 * A1;
					buffer[eeOffset22 + (-1)] = k111 * A0 + k00 * A1;
					k00 = buffer[eeOffset02 + (-2)] - buffer[eeOffset22 + (-2)];
					k111 = buffer[eeOffset02 + (-3)] - buffer[eeOffset22 + (-3)];
					buffer[eeOffset02 + (-2)] = buffer[eeOffset02 + (-2)] + buffer[eeOffset22 + (-2)];
					buffer[eeOffset02 + (-3)] = buffer[eeOffset02 + (-3)] + buffer[eeOffset22 + (-3)];
					buffer[eeOffset22 + (-2)] = k00 * A2 - k111 * A3;
					buffer[eeOffset22 + (-3)] = k111 * A2 + k00 * A3;
					k00 = buffer[eeOffset02 + (-4)] - buffer[eeOffset22 + (-4)];
					k111 = buffer[eeOffset02 + (-5)] - buffer[eeOffset22 + (-5)];
					buffer[eeOffset02 + (-4)] = buffer[eeOffset02 + (-4)] + buffer[eeOffset22 + (-4)];
					buffer[eeOffset02 + (-5)] = buffer[eeOffset02 + (-5)] + buffer[eeOffset22 + (-5)];
					buffer[eeOffset22 + (-4)] = k00 * A4 - k111 * A5;
					buffer[eeOffset22 + (-5)] = k111 * A4 + k00 * A5;
					k00 = buffer[eeOffset02 + (-6)] - buffer[eeOffset22 + (-6)];
					k111 = buffer[eeOffset02 + (-7)] - buffer[eeOffset22 + (-7)];
					buffer[eeOffset02 + (-6)] = buffer[eeOffset02 + (-6)] + buffer[eeOffset22 + (-6)];
					buffer[eeOffset02 + (-7)] = buffer[eeOffset02 + (-7)] + buffer[eeOffset22 + (-7)];
					buffer[eeOffset22 + (-6)] = k00 * A6 - k111 * A7;
					buffer[eeOffset22 + (-7)] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = buffer[zOffset];
			var t1 = buffer[zOffset + (-8)];
			buffer[zOffset + (-8)] = t0 - t1;
			buffer[zOffset] = t0 + t1;
			t0 = buffer[zOffset + (-1)];
			t1 = buffer[zOffset + (-9)];
			buffer[zOffset + (-9)] = t0 - t1;
			buffer[zOffset + (-1)] = t0 + t1;
			t0 = buffer[zOffset + (-2)];
			t1 = buffer[zOffset + (-10)];
			var k001 = t0 - t1;
			buffer[zOffset + (-2)] = t0 + t1;
			t0 = buffer[zOffset + (-3)];
			t1 = buffer[zOffset + (-11)];
			var k112 = t0 - t1;
			buffer[zOffset + (-3)] = t0 + t1;
			buffer[zOffset + (-10)] = (k001 + k112) * A21;
			buffer[zOffset + (-11)] = (k112 - k001) * A21;
			t0 = buffer[zOffset + (-4)];
			t1 = buffer[zOffset + (-12)];
			k001 = t1 - t0;
			buffer[zOffset + (-4)] = t0 + t1;
			t0 = buffer[zOffset + (-5)];
			t1 = buffer[zOffset + (-13)];
			k112 = t0 - t1;
			buffer[zOffset + (-5)] = t0 + t1;
			buffer[zOffset + (-12)] = k112;
			buffer[zOffset + (-13)] = k001;
			t0 = buffer[zOffset + (-6)];
			t1 = buffer[zOffset + (-14)];
			k001 = t1 - t0;
			buffer[zOffset + (-6)] = t0 + t1;
			t0 = buffer[zOffset + (-7)];
			t1 = buffer[zOffset + (-15)];
			k112 = t0 - t1;
			buffer[zOffset + (-7)] = t0 + t1;
			buffer[zOffset + (-14)] = (k001 + k112) * A21;
			buffer[zOffset + (-15)] = (k001 - k112) * A21;
			var t01 = buffer[zOffset];
			var t11 = buffer[zOffset + (-4)];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = buffer[zOffset + (-2)];
			t11 = buffer[zOffset + (-6)];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			buffer[zOffset] = y0 + y2;
			buffer[zOffset + (-2)] = y0 - y2;
			var k33 = buffer[zOffset + (-3)] - buffer[zOffset + (-7)];
			buffer[zOffset + (-4)] = k002 + k33;
			buffer[zOffset + (-6)] = k002 - k33;
			t01 = buffer[zOffset + (-1)];
			t11 = buffer[zOffset + (-5)];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = buffer[zOffset + (-3)] + buffer[zOffset + (-7)];
			buffer[zOffset + (-1)] = y1 + y3;
			buffer[zOffset + (-3)] = y1 - y3;
			buffer[zOffset + (-5)] = k113 - k22;
			buffer[zOffset + (-7)] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = buffer[zOffset1];
			var t12 = buffer[zOffset1 + (-4)];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = buffer[zOffset1 + (-2)];
			t12 = buffer[zOffset1 + (-6)];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			buffer[zOffset1] = y01 + y21;
			buffer[zOffset1 + (-2)] = y01 - y21;
			var k331 = buffer[zOffset1 + (-3)] - buffer[zOffset1 + (-7)];
			buffer[zOffset1 + (-4)] = k003 + k331;
			buffer[zOffset1 + (-6)] = k003 - k331;
			t02 = buffer[zOffset1 + (-1)];
			t12 = buffer[zOffset1 + (-5)];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = buffer[zOffset1 + (-3)] + buffer[zOffset1 + (-7)];
			buffer[zOffset1 + (-1)] = y11 + y31;
			buffer[zOffset1 + (-3)] = y11 - y31;
			buffer[zOffset1 + (-5)] = k114 - k221;
			buffer[zOffset1 + (-7)] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			buf2[dOffset11 + 3] = buffer[k4];
			buf2[dOffset11 + 2] = buffer[k4 + 1];
			buf2[dOffset01 + 3] = buffer[k4 + 2];
			buf2[dOffset01 + 2] = buffer[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			buf2[dOffset11 + 1] = buffer[k4];
			buf2[dOffset11] = buffer[k4 + 1];
			buf2[dOffset01 + 1] = buffer[k4 + 2];
			buf2[dOffset01] = buffer[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = buf2[dOffset2] - buf2[eOffset3 + 2];
			var a11 = buf2[dOffset2 + 1] + buf2[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = buf2[dOffset2] + buf2[eOffset3 + 2];
			var b3 = buf2[dOffset2 + 1] - buf2[eOffset3 + 3];
			buf2[dOffset2] = b2 + b0;
			buf2[dOffset2 + 1] = b3 + b1;
			buf2[eOffset3 + 2] = b2 - b0;
			buf2[eOffset3 + 3] = b1 - b3;
			a02 = buf2[dOffset2 + 2] - buf2[eOffset3];
			a11 = buf2[dOffset2 + 3] + buf2[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = buf2[dOffset2 + 2] + buf2[eOffset3];
			b3 = buf2[dOffset2 + 3] - buf2[eOffset3 + 1];
			buf2[dOffset2 + 2] = b2 + b0;
			buf2[dOffset2 + 3] = b3 + b1;
			buf2[eOffset3] = b2 - b0;
			buf2[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		return this.decodePacketRest(result);
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n1;
		var prev;
		var next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = 0;
			n1 = this.header.blocksize0;
		}
		var windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	,decodePacketRest: function(r) {
		var m = this.header.modes[r.mode];
		var zeroChannel = new Array(256);
		var reallyZeroChannel = new Array(256);
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var step2Flag = new Array(256);
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g11 = g.partitions;
					while(_g2 < _g11) {
						var pclass = g.partitionClassList[_g2++];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g3 = 0;
						while(_g3 < cdim) {
							++_g3;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[1] = true;
					step2Flag[0] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g21 = 2;
					var _g31 = g.values;
					while(_g21 < _g31) {
						var j = _g21++;
						var low = naighbors[j][0];
						var high = naighbors[j][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var off = Math.abs(dy) * (xlist[j] - x0) / (xlist[high] - x0) | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j];
						var highroom = range - lowroom;
						if(val2 != 0) {
							step2Flag[high] = true;
							step2Flag[low] = true;
							step2Flag[j] = true;
							if(val2 >= (highroom < lowroom ? highroom * 2 : lowroom * 2)) {
								if(highroom > lowroom) {
									fy[j] = val2 - lowroom + lowroom;
								} else {
									fy[j] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j] = false;
							fy[j] = lowroom;
						}
					}
					var _g4 = 0;
					var _g5 = g.values;
					while(_g4 < _g5) {
						var j1 = _g4++;
						if(!step2Flag[j1]) {
							fy[j1] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g22 = 0;
		var _g32 = this.header.channel;
		while(_g22 < _g32) {
			var i3 = _g22++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g41 = 0;
		var _g51 = map.couplingSteps;
		while(_g41 < _g51) {
			var i4 = _g41++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				var index = map.chan[i4].magnitude;
				zeroChannel[map.chan[i4].angle] = false;
				zeroChannel[index] = false;
			}
		}
		var _g6 = 0;
		var _g7 = map.submaps;
		while(_g6 < _g7) {
			var i5 = _g6++;
			var residueBuffers = new Array(this.header.channel);
			var doNotDecode = new Array(256);
			var ch = 0;
			var _g61 = 0;
			var _g71 = this.header.channel;
			while(_g61 < _g71) {
				var j2 = _g61++;
				if(map.chan[j2].mux == i5) {
					if(zeroChannel[j2]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j2];
					}
					++ch;
				}
			}
			this.header.residueConfig[map.submapResidue[i5]].decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g8 = 0;
			while(_g8 < n21) {
				var j3 = _g8++;
				var a2;
				var m2;
				if(m1[j3] > 0) {
					if(a[j3] > 0) {
						m2 = m1[j3];
						a2 = m1[j3] - a[j3];
					} else {
						a2 = m1[j3];
						m2 = m1[j3] + a[j3];
					}
				} else if(a[j3] > 0) {
					m2 = m1[j3];
					a2 = m1[j3] + a[j3];
				} else {
					a2 = m1[j3];
					m2 = m1[j3] - a[j3];
				}
				m1[j3] = m2;
				a[j3] = a2;
			}
		}
		var _g81 = 0;
		var _g9 = this.header.channel;
		while(_g81 < _g9) {
			var i7 = _g81++;
			if(reallyZeroChannel[i7]) {
				var _g82 = 0;
				while(_g82 < n21) this.channelBuffers[i7][_g82++] = 0;
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g10 = 0;
		var _g111 = this.header.channel;
		while(_g10 < _g111) this.inverseMdct(this.channelBuffers[_g10++],n,m.blockflag);
		var _this2 = this.decodeState;
		while(_this2.bytesInSeg != 0 || !_this2.lastSeg && _this2.next() != 0) {
			_this2.bytesInSeg--;
			_this2.inputPosition += 1;
			_this2.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = "kha.audio2.ogg.vorbis.VorbisTools";
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	while(_g < n2) {
		var i = _g++;
		$window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	while(_g < n8) {
		var i = _g++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	while(_g < n4) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g2 = 0;
	while(_g2 < n8) {
		++_g2;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = new Array(32);
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i] = new Array(64);
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	output[x0] = output[x0] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y0];
	var _g2 = x0 + 1;
	var _g11 = x1;
	while(_g2 < _g11) {
		var i1 = _g2++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		output[i1] = output[i1] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = "kha.audio2.ogg.vorbis.data.Codebook";
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x1 = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var lengths = new Array(c.entries);
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			while(_g < n) lengths[currentEntry + _g++] = currentLength;
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g1 = 0;
		var _g11 = c.entries;
		while(_g1 < _g11) {
			var j = _g1++;
			if((c.sparse ? decodeState.readBits(1) : 1) != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g2 = 0;
		var _g12 = c.entries;
		while(_g2 < _g12) {
			var l = lengths[_g2++];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		c.codewords = new Array(c.entries);
	} else if(c.sortedEntries != 0) {
		c.codewordLengths = new Array(c.sortedEntries);
		c.codewords = new Array(c.entries);
		values = new Array(c.entries);
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		c.sortedValues = new Array(c.sortedEntries);
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2 = decodeState.readBits(32);
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		c.minimumValue = ((x2 & -2147483648) != 0 ? -mantissa : mantissa) * Math.pow(2,((x2 & 2145386496) >>> 21) - 788);
		var x3 = decodeState.readBits(32);
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		c.deltaValue = ((x3 & -2147483648) != 0 ? -mantissa1 : mantissa1) * Math.pow(2,((x3 & 2145386496) >>> 21) - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var mults = new Array(c.lookupValues);
		var _g3 = 0;
		var _g13 = c.lookupValues;
		while(_g3 < _g13) {
			var j1 = _g3++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j1] = q;
		}
		c.multiplicands = new Array(c.lookupValues);
		var _g21 = 0;
		var _g31 = c.lookupValues;
		while(_g21 < _g31) {
			var j2 = _g21++;
			c.multiplicands[j2] = mults[j2] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g22 = 1;
			var _g32 = c.lookupValues;
			while(_g22 < _g32) {
				var j3 = _g22++;
				c.multiplicands[j3] = c.multiplicands[j3 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	computeCodewords: function(len,n,values) {
		var available = new Array(32);
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		m = 1;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[0] = 0;
			this.codewordLengths[0] = len[k];
			values[0] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (res & -1431655766) >>> 1 | (res & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count] = huffCode;
				this.codewordLengths[count] = len[i];
				values[count] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = this.sortedEntries;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var _g3 = 0;
		var _g12 = this.sparse ? this.sortedEntries : this.entries;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		this.fastHuffman = new Array(1024);
		this.fastHuffman[0] = -1;
		var _g = 0;
		while(_g < 1024) this.fastHuffman[_g++] = -1;
		var _g2 = 0;
		var _g3 = this.sparse ? this.sortedEntries : this.entries;
		while(_g2 < _g3) {
			var i = _g2++;
			if(this.codewordLengths[i] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i;
					z += 1 << this.codewordLengths[i];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
				var _g2 = offset + _g++;
				output[_g2] = output[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g3 = 0;
			var _g11 = len;
			while(_g3 < _g11) {
				var i1 = _g3++;
				var val2 = multiplicands[z + i1] + last1;
				var _g4 = offset + i1;
				output[_g4] = output[_g4] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var _g5 = 0;
			var _g12 = len;
			while(_g5 < _g12) {
				var i2 = _g5++;
				var _g6 = offset + i2;
				output[_g6] = output[_g6] + multiplicands[z + i2];
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
				var _g2 = offset + _g++ * step;
				output[_g2] = output[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g3 = 0;
		var _g11 = len;
		while(_g3 < _g11) {
			var i1 = _g3++;
			var val2 = multiplicands[z + i1] + last;
			var _g4 = offset + i1 * step;
			output[_g4] = output[_g4] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						++_g;
						var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
						var _g2 = pInter;
						var _g11 = residueBuffers[cInter];
						_g11[_g2] = _g11[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g3 = 0;
					var _g12 = effective;
					while(_g3 < _g12) {
						++_g3;
						var _g4 = pInter;
						var _g13 = residueBuffers[cInter];
						_g13[_g4] = _g13[_g4] + multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g5 = 0;
					var _g14 = effective;
					while(_g5 < _g14) {
						var val2 = multiplicands[z + _g5++] + last;
						var _g6 = pInter;
						var _g15 = residueBuffers[cInter];
						_g15[_g6] = _g15[_g6] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val2;
					}
				} else {
					var _g7 = 0;
					var _g16 = effective;
					while(_g7 < _g16) {
						var _g8 = pInter;
						var _g17 = residueBuffers[cInter];
						_g17[_g8] = _g17[_g8] + multiplicands[z + _g7++];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			while(_g < step) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = "kha.audio2.ogg.vorbis.data.Comment";
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = "kha.audio2.ogg.vorbis.data.Floor";
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) g.bookList[_g++] = decodeState.readBits(8);
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g1.partitions = decodeState.readBits(5);
		g1.partitionClassList = new Array(g1.partitions);
		var _g2 = 0;
		var _g11 = g1.partitions;
		while(_g2 < _g11) {
			var j = _g2++;
			g1.partitionClassList[j] = decodeState.readBits(4);
			if(g1.partitionClassList[j] > maxClass) {
				maxClass = g1.partitionClassList[j];
			}
		}
		g1.classDimensions = new Array(maxClass + 1);
		g1.classMasterbooks = new Array(maxClass + 1);
		g1.classSubclasses = new Array(maxClass + 1);
		g1.subclassBooks = new Array(maxClass + 1);
		var _g21 = 0;
		var _g3 = maxClass + 1;
		while(_g21 < _g3) {
			var j1 = _g21++;
			g1.classDimensions[j1] = decodeState.readBits(3) + 1;
			g1.classSubclasses[j1] = decodeState.readBits(2);
			if(g1.classSubclasses[j1] != 0) {
				g1.classMasterbooks[j1] = decodeState.readBits(8);
				if(g1.classMasterbooks[j1] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j1];
			g1.subclassBooks[j1] = new Array(kl);
			var _g22 = 0;
			while(_g22 < kl) {
				var k = _g22++;
				g1.subclassBooks[j1][k] = decodeState.readBits(8) - 1;
				if(g1.subclassBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g1.floor1Multiplier = decodeState.readBits(2) + 1;
		g1.rangebits = decodeState.readBits(4);
		g1.xlist = new Array(250);
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g4 = 0;
		var _g5 = g1.partitions;
		while(_g4 < _g5) {
			var _g41 = 0;
			var _g51 = g1.classDimensions[g1.partitionClassList[_g4++]];
			while(_g41 < _g51) {
				++_g41;
				g1.xlist[g1.values] = decodeState.readBits(g1.rangebits);
				g1.values++;
			}
		}
		var _g6 = 0;
		var _g7 = g1.values;
		while(_g6 < _g7) {
			var j2 = _g6++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j2].x = g1.xlist[j2];
			p[j2].y = j2;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		g1.sortedOrder = new Array(g1.values);
		var _g8 = 0;
		var _g9 = g1.values;
		while(_g8 < _g9) {
			var j3 = _g8++;
			g1.sortedOrder[j3] = p[j3].y;
		}
		g1.neighbors = new Array(g1.values);
		var _g10 = 2;
		var _g111 = g1.values;
		while(_g10 < _g111) {
			var j4 = _g10++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g12 = 0;
			while(_g12 < j4) {
				var i = _g12++;
				if(x[i] > low && x[i] < x[j4]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j4]) {
					phigh = i;
					high = x[i];
				}
			}
			g1.neighbors[j4] = new Array(g1.values);
			g1.neighbors[j4][0] = plow;
			g1.neighbors[j4][1] = phigh;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = "kha.audio2.ogg.vorbis.data.Floor0";
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = "kha.audio2.ogg.vorbis.data.Floor1";
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = "kha.audio2.ogg.vorbis.data.Header";
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x1;
	var x2;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x2 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x2 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x2;
	var x3;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x3 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x3 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x3;
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x4;
	var x5;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x5 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x5 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x5;
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x6 = decodeState.input.readByte();
	var log0 = x6 & 15;
	var log1 = x6 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x7 = decodeState.input.readByte();
	if((x7 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	header1.vendor = packetInput.readString(packetInput.readInt32());
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	while(_g < commentCount) {
		++_g;
		var str = packetInput.readString(packetInput.readInt32());
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	if((packetInput.readByte() & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x8;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x8 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x8 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x8 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x9;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x9 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x9 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[0] = x9;
	var x10;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x10 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x10 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[1] = x10;
	var x11;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x11 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x11 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[2] = x11;
	var x12;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x12 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x12 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[3] = x12;
	var x13;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x13 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x13 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[4] = x13;
	var x14;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x14 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x14 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[5] = x14;
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	header1.codebooks = new Array(codebookCount);
	var _g1 = 0;
	while(_g1 < codebookCount) header1.codebooks[_g1++] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	x7 = decodeState.readBits(6) + 1;
	var _g2 = 0;
	var _g3 = x7;
	while(_g2 < _g3) {
		++_g2;
		if(decodeState.readBits(16) != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	header1.floorConfig = new Array(floorCount);
	var _g4 = 0;
	while(_g4 < floorCount) header1.floorConfig[_g4++] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	var residueCount = decodeState.readBits(6) + 1;
	header1.residueConfig = new Array(residueCount);
	var _g6 = 0;
	while(_g6 < residueCount) header1.residueConfig[_g6++] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	var mappingCount = decodeState.readBits(6) + 1;
	header1.mapping = new Array(mappingCount);
	var _g8 = 0;
	while(_g8 < mappingCount) {
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[_g8++] = map;
		var _g81 = 0;
		var _g9 = map.submaps;
		while(_g81 < _g9) {
			var j = _g81++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	header1.modes = new Array(modeCount);
	var _g10 = 0;
	while(_g10 < modeCount) {
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[_g10++] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = "kha.audio2.ogg.vorbis.data.IntPoint";
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = "kha.audio2.ogg.vorbis.data.Mapping";
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	m.chan = new Array(channels);
	var _g = 0;
	while(_g < channels) m.chan[_g++] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g2 = 0;
		var _g3 = m.couplingSteps;
		while(_g2 < _g3) {
			var k = _g2++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g21 = 0;
		while(_g21 < channels) {
			var j = _g21++;
			m.chan[j].mux = decodeState.readBits(4);
			if(m.chan[j].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g22 = 0;
		while(_g22 < channels) m.chan[_g22++].mux = 0;
	}
	m.submapFloor = new Array(m.submaps);
	m.submapResidue = new Array(m.submaps);
	var _g23 = 0;
	var _g31 = m.submaps;
	while(_g23 < _g31) {
		var j1 = _g23++;
		decodeState.readBits(8);
		m.submapFloor[j1] = decodeState.readBits(8);
		m.submapResidue[j1] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var floor = floors[this.submapFloor[this.chan[i].mux]];
		if(floor.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var j = g.sortedOrder[_g++];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g2 = lx;
				while(_g2 < n2) {
					var j1 = _g2++;
					target[j1] = target[j1] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = "kha.audio2.ogg.vorbis.data.MappingChannel";
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = "kha.audio2.ogg.vorbis.data.Mode";
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = "kha.audio2.ogg.vorbis.data.Page";
kha_audio2_ogg_vorbis_data_Page.prototype = {
	clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = "kha.audio2.ogg.vorbis.data.ProbedPage";
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = "kha.audio2.ogg.vorbis.data.ReaderError";
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = "kha.audio2.ogg.vorbis.data.Residue";
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var residueCascade = new Array(64);
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	r.residueBooks = new Array(r.classifications);
	var _g2 = 0;
	var _g3 = r.classifications;
	while(_g2 < _g3) {
		var j1 = _g2++;
		r.residueBooks[j1] = new Array(8);
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				r.residueBooks[j1][k] = decodeState.readBits(8);
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	r.classdata = new Array(el);
	var _g4 = 0;
	while(_g4 < el) {
		var j2 = _g4++;
		var temp = j2;
		var k1 = classwords;
		var cd = r.classdata[j2] = new Array(classwords);
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(this.end - this.begin) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var classifications = new Array(header.channel * partRead + 1);
		var _g = 0;
		while(_g < ch) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g1 = 0;
				var _g11 = buffer.length;
				while(_g1 < _g11) buffer[_g1++] = 0;
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g2 = 0;
			while(_g2 < ch) {
				var j = _g2++;
				if(!doNotDecode[j]) {
					break;
				} else if(j == ch - 1) {
					return;
				}
			}
			var _g4 = 0;
			while(_g4 < 8) {
				var pass = _g4++;
				var pcount = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g41 = 0;
						while(_g41 < classwords) {
							++_g41;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var b = this.residueBooks[classifications[pcount]][pass];
							if(b >= 0) {
								var result = codebooks[b].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var cInter1 = 0;
						var pInter1 = this.begin + pcount * partSize;
						if(pass == 0) {
							var c1 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i3 = c1.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i3 >= 0) {
								var l1 = c1.codewordLengths[i3];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i3;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c1);
							}
							if(c1.sparse) {
								val1 = c1.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i4 = classwords;
							while(--i4 >= 0) {
								classifications[i4 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g42 = 0;
						while(_g42 < classwords) {
							++_g42;
							if(pcount >= partRead) {
								break;
							}
							var z2 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var result1 = codebooks[b1].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z2 = z2 + partSize;
								cInter1 = 0;
								pInter1 = z2;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z3 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z3) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z3) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i5 = c2.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i5 >= 0) {
								var l2 = c2.codewordLengths[i5];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i5;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val2 = c2.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i6 = classwords;
							while(--i6 >= 0) {
								classifications[i6 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g43 = 0;
						while(_g43 < classwords) {
							++_g43;
							if(pcount >= partRead) {
								break;
							}
							var z4 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var result2 = codebooks[b2].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z4 = z4 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g21 = 0;
		while(_g21 < 8) {
			var pass1 = _g21++;
			var pcount1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g22 = 0;
					while(_g22 < ch) {
						var j1 = _g22++;
						if(!doNotDecode[j1]) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i7 >= 0) {
								var l3 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i7;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val3 = c3.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[j1 * partRead + i8 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g23 = 0;
				while(_g23 < classwords) {
					++_g23;
					if(pcount1 >= partRead) {
						break;
					}
					var _g24 = 0;
					while(_g24 < ch) {
						var j2 = _g24++;
						if(!doNotDecode[j2]) {
							var b3 = this.residueBooks[classifications[j2 * partRead + pcount1]][pass1];
							if(b3 >= 0) {
								if(!codebooks[b3].residueDecode(decodeState,residueBuffers[j2],this.begin + pcount1 * partSize,partSize,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = "kha.graphics1.Graphics";
kha_graphics1_Graphics.__isInterface__ = true;
var kha_graphics2_Graphics = function() {
	this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
	this.transformationIndex = 0;
	this.opacities = [1];
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = "kha.graphics2.Graphics";
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,set_imageScaleQuality: function(value) {
		return 1;
	}
	,set_mipmapScaleQuality: function(value) {
		return 1;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,setTransformation: function(transformation) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = "kha.graphics2.Graphics1";
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	__class__: kha_graphics2_Graphics1
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = "kha.graphics2.truetype.VectorOfIntPointer";
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = "kha.graphics2.truetype.Stbtt_temp_rect";
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics";
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_font_v_metrics";
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = "kha.graphics2.truetype.Stbtt_bakedchar";
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = "kha.graphics2.truetype.Stbtt_fontinfo";
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = "kha.graphics2.truetype.Stbtt_vertex";
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = "kha.graphics2.truetype.Stbtt__bitmap";
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = "kha.graphics2.truetype.Stbtt__edge";
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = "kha.graphics2.truetype.Stbtt__active_edge";
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = "kha.graphics2.truetype.Stbtt__point";
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = "kha.graphics2.truetype.StbTruetype";
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	if(pos == null) {
		pos = 0;
	}
	var num_tables = data.readU8(pos + 1) | data.readU8(pos) << 8;
	var tabledir = fontstart + 12;
	var _g = 0;
	while(_g < num_tables) {
		var loc = tabledir + 16 * _g++;
		if(data.readU8(loc) == HxOverrides.cca(tag,0) && data.readU8(loc + 1) == HxOverrides.cca(tag,1) && data.readU8(loc + 2) == HxOverrides.cca(tag,2) && data.readU8(loc + 3) == HxOverrides.cca(tag,3)) {
			var pos1 = loc + 8;
			if(pos1 == null) {
				pos1 = 0;
			}
			var pos2 = pos1;
			if(pos2 == null) {
				pos2 = 0;
			}
			return data.readU8(pos2 + 3) | data.readU8(pos2 + 2) << 8 | data.readU8(pos2 + 1) << 16 | data.readU8(pos2) << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		if(pos == null) {
			pos = 0;
		}
		info.numGlyphs = data.readU8(pos + 1) | data.readU8(pos) << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	if(pos1 == null) {
		pos1 = 0;
	}
	var numTables = data.readU8(pos1 + 1) | data.readU8(pos1) << 8;
	info.index_map = 0;
	var _g = 0;
	while(_g < numTables) {
		var encoding_record = cmap + 4 + 8 * _g++;
		var pos2 = encoding_record;
		if(encoding_record == null) {
			pos2 = 0;
		}
		switch(data.readU8(pos2 + 1) | data.readU8(pos2) << 8) {
		case 0:
			var pos3 = encoding_record + 4;
			if(pos3 == null) {
				pos3 = 0;
			}
			var pos4 = pos3;
			if(pos4 == null) {
				pos4 = 0;
			}
			info.index_map = cmap + (data.readU8(pos4 + 3) | data.readU8(pos4 + 2) << 8 | data.readU8(pos4 + 1) << 16 | data.readU8(pos4) << 24);
			break;
		case 3:
			var pos5 = encoding_record + 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			switch(data.readU8(pos5 + 1) | data.readU8(pos5) << 8) {
			case 1:case 10:
				var pos6 = encoding_record + 4;
				if(pos6 == null) {
					pos6 = 0;
				}
				var pos7 = pos6;
				if(pos7 == null) {
					pos7 = 0;
				}
				info.index_map = cmap + (data.readU8(pos7 + 3) | data.readU8(pos7 + 2) << 8 | data.readU8(pos7 + 1) << 16 | data.readU8(pos7) << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos8 = info.head + 50;
	if(pos8 == null) {
		pos8 = 0;
	}
	info.indexToLocFormat = data.readU8(pos8 + 1) | data.readU8(pos8) << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var pos = index_map;
	if(index_map == null) {
		pos = 0;
	}
	var format = data.readU8(pos + 1) | data.readU8(pos) << 8;
	if(format == 0) {
		var pos1 = index_map + 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		if(unicode_codepoint < (data.readU8(pos1 + 1) | data.readU8(pos1) << 8) - 6) {
			var pos2 = index_map + 6 + unicode_codepoint;
			if(pos2 == null) {
				pos2 = 0;
			}
			return data.readU8(pos2);
		}
		return 0;
	} else if(format == 6) {
		var pos3 = index_map + 6;
		if(pos3 == null) {
			pos3 = 0;
		}
		var first = data.readU8(pos3 + 1) | data.readU8(pos3) << 8;
		var pos4 = index_map + 8;
		if(pos4 == null) {
			pos4 = 0;
		}
		if(unicode_codepoint >= first && unicode_codepoint < first + (data.readU8(pos4 + 1) | data.readU8(pos4) << 8)) {
			var pos5 = index_map + 10 + (unicode_codepoint - first) * 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			return data.readU8(pos5 + 1) | data.readU8(pos5) << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos6 = index_map + 6;
		if(pos6 == null) {
			pos6 = 0;
		}
		var segcount = (data.readU8(pos6 + 1) | data.readU8(pos6) << 8) >> 1;
		var pos7 = index_map + 8;
		if(pos7 == null) {
			pos7 = 0;
		}
		var searchRange = (data.readU8(pos7 + 1) | data.readU8(pos7) << 8) >> 1;
		var pos8 = index_map + 10;
		if(pos8 == null) {
			pos8 = 0;
		}
		var entrySelector = data.readU8(pos8 + 1) | data.readU8(pos8) << 8;
		var pos9 = index_map + 12;
		if(pos9 == null) {
			pos9 = 0;
		}
		var rangeShift = (data.readU8(pos9 + 1) | data.readU8(pos9) << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos10 = endCount + rangeShift * 2;
		if(pos10 == null) {
			pos10 = 0;
		}
		if(unicode_codepoint >= (data.readU8(pos10 + 1) | data.readU8(pos10) << 8)) {
			search = endCount + rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos11 = search + searchRange * 2;
			if(pos11 == null) {
				pos11 = 0;
			}
			if(unicode_codepoint > (data.readU8(pos11 + 1) | data.readU8(pos11) << 8)) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1 & 65535;
		var pos12 = endCount + 2 * item;
		if(pos12 == null) {
			pos12 = 0;
		}
		if(unicode_codepoint > (data.readU8(pos12 + 1) | data.readU8(pos12) << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos13 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		if(pos13 == null) {
			pos13 = 0;
		}
		var start = data.readU8(pos13 + 1) | data.readU8(pos13) << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos14 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos14 == null) {
			pos14 = 0;
		}
		var offset = data.readU8(pos14 + 1) | data.readU8(pos14) << 8;
		if(offset == 0) {
			var pos15 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			if(pos15 == null) {
				pos15 = 0;
			}
			var n = data.readU8(pos15 + 1) | data.readU8(pos15) << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n) & 65535;
		}
		var pos16 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos16 == null) {
			pos16 = 0;
		}
		return data.readU8(pos16 + 1) | data.readU8(pos16) << 8;
	} else if(format == 12 || format == 13) {
		var pos17 = index_map + 12;
		if(pos17 == null) {
			pos17 = 0;
		}
		var pos18 = pos17;
		if(pos18 == null) {
			pos18 = 0;
		}
		var low = 0;
		var high = data.readU8(pos18 + 3) | data.readU8(pos18 + 2) << 8 | data.readU8(pos18 + 1) << 16 | data.readU8(pos18) << 24;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos19 = index_map + 16 + mid * 12;
			if(pos19 == null) {
				pos19 = 0;
			}
			var pos20 = pos19;
			if(pos20 == null) {
				pos20 = 0;
			}
			var start_char = data.readU8(pos20 + 3) | data.readU8(pos20 + 2) << 8 | data.readU8(pos20 + 1) << 16 | data.readU8(pos20) << 24;
			var pos21 = index_map + 16 + mid * 12 + 4;
			if(pos21 == null) {
				pos21 = 0;
			}
			var pos22 = pos21;
			if(pos22 == null) {
				pos22 = 0;
			}
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > (data.readU8(pos22 + 3) | data.readU8(pos22 + 2) << 8 | data.readU8(pos22 + 1) << 16 | data.readU8(pos22) << 24)) {
				low = mid + 1;
			} else {
				var pos23 = index_map + 16 + mid * 12 + 8;
				if(pos23 == null) {
					pos23 = 0;
				}
				var pos24 = pos23;
				if(pos24 == null) {
					pos24 = 0;
				}
				var start_glyph = data.readU8(pos24 + 3) | data.readU8(pos24 + 2) << 8 | data.readU8(pos24 + 1) << 16 | data.readU8(pos24) << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		if(pos == null) {
			pos = 0;
		}
		g1 = info.glyf + (p.readU8(pos + 1) | p.readU8(pos) << 8) * 2;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		g2 = info.glyf + (p1.readU8(pos1 + 1) | p1.readU8(pos1) << 8) * 2;
	} else {
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		if(pos2 == null) {
			pos2 = 0;
		}
		var pos3 = pos2;
		if(pos3 == null) {
			pos3 = 0;
		}
		g1 = info.glyf + (p2.readU8(pos3 + 3) | p2.readU8(pos3 + 2) << 8 | p2.readU8(pos3 + 1) << 16 | p2.readU8(pos3) << 24);
		var p3 = info.data;
		var pos4 = info.loca + glyph_index * 4 + 4;
		if(pos4 == null) {
			pos4 = 0;
		}
		var pos5 = pos4;
		if(pos5 == null) {
			pos5 = 0;
		}
		g2 = info.glyf + (p3.readU8(pos5 + 3) | p3.readU8(pos5 + 2) << 8 | p3.readU8(pos5 + 1) << 16 | p3.readU8(pos5) << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos + 1) | p.readU8(pos) << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	if(pos1 == null) {
		pos1 = 0;
	}
	var n1 = p1.readU8(pos1 + 1) | p1.readU8(pos1) << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	if(pos2 == null) {
		pos2 = 0;
	}
	var n2 = p2.readU8(pos2 + 1) | p2.readU8(pos2) << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	if(pos3 == null) {
		pos3 = 0;
	}
	var n3 = p3.readU8(pos3 + 1) | p3.readU8(pos3) << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g = 0;
	while(_g < count) {
		var i = _g++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var pos = g;
	if(g == null) {
		pos = 0;
	}
	var n = data.readU8(pos + 1) | data.readU8(pos) << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var endPtsOfContoursOffset = g + 10;
		var pos1 = endPtsOfContoursOffset + numberOfContours * 2;
		if(pos1 == null) {
			pos1 = 0;
		}
		var pointsIndex = endPtsOfContoursOffset + numberOfContours * 2 + 2 + (data.readU8(pos1 + 1) | data.readU8(pos1) << 8);
		var pos2 = endPtsOfContoursOffset + numberOfContours * 2 - 2;
		if(pos2 == null) {
			pos2 = 0;
		}
		var n1 = 1 + (data.readU8(pos2 + 1) | data.readU8(pos2) << 8);
		var m = n1 + 2 * numberOfContours;
		vertices = new Array(m);
		if(vertices == null) {
			return null;
		} else {
			var _g = 0;
			var _g1 = vertices.length;
			while(_g < _g1) vertices[_g++] = new kha_graphics2_truetype_Stbtt_$vertex();
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n1;
		var _g2 = 0;
		while(_g2 < n1) {
			var i = _g2++;
			if(flagcount == 0) {
				flags = data.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = data.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i].type = flags;
		}
		var x = 0;
		var _g21 = 0;
		while(_g21 < n1) {
			var i1 = _g21++;
			flags = vertices[off + i1].type;
			if((flags & 2) != 0) {
				var dx = data.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var n2 = data.readU8(pointsIndex + 1) | data.readU8(pointsIndex) << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i1].x = x;
		}
		var y = 0;
		var _g4 = 0;
		while(_g4 < n1) {
			var i2 = _g4++;
			flags = vertices[off + i2].type;
			if((flags & 4) != 0) {
				var dy = data.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var n3 = data.readU8(pointsIndex + 1) | data.readU8(pointsIndex) << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i2].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = 0;
		var cy = 0;
		var cx = 0;
		var sy = 0;
		var sx = 0;
		var i3 = 0;
		while(i3 < n1) {
			flags = vertices[off + i3].type;
			x = vertices[off + i3].x;
			y = vertices[off + i3].y;
			if(next_move == i3) {
				if(i3 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i3 + 1].type & 1) == 0) {
						sx = x + vertices[off + i3 + 1].x >> 1;
						sy = y + vertices[off + i3 + 1].y >> 1;
					} else {
						sx = vertices[off + i3 + 1].x;
						sy = vertices[off + i3 + 1].y;
						++i3;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos3 = endPtsOfContoursOffset + j * 2;
				if(pos3 == null) {
					pos3 = 0;
				}
				next_move = 1 + (data.readU8(pos3 + 1) | data.readU8(pos3) << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i3;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var compIndex = g + 10;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var pos4 = compIndex;
			if(pos4 == null) {
				pos4 = 0;
			}
			var n4 = data.readU8(pos4 + 1) | data.readU8(pos4) << 8;
			var flags1 = (n4 & 32768) != 0 ? n4 - 65536 : n4;
			var pos5 = compIndex += 2;
			if(pos5 == null) {
				pos5 = 0;
			}
			var n5 = data.readU8(pos5 + 1) | data.readU8(pos5) << 8;
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var pos6 = compIndex;
					if(pos6 == null) {
						pos6 = 0;
					}
					var n6 = data.readU8(pos6 + 1) | data.readU8(pos6) << 8;
					mtx4 = (n6 & 32768) != 0 ? n6 - 65536 : n6;
					var pos7 = compIndex += 2;
					if(pos7 == null) {
						pos7 = 0;
					}
					var n7 = data.readU8(pos7 + 1) | data.readU8(pos7) << 8;
					mtx5 = (n7 & 32768) != 0 ? n7 - 65536 : n7;
					compIndex += 2;
				} else {
					var pos8 = compIndex;
					if(pos8 == null) {
						pos8 = 0;
					}
					var n8 = data.readU8(pos8);
					mtx4 = n8 >= 128 ? n8 - 256 : n8;
					var pos9 = ++compIndex;
					if(pos9 == null) {
						pos9 = 0;
					}
					var n9 = data.readU8(pos9);
					mtx5 = n9 >= 128 ? n9 - 256 : n9;
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var pos10 = compIndex;
				if(pos10 == null) {
					pos10 = 0;
				}
				var n10 = data.readU8(pos10 + 1) | data.readU8(pos10) << 8;
				mtx3 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var pos11 = compIndex;
				if(pos11 == null) {
					pos11 = 0;
				}
				var n11 = data.readU8(pos11 + 1) | data.readU8(pos11) << 8;
				mtx0 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var pos12 = compIndex;
				if(pos12 == null) {
					pos12 = 0;
				}
				var n12 = data.readU8(pos12 + 1) | data.readU8(pos12) << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var pos13 = compIndex;
				if(pos13 == null) {
					pos13 = 0;
				}
				var n13 = data.readU8(pos13 + 1) | data.readU8(pos13) << 8;
				mtx0 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				var pos14 = compIndex += 2;
				if(pos14 == null) {
					pos14 = 0;
				}
				var n14 = data.readU8(pos14 + 1) | data.readU8(pos14) << 8;
				mtx1 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				var pos15 = compIndex += 2;
				if(pos15 == null) {
					pos15 = 0;
				}
				var n15 = data.readU8(pos15 + 1) | data.readU8(pos15) << 8;
				mtx2 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				var pos16 = compIndex += 2;
				if(pos16 == null) {
					pos16 = 0;
				}
				var n16 = data.readU8(pos16 + 1) | data.readU8(pos16) << 8;
				mtx3 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
			}
			var m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n17 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,(n5 & 32768) != 0 ? n5 - 65536 : n5);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g3 = 0;
				var _g11 = comp_num_verts;
				while(_g3 < _g11) {
					var v = comp_verts[_g3++];
					var x1 = v.x;
					var y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				tmp = new Array(num_vertices + comp_num_verts);
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var tmp1 = new Array(num_vertices);
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	if(pos == null) {
		pos = 0;
	}
	var numOfLongHorMetrics = p.readU8(pos + 1) | p.readU8(pos) << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		if(pos1 == null) {
			pos1 = 0;
		}
		var n = p1.readU8(pos1 + 1) | p1.readU8(pos1) << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		if(pos2 == null) {
			pos2 = 0;
		}
		var n1 = p2.readU8(pos2 + 1) | p2.readU8(pos2) << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		if(pos3 == null) {
			pos3 = 0;
		}
		var n2 = p3.readU8(pos3 + 1) | p3.readU8(pos3) << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		if(pos4 == null) {
			pos4 = 0;
		}
		var n3 = p4.readU8(pos4 + 1) | p4.readU8(pos4) << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos + 1) | p.readU8(pos) << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	if(pos1 == null) {
		pos1 = 0;
	}
	var n1 = p1.readU8(pos1 + 1) | p1.readU8(pos1) << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	if(pos2 == null) {
		pos2 = 0;
	}
	var n2 = p2.readU8(pos2 + 1) | p2.readU8(pos2) << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos + 1) | p.readU8(pos) << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	if(pos1 == null) {
		pos1 = 0;
	}
	var n1 = p1.readU8(pos1 + 1) | p1.readU8(pos1) << 8;
	return height / (((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var y0 = rect.y0;
		rect.x0 = Math.floor(rect.x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-rect.y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(rect.x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		scanline[_g] = scanline[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g1 = scanlineIndex + x;
		scanline[_g1] = scanline[_g1] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					scanline[x] = scanline[x] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g = scanline_fillIndex + x;
					scanline_fill[_g] = scanline_fill[_g] + e.direction * height;
				} else {
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x1 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x1 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					scanline[x1] = scanline[x1] + area * (1 - (x_top - x1 + (x1 + 1 - x1)) / 2);
					var step = sign * dy;
					var _g1 = x1 + 1;
					while(_g1 < x2) {
						var x3 = _g1++;
						scanline[x3] = scanline[x3] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x1 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					scanline[x2] = scanline[x2] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g2 = scanline_fillIndex + x2;
					scanline_fill[_g2] = scanline_fill[_g2] + sign * (sy1 - sy0);
				}
			} else {
				var _g3 = 0;
				while(_g3 < len) {
					var x4 = _g3++;
					var x11 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y1 = (x4 - x01) / dx + y_top;
					var y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x11 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else if(x31 < x11 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x01 < x11 && x31 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x31 < x11 && x01 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x31,y_bottom);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		scanline = new Array(result.w * 2 + 1);
	} else {
		scanline = new Array(129);
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g = 0;
		var _g1 = result.w;
		while(_g < _g1) scanline[_g++] = 0;
		var _g2 = 0;
		var _g3 = result.w + 1;
		while(_g2 < _g3) scanline2[scanline2Index + _g2++] = 0;
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g4 = 0;
		var _g5 = result.w;
		while(_g4 < _g5) {
			var i = _g4++;
			sum += scanline2[scanline2Index + i];
			var k = scanline[i] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var j;
	var _g = 1;
	while(_g < n) {
		var i = _g++;
		var t = p[i];
		j = i;
		while(j > 0) {
			if(!kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(t,p[j - 1])) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]) != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var j;
	var n = 0;
	var _g = 0;
	while(_g < windings) n += wcount[_g++];
	var e = new Array(n + 1);
	if(e == null) {
		return;
	} else {
		var _g2 = 0;
		var _g3 = e.length;
		while(_g2 < _g3) e[_g2++] = new kha_graphics2_truetype_Stbtt_$_$edge();
	}
	n = 0;
	var m = 0;
	var _g21 = 0;
	while(_g21 < windings) {
		var i = _g21++;
		var pIndex = m;
		m += wcount[i];
		j = wcount[i] - 1;
		var _g22 = 0;
		var _g31 = wcount[i];
		while(_g22 < _g31) {
			var k = _g22++;
			var a = k;
			var b = j;
			if(pts[pIndex + j].y == pts[pIndex + k].y) {
				j = k;
				continue;
			}
			e[n].invert = false;
			if(invert ? pts[pIndex + j].y > pts[pIndex + k].y : pts[pIndex + j].y < pts[pIndex + k].y) {
				e[n].invert = true;
				a = j;
				b = k;
			}
			e[n].x0 = pts[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = pts[pIndex + a].y * y_scale_inv + shift_y;
			e[n].x1 = pts[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = pts[pIndex + b].y * y_scale_inv + shift_y;
			++n;
			j = k;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,1,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var n = 0;
	var start = 0;
	var _g = 0;
	while(_g < num_verts) if(vertices[_g++].type == 1) {
		++n;
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	contour_lengths.value = new Array(n);
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var x = 0;
		var y = 0;
		if(_g2++ == 1) {
			points = new Array(num_points);
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g3 = points.length;
				while(_g21 < _g3) points[_g21++] = new kha_graphics2_truetype_Stbtt_$_$point();
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		while(_g22 < num_verts) {
			var i = _g22++;
			switch(vertices[i].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i].x;
				y = vertices[i].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i].x;
				y = vertices[i].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i].cx,vertices[i].cy,vertices[i].x,vertices[i].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i].x;
				y = vertices[i].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : 0};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / (scale_x > scale_y ? scale_y : scale_x),winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var y = 1;
	var x = 1;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i = 0;
	var _g = 0;
	while(_g < chars.length) {
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,chars[_g++]);
		var advance = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g).advanceWidth;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var gw = rect.x1 - x0;
		var gh = rect.y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		chardata[i].x0 = x;
		chardata[i].y0 = y;
		chardata[i].x1 = x + gw;
		chardata[i].y1 = y + gh;
		chardata[i].xadvance = scale * advance;
		chardata[i].xoff = x0;
		chardata[i].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i;
	}
	var _g1 = 0;
	var _g2 = pw * ph;
	while(_g1 < _g2) pixels.writeU8(_g1++,0);
	i = 0;
	var ch;
	var _g3 = 0;
	while(_g3 < chars.length) {
		var g1 = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,chars[_g3++]);
		ch = chardata[i];
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,ch.x0 + ch.y0 * pw,ch.x1 - ch.x0,ch.y1 - ch.y0,pw,scale,scale,g1);
		++i;
	}
	return bottom_y;
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = "kha.graphics4.ConstantLocation";
kha_graphics4_ConstantLocation.__isInterface__ = true;
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = "kha.graphics4.CubeMap";
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.prototype = {
	createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) this.sources.push(sources[_g++].toString());
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = "kha.graphics4.FragmentShader";
kha_graphics4_FragmentShader.prototype = {
	__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = "kha.graphics4.GeometryShader";
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = "kha.graphics4.Graphics";
kha_graphics4_Graphics.__isInterface__ = true;
kha_graphics4_Graphics.prototype = {
	__class__: kha_graphics4_Graphics
};
var kha_graphics4_PipelineCache = function(pipeline,texture) {
	this.pipeline = pipeline;
	try {
		this.projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	} catch( x ) {
		haxe_Log.trace(((x) instanceof js__$Boot_HaxeError) ? x.val : x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 39, className : "kha.graphics4.PipelineCache", methodName : "new"});
	}
	if(texture) {
		try {
			this.textureLocation = pipeline.getTextureUnit("tex");
		} catch( x1 ) {
			haxe_Log.trace(((x1) instanceof js__$Boot_HaxeError) ? x1.val : x1,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 41, className : "kha.graphics4.PipelineCache", methodName : "new"});
		}
	}
};
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = "kha.graphics4.PipelineCache";
kha_graphics4_PipelineCache.prototype = {
	__class__: kha_graphics4_PipelineCache
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = "kha.graphics4.ImageShaderPainter";
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PipelineCache(pipeline,true);
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ImageShaderPainter.standardImagePipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function() {
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ImageShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ImageShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setBilinearMipmapFilter: function(bilinear) {
		this.end();
		this.bilinearMipmaps = bilinear;
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = "kha.graphics4.ColoredShaderPainter";
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PipelineCache(pipeline,false);
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ColoredShaderPainter.standardColorPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(3000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(3000,0);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g1 = 0;
			while(_g1 < 1000) {
				var i1 = _g1++;
				triIndices[i1 * 3] = i1 * 3;
				triIndices[i1 * 3 + 1] = i1 * 3 + 1;
				triIndices[i1 * 3 + 2] = i1 * 3 + 2;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 7] = topleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 8] = toplefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 14] = toprightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 15] = toprighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 16] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 21] = bottomrightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 22] = bottomrighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 20] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 24] = r;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 25] = g;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 26] = b;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex] = x1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 1] = y1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 7] = x2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 8] = y2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 14] = x3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 15] = y3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 3] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 4] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 5] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 10] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 11] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 12] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 17] = r;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 18] = g;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 19] = b;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 1000) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 1000) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = "kha.graphics4.TextShaderPainter";
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		pipeline.compile();
		kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PipelineCache(pipeline,true);
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_TextShaderPainter.standardTextPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock(kha_graphics4_TextShaderPainter.bufferIndex * 4);
		this.g.setPipeline(this.myPipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setMatrix(this.myPipeline.projectionLocation,this.projectionMatrix);
		this.g.setTexture(this.myPipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setTextureParameters(this.myPipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.myPipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var _g = 0;
		var _g1 = text.length;
		while(_g < _g1) {
			var charCode = text.charCodeAt(_g++);
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(charCode),xpos,y);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x1 = q.x0;
				var y1 = q.y1;
				if(y1 == null) {
					y1 = 0;
				}
				if(x1 == null) {
					x1 = 0;
				}
				var value_x = x1;
				var value_y = y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x2 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y2 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var x3 = x2;
				var y3 = y2;
				if(y2 == null) {
					y3 = 0;
				}
				if(x2 == null) {
					x3 = 0;
				}
				var x4 = q.x0;
				var y4 = q.y0;
				if(y4 == null) {
					y4 = 0;
				}
				if(x4 == null) {
					x4 = 0;
				}
				var value_x1 = x4;
				var value_y1 = y4;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x5 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y5 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var x6 = x5;
				var y6 = y5;
				if(y5 == null) {
					y6 = 0;
				}
				if(x5 == null) {
					x6 = 0;
				}
				var x7 = q.x1;
				var y7 = q.y0;
				if(y7 == null) {
					y7 = 0;
				}
				if(x7 == null) {
					x7 = 0;
				}
				var value_x2 = x7;
				var value_y2 = y7;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x8 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y8 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var x9 = x8;
				var y9 = y8;
				if(y8 == null) {
					y9 = 0;
				}
				if(x8 == null) {
					x9 = 0;
				}
				var x10 = q.x1;
				var y10 = q.y1;
				if(y10 == null) {
					y10 = 0;
				}
				if(x10 == null) {
					x10 = 0;
				}
				var value_x3 = x10;
				var value_y3 = y10;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x11 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y11 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var x12 = x11;
				var y12 = y11;
				if(y11 == null) {
					y12 = 0;
				}
				if(x11 == null) {
					x12 = 0;
				}
				this.setRectVertices(x3,y3,x6,y6,x9,y9,x12,y12);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.lastPipeline = null;
	this.pipelineCache = new haxe_ds_ObjectMap();
	this.myMipmapScaleQuality = 0;
	this.myImageScaleQuality = 0;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = "kha.graphics4.Graphics2";
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 3;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 3;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			_this._00 = 2 / width;
			_this._10 = 0;
			_this._20 = 0;
			_this._30 = -width / width;
			_this._01 = 0;
			_this._11 = 2.0 / (0 - height);
			_this._21 = 0;
			_this._31 = -height / (0 - height);
			_this._02 = 0;
			_this._12 = 0;
			_this._22 = -0.002000200020002;
			_this._32 = -1.0002000200020003;
			_this._03 = 0;
			_this._13 = 0;
			_this._23 = 0;
			_this._33 = 1;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(kha_Image.renderTargetsInvertedY()) {
				var _this1 = this.projectionMatrix;
				_this1._00 = 2 / width;
				_this1._10 = 0;
				_this1._20 = 0;
				_this1._30 = -width / width;
				_this1._01 = 0;
				_this1._11 = 2.0 / height;
				_this1._21 = 0;
				_this1._31 = -height / height;
				_this1._02 = 0;
				_this1._12 = 0;
				_this1._22 = -0.002000200020002;
				_this1._32 = -1.0002000200020003;
				_this1._03 = 0;
				_this1._13 = 0;
				_this1._23 = 0;
				_this1._33 = 1;
			} else {
				var _this2 = this.projectionMatrix;
				_this2._00 = 2 / width;
				_this2._10 = 0;
				_this2._20 = 0;
				_this2._30 = -width / width;
				_this2._01 = 0;
				_this2._11 = 2.0 / (0 - height);
				_this2._21 = 0;
				_this2._31 = -height / (0 - height);
				_this2._02 = 0;
				_this2._12 = 0;
				_this2._22 = -0.002000200020002;
				_this2._32 = -1.0002000200020003;
				_this2._03 = 0;
				_this2._13 = 0;
				_this2._23 = 0;
				_this2._33 = 1;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformationIndex];
		var x = dx;
		var y = dy + dh;
		if(y == null) {
			y = 0;
		}
		if(dx == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var _this2 = this.transformations[this.transformationIndex];
		var x3 = dx;
		var y3 = dy;
		if(dy == null) {
			y3 = 0;
		}
		if(dx == null) {
			x3 = 0;
		}
		var value_x1 = x3;
		var value_y1 = y3;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x4 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y4 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var x5 = x4;
		var y5 = y4;
		if(y4 == null) {
			y5 = 0;
		}
		if(x4 == null) {
			x5 = 0;
		}
		var _this3 = this.transformations[this.transformationIndex];
		var x6 = dx + dw;
		var y6 = dy;
		if(dy == null) {
			y6 = 0;
		}
		if(x6 == null) {
			x6 = 0;
		}
		var value_x2 = x6;
		var value_y2 = y6;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x7 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y7 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var x8 = x7;
		var y8 = y7;
		if(y7 == null) {
			y8 = 0;
		}
		if(x7 == null) {
			x8 = 0;
		}
		var _this4 = this.transformations[this.transformationIndex];
		var x9 = dx + dw;
		var y9 = dy + dh;
		if(y9 == null) {
			y9 = 0;
		}
		if(x9 == null) {
			x9 = 0;
		}
		var value_x3 = x9;
		var value_y3 = y9;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x10 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y10 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var x11 = x10;
		var y11 = y10;
		if(y10 == null) {
			y11 = 0;
		}
		if(x10 == null) {
			x11 = 0;
		}
		var opacity = this.get_opacity();
		var color = this.get_color();
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && img != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.imagePainter.drawBuffer();
		}
		var left = sx / img.get_realWidth();
		var top = sy / img.get_realHeight();
		var right = (sx + sw) / img.get_realWidth();
		var bottom = (sy + sh) / img.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = x2;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = y2;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = x5;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = y5;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = x8;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = y8;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = x11;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = y11;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = img;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x2 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y2 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x2;
		var y3 = y2;
		if(y2 == null) {
			y3 = 0;
		}
		if(x2 == null) {
			x3 = 0;
		}
		var _this1 = this.transformations[this.transformationIndex];
		var x4 = x;
		var y4 = y;
		if(y == null) {
			y4 = 0;
		}
		if(x == null) {
			x4 = 0;
		}
		var value_x1 = x4;
		var value_y1 = y4;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x5 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y5 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var x6 = x5;
		var y6 = y5;
		if(y5 == null) {
			y6 = 0;
		}
		if(x5 == null) {
			x6 = 0;
		}
		var _this2 = this.transformations[this.transformationIndex];
		var x7 = x + width;
		var y7 = y;
		if(y == null) {
			y7 = 0;
		}
		if(x7 == null) {
			x7 = 0;
		}
		var value_x2 = x7;
		var value_y2 = y7;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x8 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y8 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var x9 = x8;
		var y9 = y8;
		if(y8 == null) {
			y9 = 0;
		}
		if(x8 == null) {
			x9 = 0;
		}
		var _this3 = this.transformations[this.transformationIndex];
		var x10 = x + width;
		var y10 = y + height;
		if(y10 == null) {
			y10 = 0;
		}
		if(x10 == null) {
			x10 = 0;
		}
		var value_x3 = x10;
		var value_y3 = y10;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x11 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y11 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var x12 = x11;
		var y12 = y11;
		if(y11 == null) {
			y12 = 0;
		}
		if(x11 == null) {
			x12 = 0;
		}
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),x3,y3,x6,y6,x9,y9,x12,y12);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x = x1;
		var y = y1;
		if(y1 == null) {
			y = 0;
		}
		if(x1 == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x4 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y4 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x5 = x4;
		var y5 = y4;
		if(y4 == null) {
			y5 = 0;
		}
		if(x4 == null) {
			x5 = 0;
		}
		var _this1 = this.transformations[this.transformationIndex];
		var x6 = x2;
		var y6 = y2;
		if(y2 == null) {
			y6 = 0;
		}
		if(x2 == null) {
			x6 = 0;
		}
		var value_x1 = x6;
		var value_y1 = y6;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x7 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y7 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var x8 = x7;
		var y8 = y7;
		if(y7 == null) {
			y8 = 0;
		}
		if(x7 == null) {
			x8 = 0;
		}
		var _this2 = this.transformations[this.transformationIndex];
		var x9 = x3;
		var y9 = y3;
		if(y3 == null) {
			y9 = 0;
		}
		if(x3 == null) {
			x9 = 0;
		}
		var value_x2 = x9;
		var value_y2 = y9;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x10 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y10 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var x11 = x10;
		var y11 = y10;
		if(y10 == null) {
			y11 = 0;
		}
		if(x10 == null) {
			x11 = 0;
		}
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),x5,y5,x8,y8,x11,y11);
	}
	,set_imageScaleQuality: function(value) {
		if(value == this.myImageScaleQuality) {
			return value;
		}
		this.imagePainter.setBilinearFilter(value == 1);
		this.textPainter.setBilinearFilter(value == 1);
		return this.myImageScaleQuality = value;
	}
	,set_mipmapScaleQuality: function(value) {
		this.imagePainter.setBilinearMipmapFilter(value == 1);
		return this.myMipmapScaleQuality = value;
	}
	,setPipeline: function(pipeline) {
		if(pipeline == this.lastPipeline) {
			return;
		}
		this.lastPipeline = pipeline;
		this.flush();
		if(pipeline == null) {
			this.imagePainter.set_pipeline(null);
			this.coloredPainter.set_pipeline(null);
			this.textPainter.set_pipeline(null);
		} else {
			var cache = this.pipelineCache.h[pipeline.__id__];
			if(cache == null) {
				cache = new kha_graphics4_PipelineCache(pipeline,true);
				this.pipelineCache.set(pipeline,cache);
			}
			this.imagePainter.set_pipeline(cache);
			this.coloredPainter.set_pipeline(cache);
			this.textPainter.set_pipeline(cache);
		}
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw new js__$Boot_HaxeError("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw new js__$Boot_HaxeError("Begin before you end");
		}
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = new Uint32Array(indexCount);
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = "kha.graphics4.IndexBuffer";
kha_graphics4_IndexBuffer.prototype = {
	'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return this._data.subarray(this.lockStart,this.lockEnd);
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var data = this._data.subarray(this.lockStart,this.lockEnd);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(data) : data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == 1 ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = 2;
	this.depthWrite = false;
	this.depthMode = 0;
	this.stencilMode = 0;
	this.stencilBothPass = 0;
	this.stencilDepthFail = 0;
	this.stencilFail = 0;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = 1;
	this.blendDestination = 2;
	this.blendOperation = 0;
	this.alphaBlendSource = 1;
	this.alphaBlendDestination = 2;
	this.alphaBlendOperation = 0;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = "kha.graphics4.PipelineStateBase";
kha_graphics4_PipelineStateBase.prototype = {
	__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = "kha.graphics4.PipelineState";
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g11 = _g1[_g++].elements;
			while(_g2 < _g11.length) {
				var element = _g11[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highpSupported = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338).precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 92, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		while(_g < count) {
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,_g++);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 111, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__ : true, __constructs__ : ["Dynamic","Static"]
	,Dynamic: {_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = "kha.graphics4.TessellationControlShader";
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = "kha.graphics4.TessellationEvaluationShader";
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = "kha.graphics4.TextureUnit";
kha_graphics4_TextureUnit.__isInterface__ = true;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) switch(_g1[_g++].data) {
	case 0:
		this.myStride += 4;
		break;
	case 1:
		this.myStride += 8;
		break;
	case 2:
		this.myStride += 12;
		break;
	case 3:
		this.myStride += 16;
		break;
	case 4:
		this.myStride += 64;
		break;
	case 5:
		this.myStride += 4;
		break;
	case 6:
		this.myStride += 8;
		break;
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this.sizes = [];
	this.offsets = [];
	this.types = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	this.types[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g2 = 0;
	var _g3 = structure.elements;
	while(_g2 < _g3.length) {
		var element = _g3[_g2];
		++_g2;
		var size;
		var type;
		switch(element.data) {
		case 0:
			size = 1;
			type = 5126;
			break;
		case 1:
			size = 2;
			type = 5126;
			break;
		case 2:
			size = 3;
			type = 5126;
			break;
		case 3:
			size = 4;
			type = 5126;
			break;
		case 4:
			size = 16;
			type = 5126;
			break;
		case 5:
			size = 2;
			type = 5122;
			break;
		case 6:
			size = 4;
			type = 5122;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		this.types[index] = type;
		switch(element.data) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		case 5:
			offset += 4;
			break;
		case 6:
			offset += 8;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = "kha.graphics4.VertexBuffer";
kha_graphics4_VertexBuffer.prototype = {
	'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return this._data.subarray(this.lockStart * this.stride(),this.lockEnd * this.stride());
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data.subarray(this.lockStart * this.stride(),this.lockEnd * this.stride()),this.usage == 1 ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				var normalized = this.types[i] == 5126 ? false : true;
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],this.types[i],normalized,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = "kha.graphics4.VertexElement";
kha_graphics4_VertexElement.prototype = {
	__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) this.sources.push(sources[_g++].toString());
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = "kha.graphics4.VertexShader";
kha_graphics4_VertexShader.prototype = {
	__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = "kha.graphics4.VertexStructure";
kha_graphics4_VertexStructure.prototype = {
	add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = "kha.input.Gamepad";
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) _g1[_g++](index);
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) _g1[_g++](index);
};
kha_input_Gamepad.prototype = {
	notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,get_vendor: function() {
		return kha_SystemImpl.getGamepadVendor(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) _g1[_g++](axis,value);
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) _g1[_g++](button,value);
	}
	,__class__: kha_input_Gamepad
};
var kha_input_BlockInterventions = $hxEnums["kha.input.BlockInterventions"] = { __ename__ : true, __constructs__ : ["Default","Full","None","Custom"]
	,Default: {_hx_index:0,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Full: {_hx_index:1,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,None: {_hx_index:2,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:3,func:func,__enum__:"kha.input.BlockInterventions",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_netsync_Controller = function() {
	this.__id = kha_netsync_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = "kha.netsync.Controller";
kha_netsync_Controller.prototype = {
	_id: function() {
		return this.__id;
	}
	,__class__: kha_netsync_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_netsync_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = "kha.input.Keyboard";
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.disableSystemInterventions = function(behavior) {
	kha_input_Keyboard.keyBehavior = behavior;
};
kha_input_Keyboard.__super__ = kha_netsync_Controller;
kha_input_Keyboard.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,sendDownEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) _g1[_g++](code);
	}
	,sendUpEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) _g1[_g++](code);
	}
	,sendPressEvent: function(char) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) _g1[_g++](char);
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendDownEvent(bytes.b[4]);
			return;
		}
		if(funcindex == 1) {
			this.sendUpEvent(bytes.b[4]);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			this.sendPressEvent(String.fromCodePoint(code));
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_MouseEventBlockBehavior = $hxEnums["kha.input.MouseEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_netsync_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = "kha.input.Mouse";
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.setWheelEventBlockBehavior = function(behavior) {
	kha_input_Mouse.wheelEventBlockBehavior = behavior;
};
kha_input_Mouse.__super__ = kha_netsync_Controller;
kha_input_Mouse.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 130, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 134, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 144, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 148, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 158, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 162, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 172, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 176, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 186, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 190, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,sendLeaveEvent: function(windowId) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) _g1[_g++]();
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) _g1[_g++](button,x,y);
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) _g1[_g++](button,x,y);
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) _g1[_g++](x,y,movementX,movementY);
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) _g1[_g++](delta);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendLeaveEvent(bytes.getInt32(4));
			return;
		}
		if(funcindex == 1) {
			this.sendDownEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 2) {
			this.sendUpEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 3) {
			this.sendMoveEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16),bytes.getInt32(20));
			return;
		}
		if(funcindex == 4) {
			this.sendWheelEvent(bytes.getInt32(4),bytes.getInt32(8));
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = "kha.input.MouseImpl";
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_TouchDownEventBlockBehavior = $hxEnums["kha.input.TouchDownEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = "kha.input.Surface";
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.setTouchDownEventBlockBehavior = function(behavior) {
	kha_input_Surface.touchDownEventBlockBehavior = behavior;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			HxOverrides.remove(this.moveListeners,moveListener);
		}
	}
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = "kha.internal.BytesBlob";
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.prototype = {
	get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value;
	}
	,readU8: function(position) {
		return this.bytes.b[position++];
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = "kha.internal.HdrFormat";
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var rgbe = new Uint8Array(4);
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var buf = new Uint8Array(2);
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0];
			data[offset++] = rgbe[1];
			data[offset++] = rgbe[2];
			data[offset++] = rgbe[3];
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			scanline_buffer = new Uint8Array(4 * scanline_width);
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			ptr_end = (_g++ + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1];
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1];
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		while(_g1 < scanline_width) {
			var i = _g1++;
			data[offset] = scanline_buffer[i];
			data[offset + 1] = scanline_buffer[i + scanline_width];
			data[offset + 2] = scanline_buffer[i + 2 * scanline_width];
			data[offset + 3] = scanline_buffer[i + 3 * scanline_width];
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		++_g;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var data = new Uint8Array(width * height * 4);
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,width,height);
	var floatData = new Float32Array(width * height * 4);
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var f = Math.pow(2.0,data[offset + 3] - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element,looping) {
	this.stopped = false;
	this.element = element;
	this.looping = looping;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = "kha.js.AEAudioChannel";
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	play: function() {
		this.stopped = false;
		this.element.play();
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
			this.stopped = true;
		} catch( e ) {
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 37, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,get_position: function() {
		return this.element.currentTime;
	}
	,set_position: function(value) {
		return this.element.currentTime = value;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,__class__: kha_js_AEAudioChannel
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = "kha.js.AudioElementAudio";
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element,loop);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = "kha.js.CanvasGraphics";
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,set_imageScaleQuality: function(value) {
		if(value == 0) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,fillRect: function(x,y,width,height) {
		this.canvas.globalAlpha = this.get_opacity() * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var _g = 0;
			var _g1 = text.length;
			while(_g < _g1) {
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,_g++)),xpos,y);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.lineTo(x3,y3);
		this.canvas.closePath();
		this.canvas.fill();
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = "kha.js.Font";
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.prototype = {
	getImage: function(fontSize,color) {
		var imageIndex = fontSize * 10000 + kha_graphics2_Graphics.fontGlyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			this.images.h[imageIndex] = new haxe_ds_IntMap();
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g = 0;
			var _g1 = bytes.length;
			while(_g < _g1) {
				var i = _g++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = "kha.js.MobileWebAudio";
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = "kha.js.MobileWebAudioChannel";
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,stop: function() {
		var wasStopped = this.paused || this.stopped;
		this.paused = false;
		this.stopped = true;
		if(wasStopped) {
			return;
		}
		this.source.stop();
	}
	,get_length: function() {
		return this.source.buffer.duration;
	}
	,get_position: function() {
		if(this.stopped) {
			return this.get_length();
		}
		if(this.paused) {
			return this.pauseTime;
		} else {
			return kha_js_MobileWebAudio._context.currentTime - this.startTime;
		}
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,__class__: kha_js_MobileWebAudioChannel
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = "kha.js.MobileWebAudioSound";
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/wav") != "" && StringTools.endsWith(filename,".wav")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = "kha.js.Sound";
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = "kha.js.WebAudioSound";
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var ch1 = buffer.numberOfChannels == 1 ? ch0 : buffer.getChannelData(1);
			var len = ch0.length;
			_gthis.uncompressedData = new Float32Array(len * 2);
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis.sampleRate = Math.round(buffer.sampleRate);
			var idx = 0;
			var i = 0;
			var lidx = len * 2;
			var uncompressInner = null;
			uncompressInner = function() {
				var chk_len = idx + 11025;
				var next_chk = chk_len > lidx ? lidx : chk_len;
				while(idx < next_chk) {
					_gthis.uncompressedData[idx] = ch0[i];
					_gthis.uncompressedData[idx + 1] = ch1[i];
					idx += 2;
					i += 1;
				}
				if(idx < lidx) {
					window.setTimeout(uncompressInner,0);
				} else {
					_gthis.compressedData = null;
					done();
				}
			};
			uncompressInner();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = "kha.js.graphics4.ConstantLocation";
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrixCache = new Float32Array(16);
	this.useVertexAttributes = 0;
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = "kha.js.graphics4.Graphics";
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = ((this.renderTarget) instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetMSAA = image.MSAAFrameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g2 = 0;
				var _g3 = additionalRenderTargets.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,end: function() {
		if(this.renderTargetMSAA != null) {
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.READ_FRAMEBUFFER,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.DRAW_FRAMEBUFFER,this.renderTargetMSAA);
			kha_SystemImpl.gl.blitFramebuffer(0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),16384,9728);
		}
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask = 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,setDepthMode: function(write,mode) {
		switch(mode) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == 1 && destination == 2) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		this.useVertexAttributes = (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter) {
		case 0:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == 2) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setCullMode: function(mode) {
		switch(mode) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		this.currentPipeline = pipe;
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * (type == 5123 ? 2 : 4));
		var _g = 0;
		var _g1 = this.useVertexAttributes;
		while(_g < _g1) kha_SystemImpl.gl.disableVertexAttribArray(_g++);
	}
	,convertStencilAction: function(action) {
		switch(action) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == 0 && bothPass == 0 && depthFail == 0 && stencilFail == 0) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = this.convertCompareMode(compareMode);
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			switch(referenceValue._hx_index) {
			case 0:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,0,readMask);
				break;
			case 1:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue.value,readMask);
				break;
			}
		}
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = "kha.js.graphics4.Graphics2";
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = "kha.js.graphics4.TextureUnit";
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = "kha.vr.VrInterface";
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = "kha.js.vr.VrInterface";
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = "kha.math.FastMatrix3";
kha_math_FastMatrix3.prototype = {
	__class__: kha_math_FastMatrix3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = "kha.math.FastMatrix4";
kha_math_FastMatrix4.prototype = {
	__class__: kha_math_FastMatrix4
};
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = "kha.math.FastVector2";
kha_math_FastVector2.prototype = {
	__class__: kha_math_FastVector2
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = "kha.math.FastVector3";
kha_math_FastVector3.prototype = {
	__class__: kha_math_FastVector3
};
var kha_math_Random = function(seed) {
	this.index = 0;
	this.MT = [];
	this.MT[623] = 0;
	this.MT[0] = seed;
	var _g = 1;
	while(_g < 624) {
		var i = _g++;
		this.MT[i] = 1812433253 * (this.MT[i - 1] ^ this.MT[i - 1] >> 30) + i;
	}
};
$hxClasses["kha.math.Random"] = kha_math_Random;
kha_math_Random.__name__ = "kha.math.Random";
kha_math_Random.init = function(seed) {
	kha_math_Random.Default = new kha_math_Random(seed);
};
kha_math_Random.getFloatIn = function(min,max) {
	return min + kha_math_Random.Default.GetFloat() * (max - min);
};
kha_math_Random.prototype = {
	Get: function() {
		if(this.index == 0) {
			this.GenerateNumbers();
		}
		var y = this.MT[this.index];
		y ^= y >> 11;
		y ^= y << 7 & -1658038656;
		y ^= y << 15 & -272236544;
		y ^= y >> 18;
		this.index = (this.index + 1) % 624;
		return y;
	}
	,GetFloat: function() {
		return this.Get() / 2147483646;
	}
	,GenerateNumbers: function() {
		var _g = 0;
		while(_g < 624) {
			var i = _g++;
			var y = (this.MT[i] & 1) + this.MT[(i + 1) % 624] & 2147483647;
			this.MT[i] = this.MT[(i + 397) % 624] ^ y >> 1;
			if(y % 2 != 0) {
				this.MT[i] ^= -1727483681;
			}
		}
	}
	,__class__: kha_math_Random
};
var kha_netsync_ControllerBuilder = function() { };
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = "kha.netsync.ControllerBuilder";
var kha_netsync_Session = function(maxPlayers,address,port) {
	this.controllers = new haxe_ds_IntMap();
	kha_netsync_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = "kha.netsync.Session";
kha_netsync_Session.the = function() {
	return kha_netsync_Session.instance;
};
kha_netsync_Session.prototype = {
	sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_netsync_Session
};
var states_Ending = function() {
	com_framework_utils_State.call(this);
};
$hxClasses["states.Ending"] = states_Ending;
states_Ending.__name__ = "states.Ending";
states_Ending.__super__ = com_framework_utils_State;
states_Ending.prototype = $extend(com_framework_utils_State.prototype,{
	load: function(resources) {
		resources.add(new com_loading_basicResources_ImageLoader("Ending"));
		resources.add(new com_loading_basicResources_SoundLoader("KyubeyTheme",false));
	}
	,init: function() {
		this.intro = new com_gEngine_display_Sprite("Ending");
		com_soundLib_SoundManager.playMusic("KyubeyTheme",true);
		com_soundLib_SoundManager.musicVolume(1);
		this.stage.addChild(this.intro);
	}
	,update: function(dt) {
		com_framework_utils_State.prototype.update.call(this,dt);
		if(com_framework_utils_Input.i.isKeyCodePressed(32) || com_framework_utils_Input.i.isMousePressed() || com_framework_utils_Input.i.isKeyCodePressed(13)) {
			this.changeState(new states_Intro());
		}
	}
	,__class__: states_Ending
});
var states_GameOver = function(message) {
	if(message == null) {
		message = "";
	}
	com_framework_utils_State.call(this);
	this.message = message;
};
$hxClasses["states.GameOver"] = states_GameOver;
states_GameOver.__name__ = "states.GameOver";
states_GameOver.__super__ = com_framework_utils_State;
states_GameOver.prototype = $extend(com_framework_utils_State.prototype,{
	load: function(resources) {
		var atlas = new com_loading_basicResources_JoinAtlas(1024,1024);
		atlas.add(new com_loading_basicResources_ImageLoader("gameOver"));
		atlas.add(new com_loading_basicResources_FontLoader(kha_Assets.fonts.Kenney_ThickName,30));
		resources.add(atlas);
	}
	,init: function() {
		var image = new com_gEngine_display_Sprite("gameOver");
		image.x = com_gEngine_GEngine.virtualWidth * 0.5 - image.width() * 0.5;
		image.y = 100;
		this.stage.addChild(image);
		var scoreDisplay = new com_gEngine_display_Text(kha_Assets.fonts.Kenney_ThickName);
		scoreDisplay.set_text("You have failed in your quest to find Madoka. \n" + "\n" + this.message + "\n" + "\n" + "Press Enter to try again.");
		scoreDisplay.x = com_gEngine_GEngine.virtualWidth / 2 - scoreDisplay.width() * 0.5;
		scoreDisplay.y = com_gEngine_GEngine.virtualHeight / 2;
		scoreDisplay.set_color(-65536);
		this.stage.addChild(scoreDisplay);
	}
	,update: function(dt) {
		com_framework_utils_State.prototype.update.call(this,dt);
		if(com_framework_utils_Input.i.isKeyCodePressed(13)) {
			this.changeState(new states_Intro());
		}
	}
	,__class__: states_GameOver
});
var states_GameState = function(room,fromRoom) {
	this.deadTimer = 0;
	this.purgeSprites = 0;
	this.temporalSprites = [];
	this.megucas = [];
	this.pawns = [];
	this.health = 100;
	com_framework_utils_State.call(this);
	this.room = room;
	this.fromRoom = fromRoom;
};
$hxClasses["states.GameState"] = states_GameState;
states_GameState.__name__ = "states.GameState";
states_GameState.__super__ = com_framework_utils_State;
states_GameState.prototype = $extend(com_framework_utils_State.prototype,{
	load: function(resources) {
		resources.add(new com_loading_basicResources_DataLoader(this.room + "_tmx"));
		var atlas = new com_loading_basicResources_JoinAtlas(2048,2048);
		atlas.add(new com_loading_basicResources_TilesheetLoader("level1b",32,32,0));
		atlas.add(new com_loading_basicResources_SparrowLoader("homurarpg","homurarpg_xml"));
		atlas.add(new com_loading_basicResources_SparrowLoader("coobie","coobie_xml"));
		atlas.add(new com_loading_basicResources_SparrowLoader("pawn","pawn_xml"));
		atlas.add(new com_loading_basicResources_SparrowLoader("meguca","meguca_xml"));
		atlas.add(new com_loading_basicResources_SparrowLoader("witch","witch_xml"));
		resources.add(new com_loading_basicResources_ImageLoader("bullet"));
		resources.add(new com_loading_basicResources_ImageLoader("rocket"));
		resources.add(new com_loading_basicResources_ImageLoader("FirstAreaDBg"));
		resources.add(new com_loading_basicResources_ImageLoader("SecondAreaDBg"));
		resources.add(new com_loading_basicResources_ImageLoader("BossAreaBg"));
		resources.add(new com_loading_basicResources_ImageLoader("BonusAreaBg"));
		resources.add(new com_loading_basicResources_SoundLoader("FirstAreaDM",false));
		resources.add(new com_loading_basicResources_SoundLoader("SecondAreaDM",false));
		resources.add(new com_loading_basicResources_SoundLoader("BossAreaM",false));
		resources.add(new com_loading_basicResources_SoundLoader("BonusAreaM",false));
		resources.add(new com_loading_basicResources_ImageLoader("gun_hit"));
		resources.add(new com_loading_basicResources_ImageLoader("blowing"));
		resources.add(new com_loading_basicResources_ImageLoader("Swing"));
		resources.add(new com_loading_basicResources_ImageLoader("Soulgem"));
		resources.add(new com_loading_basicResources_ImageLoader("Proj"));
		resources.add(new com_loading_basicResources_ImageLoader("PistolIcon"));
		resources.add(new com_loading_basicResources_ImageLoader("RocketIcon"));
		resources.add(new com_loading_basicResources_ImageLoader("SpecialIcon"));
		resources.add(new com_loading_basicResources_SoundLoader("gunshot2"));
		resources.add(new com_loading_basicResources_SoundLoader("swoosh"));
		resources.add(new com_loading_basicResources_SoundLoader("laugh2"));
		resources.add(new com_loading_basicResources_SoundLoader("rpg"));
		atlas.add(new com_loading_basicResources_FontLoader("Kenney_Pixel",24));
		atlas.add(new com_loading_basicResources_FontLoader(kha_Assets.fonts.Kenney_ThickName,30));
		resources.add(atlas);
	}
	,init: function() {
		var _gthis = this;
		this.backgroundLayer = new com_gEngine_display_StaticLayer();
		this.background = new com_gEngine_display_Sprite(this.room + "Bg");
		this.backgroundLayer.addChild(this.background);
		this.stage.addChild(this.backgroundLayer);
		com_soundLib_SoundManager.playMusic(this.room + "M",true);
		this.stageColor(0.5,.5,0.5);
		this.dialogCollision = new com_collision_platformer_CollisionGroup();
		this.doomCollision = new com_collision_platformer_CollisionGroup();
		this.enemyCollisions = new com_collision_platformer_CollisionGroup();
		this.megucaCollisions = new com_collision_platformer_CollisionGroup();
		this.bossCollision = new com_collision_platformer_CollisionGroup();
		this.teleportCollision = new com_collision_platformer_CollisionGroup();
		this.bullets = new com_collision_platformer_CollisionGroup();
		this.rockets = new com_collision_platformer_CollisionGroup();
		this.projectiles = new com_collision_platformer_CollisionGroup();
		this.endings = new com_collision_platformer_CollisionGroup();
		this.simulationLayer = new com_gEngine_display_Layer();
		this.stage.addChild(this.simulationLayer);
		this.worldMap = new com_collision_platformer_Tilemap(this.room + "_tmx",1);
		this.worldMap.init(function(layerTilemap,tileLayer) {
			if(!tileLayer.properties.exists("noCollision") && !tileLayer.properties.exists("cCol")) {
				layerTilemap.createCollisions(tileLayer);
			}
			var spr = new com_gEngine_display_Sprite("level1b");
			var color = tileLayer.tintColor;
			spr.colorMultiplication(((color & 16711680) >> 16) / 255,((color & 65280) >> 8) / 255,(color & 255) / 255,1);
			_gthis.simulationLayer.addChild(layerTilemap.createDisplay(tileLayer,spr));
		},$bind(this,this.parseMapObjects));
		this.stage.cameras[0].limits(0,0,this.worldMap.widthIntTiles * 32,this.worldMap.heightInTiles * 32);
		GlobalGameData.simulationLayer = this.simulationLayer;
		GlobalGameData.bullets = this.bullets;
		GlobalGameData.rockets = this.rockets;
		GlobalGameData.projectiles = this.projectiles;
		this.hudLayer = new com_gEngine_display_StaticLayer();
		this.stage.addChild(this.hudLayer);
		this.healthDisplay = new com_gEngine_display_Text(kha_Assets.fonts.Kenney_ThickName);
		this.healthDisplay.x = com_gEngine_GEngine.virtualWidth / 2;
		this.healthDisplay.y = 600;
		this.healthDisplay.set_text(Std.string(this.player.health));
		this.hudLayer.addChild(this.healthDisplay);
		this.soulGem = new com_gEngine_display_Sprite("Soulgem");
		this.pistolIcon = new com_gEngine_display_Sprite("PistolIcon");
		this.rocketIcon = new com_gEngine_display_Sprite("RocketIcon");
		this.specialIcon = new com_gEngine_display_Sprite("SpecialIcon");
		this.soulGem.x = com_gEngine_GEngine.virtualWidth / 2 - 40;
		this.soulGem.y = 590;
		this.soulGem.scaleX = 2;
		this.soulGem.scaleY = 2;
		this.hudLayer.addChild(this.soulGem);
		this.pistolIcon.x = 20;
		this.pistolIcon.y = 590;
		this.hudLayer.addChild(this.pistolIcon);
		this.rocketIcon.x = 80;
		this.rocketIcon.y = 590;
		this.specialIcon.x = 140;
		this.specialIcon.y = 590;
		if(this.raganos != null && this.raganos.health > 0) {
			this.bossDisplay = new com_gEngine_display_Text(kha_Assets.fonts.Kenney_ThickName);
			this.bossDisplay.x = com_gEngine_GEngine.virtualWidth / 2;
			this.bossDisplay.y = 100;
			this.bossDisplay.set_text(Std.string(this.raganos.health));
			this.hudLayer.addChild(this.bossDisplay);
		}
		this.lapDisplay = new com_gEngine_display_Text(kha_Assets.fonts.Kenney_ThickName);
		this.lapDisplay.x = 1200;
		this.lapDisplay.y = 600;
		this.lapDisplay.set_text(GlobalGameData.lap + "");
		this.hudLayer.addChild(this.lapDisplay);
	}
	,parseMapObjects: function(layerTilemap,object) {
		if(object.objectType._hx_index == 0) {
			if(object.type == "dialog") {
				var dialog = new cinematic_Dialog(object.properties.getString("text"),object.x,object.y,object.width,object.height,object.id);
				this.dialogCollision.add(dialog.collider);
				this.addChild(dialog);
			}
			if(object.type == "kyu" || object.type == "kyu2") {
				var kyubey = new gameObjects_Kyubey(object.x - 10,object.y,this.simulationLayer);
				if(object.type == "kyu2") {
					kyubey.changeDirection();
				}
				this.addChild(kyubey);
			}
			if(object.type == "en") {
				var pawn = new gameObjects_Pawn(object.x,object.y,this.simulationLayer,this.enemyCollisions);
				this.enemyCollisions.add(pawn.collision);
				this.pawns.push(pawn);
				this.addChild(pawn);
			}
			if(object.type == "fen") {
				var meguca = new gameObjects_Meguca(object.x,object.y,this.simulationLayer,this.megucaCollisions);
				this.megucas.push(meguca);
				this.addChild(meguca);
			}
			if(object.type == "doom") {
				var doom = new cinematic_Doom(object.x,object.y,object.width,object.height);
				this.doomCollision.add(doom.collider);
				this.addChild(doom);
			}
			if(object.type == "start") {
				if(this.player == null) {
					this.player = new gameObjects_Homura(object.x,object.y,this.simulationLayer);
					this.addChild(this.player);
					GlobalGameData.player = this.player;
				} else {
					this.player.collision.x = object.x;
					this.player.collision.y = object.y;
				}
			}
			if(object.type == "end") {
				var end = new com_collision_platformer_CollisionBox();
				end.x = object.x;
				end.y = object.y;
				end.width = object.width;
				end.height = object.height;
				end.userData = object.properties.getString("goTo");
				this.endings.add(end);
			}
			if(object.type == "teleport") {
				var end1 = new com_collision_platformer_CollisionBox();
				end1.x = object.x;
				end1.y = object.y;
				end1.width = object.width;
				end1.height = object.height;
				this.teleportCollision.add(end1);
			}
			if(object.type == "boss") {
				this.raganos = new gameObjects_Raganos(object.x,object.y,this.simulationLayer,this.bossCollision);
				this.addChild(this.raganos);
			}
		}
	}
	,playerVsEnemy: function(a,b) {
		var pawn = a.userData;
		pawn.attack();
		com_collision_platformer_CollisionEngine.overlap(this.player.collision,pawn.sword.swordCollisions,$bind(this,this.playerVsSword));
	}
	,playerVsMeguca: function(a,b) {
		var meguca = a.userData;
		if(this.player.controlEnabled) {
			this.player.removeControl();
			this.player.collision.velocityX = meguca.collision.velocityX;
			this.player.beginJump();
		}
	}
	,playerVsSword: function(a,b) {
		var swing = a.userData;
		this.player.damage(swing.damage);
		this.health -= swing.damage;
		swing.die();
		this.healthDisplay.set_text(this.health + "");
	}
	,playerVsTeleport: function(a,b) {
		this.player.collision.y = 20;
	}
	,bulletVsEnemy: function(a,b) {
		var pawn = b.userData;
		var bullet = a.userData;
		pawn.damage(bullet.damage);
		bullet.die();
		var x = pawn.collision.x;
		var y = pawn.collision.y;
		var gunHit = new com_gEngine_display_Sprite("gun_hit");
		gunHit.x = x;
		gunHit.y = y;
		this.temporalSprites.push(gunHit);
		this.simulationLayer.addChild(gunHit);
	}
	,rocketVsEnemy: function(a,b) {
		var pawn = b.userData;
		var rocket = a.userData;
		rocket.die();
		var x = pawn.collision.x;
		var y = pawn.collision.y;
		var damage = rocket.damage;
		var _this = this.pawns;
		var _g = [];
		var _g1 = 0;
		while(_g1 < _this.length) {
			var v = _this[_g1];
			++_g1;
			if(v.collision.x <= x + 50 && v.collision.x >= x - 50 && v.collision.y <= y + 50 && v.collision.y >= y - 50) {
				_g.push(v);
			}
		}
		var _g2 = 0;
		while(_g2 < _g.length) _g[_g2++].damage(damage);
		var explosion = new com_gEngine_display_Sprite("blowing");
		explosion.x = x;
		explosion.y = y;
		this.temporalSprites.push(explosion);
		this.simulationLayer.addChild(explosion);
	}
	,homuraVsEnd: function(a,b) {
		if(com_framework_utils_Input.i.isKeyCodePressed(13)) {
			if(a.userData != "endScreen") {
				if(this.raganos == null || this.raganos.health <= 0) {
					com_soundLib_SoundManager.stopMusic();
					this.changeState(new states_GameState(a.userData,this.room));
				}
			} else {
				GlobalGameData.lap++;
				this.changeState(new states_Ending());
			}
		}
	}
	,dialogVsPlayer: function(dialogCollision,collision) {
		var dialog = dialogCollision.userData;
		dialog.showText(this.simulationLayer);
		if(dialog.id == 1) {
			GlobalGameData.doubleJumpEnabled = true;
		}
		if(dialog.id == 5) {
			GlobalGameData.launcherEnabled = true;
		}
		if(dialog.id == 46) {
			GlobalGameData.specialEnabled = true;
		}
	}
	,doomVsPlayer: function(doomCollision,playerCollision) {
		doomCollision.userData.showText(this.simulationLayer);
		this.changeState(new states_GameOver("You have fallen to ground level.\n\nEasier to reset than to climb back."));
	}
	,bulletVsBoss: function(a,b) {
		var boss = b.userData;
		var bullet = a.userData;
		boss.damage(bullet.damage);
		bullet.die();
		var x = boss.collision.x;
		var y = boss.collision.y;
		var gunHit = new com_gEngine_display_Sprite("gun_hit");
		gunHit.x = x;
		gunHit.y = y;
		this.temporalSprites.push(gunHit);
		this.simulationLayer.addChild(gunHit);
	}
	,rocketVsBoss: function(a,b) {
		var boss = b.userData;
		var rocket = a.userData;
		boss.damage(rocket.damage);
		rocket.die();
		var x = boss.collision.x;
		var y = boss.collision.y;
		var explosion = new com_gEngine_display_Sprite("blowing");
		explosion.x = x;
		explosion.y = y;
		this.temporalSprites.push(explosion);
		this.simulationLayer.addChild(explosion);
	}
	,playerVsProjectile: function(a,b) {
		var projectile = a.userData;
		this.player.damage(projectile.damage);
		projectile.die();
	}
	,update: function(dt) {
		com_framework_utils_State.prototype.update.call(this,dt);
		this.stage.cameras[0].scale = this.room == "BonusArea" ? 2 : 1;
		com_collision_platformer_CollisionEngine.collide(this.player.collision,this.worldMap.collision);
		com_collision_platformer_CollisionEngine.collide(this.enemyCollisions,this.worldMap.collision);
		com_collision_platformer_CollisionEngine.overlap(this.dialogCollision,this.player.collision,$bind(this,this.dialogVsPlayer));
		com_collision_platformer_CollisionEngine.overlap(this.doomCollision,this.player.collision,$bind(this,this.doomVsPlayer));
		com_collision_platformer_CollisionEngine.overlap(this.teleportCollision,this.player.collision,$bind(this,this.playerVsTeleport));
		com_collision_platformer_CollisionEngine.overlap(GlobalGameData.rockets,this.enemyCollisions,$bind(this,this.rocketVsEnemy));
		com_collision_platformer_CollisionEngine.overlap(GlobalGameData.bullets,this.enemyCollisions,$bind(this,this.bulletVsEnemy));
		com_collision_platformer_CollisionEngine.overlap(this.player.collision,this.enemyCollisions,$bind(this,this.playerVsEnemy));
		com_collision_platformer_CollisionEngine.overlap(this.player.collision,this.endings,$bind(this,this.homuraVsEnd));
		com_collision_platformer_CollisionEngine.overlap(this.player.collision,this.megucaCollisions,$bind(this,this.playerVsMeguca));
		com_collision_platformer_CollisionEngine.overlap(GlobalGameData.rockets,this.bossCollision,$bind(this,this.rocketVsBoss));
		com_collision_platformer_CollisionEngine.overlap(GlobalGameData.bullets,this.bossCollision,$bind(this,this.bulletVsBoss));
		com_collision_platformer_CollisionEngine.overlap(GlobalGameData.projectiles,this.player.collision,$bind(this,this.playerVsProjectile));
		this.stage.cameras[0].setTarget(this.player.collision.x,this.player.collision.y);
		if(com_framework_utils_Input.i.isKeyCodePressed(82)) {
			this.changeState(new states_Intro());
		}
		this.healthDisplay.set_text(this.player.health + "");
		this.purgeSprites++;
		if(this.purgeSprites == 30) {
			this.purgeSprites = 0;
			var _g = 0;
			var _g1 = this.temporalSprites;
			while(_g < _g1.length) _g1[_g++].removeFromParent();
		}
		if(this.player.health <= 0) {
			this.healthDisplay.set_text("0");
			this.deadTimer++;
			if(this.deadTimer >= 85) {
				this.changeState(new states_GameOver());
			}
		}
		if(this.player.collision.y > this.worldMap.heightInTiles * 32 + 200) {
			this.changeState(new states_GameOver("You have left the area. Seems like you\n\n do not care about Madoka that much."));
		}
		if(this.raganos != null) {
			if(this.raganos.health >= 0) {
				this.bossDisplay.set_text(this.raganos.health + "");
			} else {
				this.bossDisplay.set_text("0");
			}
		}
		if(GlobalGameData.launcherEnabled) {
			this.hudLayer.addChild(this.rocketIcon);
		}
		if(GlobalGameData.specialEnabled) {
			this.hudLayer.addChild(this.specialIcon);
		}
		if(GlobalGameData.isTimeStopped) {
			this.stopTime();
			var tmp = com_gEngine_display_Blend.blendDefault();
			this.stage.cameras[0].postProcess = new com_gEngine_shaders_ShRetro(tmp);
		} else {
			this.resumeTime();
			this.stage.cameras[0].postProcess = null;
		}
	}
	,stopTime: function() {
		var _g = 0;
		var _g1 = this.pawns;
		while(_g < _g1.length) _g1[_g++].stopTimeline();
		var _g2 = 0;
		var _g3 = this.megucas;
		while(_g2 < _g3.length) _g3[_g2++].stopTimeline();
		if(this.raganos != null) {
			this.raganos.stopTimeline();
		}
		var _g4 = 0;
		var _g5 = GlobalGameData.bulletList;
		while(_g4 < _g5.length) _g5[_g4++].stopTimeline();
		var _g6 = 0;
		var _g7 = GlobalGameData.rocketList;
		while(_g6 < _g7.length) _g7[_g6++].stopTimeline();
		var _g8 = 0;
		var _g9 = GlobalGameData.projectileList;
		while(_g8 < _g9.length) _g9[_g8++].stopTimeline();
	}
	,resumeTime: function() {
		var _g = 0;
		var _g1 = this.pawns;
		while(_g < _g1.length) _g1[_g++].resetTimeline();
		var _g2 = 0;
		var _g3 = this.megucas;
		while(_g2 < _g3.length) _g3[_g2++].resetTimeline();
		if(this.raganos != null) {
			this.raganos.resetTimeline();
		}
		var _g4 = 0;
		var _g5 = GlobalGameData.bulletList;
		while(_g4 < _g5.length) _g5[_g4++].resetTimeline();
		var _g6 = 0;
		var _g7 = GlobalGameData.projectileList;
		while(_g6 < _g7.length) _g7[_g6++].resetTimeline();
		var _g8 = 0;
		var _g9 = GlobalGameData.rocketList;
		while(_g8 < _g9.length) _g9[_g8++].resetTimeline();
	}
	,destroy: function() {
		com_framework_utils_State.prototype.destroy.call(this);
	}
	,__class__: states_GameState
});
var states_Intro = function() {
	com_framework_utils_State.call(this);
};
$hxClasses["states.Intro"] = states_Intro;
states_Intro.__name__ = "states.Intro";
states_Intro.__super__ = com_framework_utils_State;
states_Intro.prototype = $extend(com_framework_utils_State.prototype,{
	load: function(resources) {
		resources.add(new com_loading_basicResources_ImageLoader("Intro"));
		resources.add(new com_loading_basicResources_SoundLoader("Inevitabilis",false));
	}
	,init: function() {
		this.intro = new com_gEngine_display_Sprite("Intro");
		com_soundLib_SoundManager.playMusic("Inevitabilis",true);
		com_soundLib_SoundManager.musicVolume(1);
		this.stage.addChild(this.intro);
	}
	,update: function(dt) {
		com_framework_utils_State.prototype.update.call(this,dt);
		if(com_framework_utils_Input.i.isKeyCodePressed(32) || com_framework_utils_Input.i.isMousePressed() || com_framework_utils_Input.i.isKeyCodePressed(13)) {
			this.changeState(new states_GameState("FirstAreaD"));
		}
	}
	,__class__: states_Intro
});
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
GlobalGameData.launcherEnabled = false;
GlobalGameData.doubleJumpEnabled = false;
GlobalGameData.specialEnabled = false;
GlobalGameData.isTimeStopped = false;
GlobalGameData.timeStopDuration = 240;
GlobalGameData.bulletList = [];
GlobalGameData.rocketList = [];
GlobalGameData.projectileList = [];
GlobalGameData.lap = 0;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
com_TimeManager.time = 0;
com_TimeManager.multiplier = 1;
com_collision_platformer_CollisionEngine.colliders = [];
com_framework_utils_Perlin.PERMUTATIONS = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];
com_gEngine_GEngine.drawCount = 0;
com_gEngine_GEngine.extraInfo = "";
com_soundLib_SoundManager.musicPosition = 0;
com_soundLib_SoundManager.soundMuted = false;
com_soundLib_SoundManager.musicMuted = false;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Display.instance = new kha_Display();
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.HighPassFilter_fragData0 = "s644:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBjb2wgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBjb2wgLT0gdmVjNCgxLjApOwogICAgaGlnaHAgdmVjNCBicmlnaHQ0ID0gKChjb2wgKiAoLTYuMCkpICogY29sKSArIHZlYzQoMi4wKTsKICAgIGhpZ2hwIGZsb2F0IGJyaWdodCA9IGRvdChicmlnaHQ0LCB2ZWM0KDAuMzMzMzMyOTg1NjM5NTcyMTQzNTU0Njg3NSwgMC4zMzMzMzI5ODU2Mzk1NzIxNDM1NTQ2ODc1LCAwLjMzMzMzMjk4NTYzOTU3MjE0MzU1NDY4NzUsIDAuMCkpOwogICAgY29sICs9IHZlYzQoYnJpZ2h0ICsgMC42MDAwMDAwMjM4NDE4NTc5MTAxNTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IGNvbDsKfQoK";
kha_Shaders.HighPassFilter_fragData1 = "s656:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IGNvbCA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBjb2wgLT0gdmVjNCgxLjApOwogICAgaGlnaHAgdmVjNCBicmlnaHQ0ID0gKChjb2wgKiAoLTYuMCkpICogY29sKSArIHZlYzQoMi4wKTsKICAgIGhpZ2hwIGZsb2F0IGJyaWdodCA9IGRvdChicmlnaHQ0LCB2ZWM0KDAuMzMzMzMyOTg1NjM5NTcyMTQzNTU0Njg3NSwgMC4zMzMzMzI5ODU2Mzk1NzIxNDM1NTQ2ODc1LCAwLjMzMzMzMjk4NTYzOTU3MjE0MzU1NDY4NzUsIDAuMCkpOwogICAgY29sICs9IHZlYzQoYnJpZ2h0ICsgMC42MDAwMDAwMjM4NDE4NTc5MTAxNTYyNSk7CiAgICBjb2xvciA9IGNvbDsKfQoK";
kha_Shaders.HighPassFilter_fragData2 = "s618:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgY29sID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpOwogICAgY29sIC09IHZlYzQoMS4wKTsKICAgIHZlYzQgYnJpZ2h0NCA9ICgoY29sICogKC02LjApKSAqIGNvbCkgKyB2ZWM0KDIuMCk7CiAgICBmbG9hdCBicmlnaHQgPSBkb3QoYnJpZ2h0NCwgdmVjNCgwLjMzMzMzMjk4NTYzOTU3MjE0MzU1NDY4NzUsIDAuMzMzMzMyOTg1NjM5NTcyMTQzNTU0Njg3NSwgMC4zMzMzMzI5ODU2Mzk1NzIxNDM1NTQ2ODc1LCAwLjApKTsKICAgIGNvbCArPSB2ZWM0KGJyaWdodCArIDAuNjAwMDAwMDIzODQxODU3OTEwMTU2MjUpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBjb2w7Cn0KCg";
kha_Shaders.alpha_vertData0 = "s363:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSBmbG9hdCBhbHBoYTsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzMgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdmVjMyh0ZXhQb3NpdGlvbiwgYWxwaGEpOwp9Cgo";
kha_Shaders.alpha_vertData1 = "s343:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSBmbG9hdCBhbHBoYTsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMzIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdmVjMyh0ZXhQb3NpdGlvbiwgYWxwaGEpOwp9Cgo";
kha_Shaders.alpha_vertData2 = "s416:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1lZGl1bXAgZmxvYXQgYWxwaGE7CgphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMyB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiB0ZXhQb3NpdGlvbjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHZlYzModGV4UG9zaXRpb24sIGFscGhhKTsKfQoK";
kha_Shaders.blurFragmentShader_fragData0 = "s566:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHZfYmx1ckNvb3JkMjsKdmFyeWluZyBoaWdocCB2ZWMyIHZfdGV4Q29vcmQ7CnZhcnlpbmcgaGlnaHAgdmVjMiB2X2JsdXJDb29yZDA7CnZhcnlpbmcgaGlnaHAgdmVjMiB2X2JsdXJDb29yZDE7CnZhcnlpbmcgaGlnaHAgdmVjMiB2X2JsdXJDb29yZDM7CnZhcnlpbmcgaGlnaHAgdmVjMiB2X2JsdXJDb29yZDQ7CnZhcnlpbmcgaGlnaHAgdmVjMiB2X2JsdXJDb29yZDU7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdl9ibHVyQ29vcmQyKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.blurFragmentShader_fragData1 = "s538:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB2X2JsdXJDb29yZDI7Cm91dCBoaWdocCB2ZWM0IGNvbG9yOwppbiBoaWdocCB2ZWMyIHZfdGV4Q29vcmQ7CmluIGhpZ2hwIHZlYzIgdl9ibHVyQ29vcmQwOwppbiBoaWdocCB2ZWMyIHZfYmx1ckNvb3JkMTsKaW4gaGlnaHAgdmVjMiB2X2JsdXJDb29yZDM7CmluIGhpZ2hwIHZlYzIgdl9ibHVyQ29vcmQ0OwppbiBoaWdocCB2ZWMyIHZfYmx1ckNvb3JkNTsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdl9ibHVyQ29vcmQyKTsKICAgIGNvbG9yID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.blurFragmentShader_fragData2 = "s507:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDI7CnZhcnlpbmcgdmVjMiB2X3RleENvb3JkOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQwOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQxOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQzOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQ0Owp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQ1OwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHZfYmx1ckNvb3JkMik7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.blur_pass_fragData0 = "s1194:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgZGlySW52OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiA1LjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgKGRpckludiAqIDQuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlySW52ICogMy41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiAyLjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgKGRpckludiAqIDEuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogMS41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiAyLjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gKGRpckludiAqIDMuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogNC41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiA1LjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdIC89IHZlYzQoMTEuMCk7Cn0KCg";
kha_Shaders.blur_pass_fragData1 = "s1116:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgZGlySW52OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ0NvbG9yID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgKGRpckludiAqIDUuNSkpOwogICAgZnJhZ0NvbG9yICs9IHRleHR1cmUodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiA0LjUpKTsKICAgIGZyYWdDb2xvciArPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQgKyAoZGlySW52ICogMy41KSk7CiAgICBmcmFnQ29sb3IgKz0gdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgKGRpckludiAqIDIuNSkpOwogICAgZnJhZ0NvbG9yICs9IHRleHR1cmUodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiAxLjUpKTsKICAgIGZyYWdDb2xvciArPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgZnJhZ0NvbG9yICs9IHRleHR1cmUodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiAxLjUpKTsKICAgIGZyYWdDb2xvciArPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogMi41KSk7CiAgICBmcmFnQ29sb3IgKz0gdGV4dHVyZSh0ZXgsIHRleENvb3JkIC0gKGRpckludiAqIDMuNSkpOwogICAgZnJhZ0NvbG9yICs9IHRleHR1cmUodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiA0LjUpKTsKICAgIGZyYWdDb2xvciArPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogNS41KSk7CiAgICBmcmFnQ29sb3IgLz0gdmVjNCgxMS4wKTsKfQoK";
kha_Shaders.blur_pass_fragData2 = "s1183:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSB2ZWMyIGRpckludjsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlySW52ICogNS41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiA0LjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgKGRpckludiAqIDMuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlySW52ICogMi41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXJJbnYgKiAxLjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gKGRpckludiAqIDEuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogMi41KSk7CiAgICBnbF9GcmFnRGF0YVswXSArPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCAtIChkaXJJbnYgKiAzLjUpKTsKICAgIGdsX0ZyYWdEYXRhWzBdICs9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gKGRpckludiAqIDQuNSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gKz0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogNS41KSk7CiAgICBnbF9GcmFnRGF0YVswXSAvPSB2ZWM0KDExLjApOwp9Cgo";
kha_Shaders.filmGrain_fragData0 = "s1026:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IHN0cmVuZ3RoID0gNS4wOwogICAgaGlnaHAgZmxvYXQgeCA9ICgodGV4Q29vcmQueCArIDQuMCkgKiAodGV4Q29vcmQueSArIDQuMCkpICogMTAuMDsKICAgIGhpZ2hwIHZlYzQgZ3JhaW4gPSB2ZWM0KG1vZCgobW9kKHgsIDEzLjApICsgMS4wKSAqIChtb2QoeCwgMTIzLjApICsgMS4wKSwgMC4wMDk5OTk5OTk3NzY0ODI1ODIwOTIyODUxNTYyNSkgLSAwLjAwNDk5OTk5OTg4ODI0MTI5MTA0NjE0MjU3ODEyNSkgKiBzdHJlbmd0aDsKICAgIGdyYWluID0gdmVjNCgxLjApIC0gZ3JhaW47CiAgICBoaWdocCB2ZWMyIHZhbHVlID0gKHJlc29sdXRpb24gKiBncmFpbi54eSkgKiAwLjA7CiAgICBoaWdocCB2ZWM0IGMxID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgLSB2YWx1ZSk7CiAgICBoaWdocCB2ZWM0IGMyID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBjMyA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgdmFsdWUpOwogICAgaGlnaHAgdmVjNCBjb2wgPSB2ZWM0KGMxLngsIGMyLnksIGMzLnosIChjMS53ICsgYzIudykgKyBjMy56KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gY29sICogZ3JhaW47Cn0KCg";
kha_Shaders.filmGrain_fragData1 = "s1043:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IHN0cmVuZ3RoID0gNS4wOwogICAgaGlnaHAgZmxvYXQgeCA9ICgodGV4Q29vcmQueCArIDQuMCkgKiAodGV4Q29vcmQueSArIDQuMCkpICogMTAuMDsKICAgIGhpZ2hwIHZlYzQgZ3JhaW4gPSB2ZWM0KG1vZCgobW9kKHgsIDEzLjApICsgMS4wKSAqIChtb2QoeCwgMTIzLjApICsgMS4wKSwgMC4wMDk5OTk5OTk3NzY0ODI1ODIwOTIyODUxNTYyNSkgLSAwLjAwNDk5OTk5OTg4ODI0MTI5MTA0NjE0MjU3ODEyNSkgKiBzdHJlbmd0aDsKICAgIGdyYWluID0gdmVjNCgxLjApIC0gZ3JhaW47CiAgICBoaWdocCB2ZWMyIHZhbHVlID0gKHJlc29sdXRpb24gKiBncmFpbi54eSkgKiAwLjA7CiAgICBoaWdocCB2ZWM0IGMxID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkIC0gdmFsdWUpOwogICAgaGlnaHAgdmVjNCBjMiA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWM0IGMzID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgdmFsdWUpOwogICAgaGlnaHAgdmVjNCBjb2wgPSB2ZWM0KGMxLngsIGMyLnksIGMzLnosIChjMS53ICsgYzIudykgKyBjMy56KTsKICAgIEZyYWdDb2xvciA9IGNvbCAqIGdyYWluOwp9Cgo";
kha_Shaders.filmGrain_fragData2 = "s951:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBmbG9hdCBzdHJlbmd0aCA9IDUuMDsKICAgIGZsb2F0IHggPSAoKHRleENvb3JkLnggKyA0LjApICogKHRleENvb3JkLnkgKyA0LjApKSAqIDEwLjA7CiAgICB2ZWM0IGdyYWluID0gdmVjNChtb2QoKG1vZCh4LCAxMy4wKSArIDEuMCkgKiAobW9kKHgsIDEyMy4wKSArIDEuMCksIDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUpIC0gMC4wMDQ5OTk5OTk4ODgyNDEyOTEwNDYxNDI1NzgxMjUpICogc3RyZW5ndGg7CiAgICBncmFpbiA9IHZlYzQoMS4wKSAtIGdyYWluOwogICAgdmVjMiB2YWx1ZSA9IChyZXNvbHV0aW9uICogZ3JhaW4ueHkpICogMC4wOwogICAgdmVjNCBjMSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gdmFsdWUpOwogICAgdmVjNCBjMiA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgYzMgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIHZhbHVlKTsKICAgIHZlYzQgY29sID0gdmVjNChjMS54LCBjMi55LCBjMy56LCAoYzEudyArIGMyLncpICsgYzMueik7CiAgICBnbF9GcmFnRGF0YVswXSA9IGNvbCAqIGdyYWluOwp9Cgo";
kha_Shaders.fov_fragData0 = "s4599:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCmhpZ2hwIGZsb2F0IGxpbmVhcml6ZShoaWdocCBmbG9hdCBkZXB0aCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICByZXR1cm4gY2FtZXJhUHJvai55IC8gKGRlcHRoIC0gY2FtZXJhUHJvai54KTsKfQoKaGlnaHAgdmVjMiByYW5kMihoaWdocCB2ZWMyIGNvb3JkKQp7CiAgICBoaWdocCBmbG9hdCBub2lzZVggPSAoKChmcmFjdCgxLjAgLSAoY29vcmQueCAqIDU1MC4wKSkgKiAwLjI1KSArIChmcmFjdChjb29yZC55ICogMjUwLjApICogMC43NSkpICogMi4wKSAtIDEuMDsKICAgIGhpZ2hwIGZsb2F0IG5vaXNlWSA9ICgoKGZyYWN0KDEuMCAtIChjb29yZC54ICogNTUwLjApKSAqIDAuNzUpICsgKGZyYWN0KGNvb3JkLnkgKiAyNTAuMCkgKiAwLjI1KSkgKiAyLjApIC0gMS4wOwogICAgcmV0dXJuIHZlYzIobm9pc2VYLCBub2lzZVkpOwp9CgpoaWdocCB2ZWMzIGNvbG9yKGhpZ2hwIHZlYzIgY29vcmRzLCBoaWdocCBmbG9hdCBibHVyLCBoaWdocCBzYW1wbGVyMkQgdGV4XzEsIGhpZ2hwIHZlYzIgdGV4U3RlcCkKewogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuMCk7CiAgICBjb2wueCA9IHRleHR1cmUyRCh0ZXhfMSwgY29vcmRzICsgKCgodmVjMigwLjAsIDEuMCkgKiB0ZXhTdGVwKSAqIDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KSAqIGJsdXIpKS54OwogICAgY29sLnkgPSB0ZXh0dXJlMkQodGV4XzEsIGNvb3JkcyArICgoKHZlYzIoLTAuODY1OTk5OTk2NjYyMTM5ODkyNTc4MTI1LCAtMC41KSAqIHRleFN0ZXApICogMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUpICogYmx1cikpLnk7CiAgICBjb2wueiA9IHRleHR1cmUyRCh0ZXhfMSwgY29vcmRzICsgKCgodmVjMigwLjg2NTk5OTk5NjY2MjEzOTg5MjU3ODEyNSwgLTAuNSkgKiB0ZXhTdGVwKSAqIDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KSAqIGJsdXIpKS56OwogICAgaGlnaHAgZmxvYXQgbHVtID0gZG90KGNvbCwgdmVjMygwLjI5ODk5OTk5NDk5MzIwOTgzODg2NzE4NzUsIDAuNTg3MDAwMDEyMzk3NzY2MTEzMjgxMjUsIDAuMTE0MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSk7CiAgICBoaWdocCBmbG9hdCB0aHJlc2ggPSBtYXgoKGx1bSAtIDAuNSkgKiAyLjAsIDAuMCk7CiAgICByZXR1cm4gY29sICsgbWl4KHZlYzMoMC4wKSwgY29sLCB2ZWMzKHRocmVzaCAqIGJsdXIpKTsKfQoKaGlnaHAgdmVjMyBkb2YoaGlnaHAgdmVjMiB0ZXhDb29yZF8xLCBoaWdocCBmbG9hdCBnZGVwdGgsIGhpZ2hwIHNhbXBsZXIyRCB0ZXhfMSwgaGlnaHAgc2FtcGxlcjJEIGdidWZmZXJEXzEsIGhpZ2hwIHZlYzIgdGV4U3RlcCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gY2FtZXJhUHJvajsKICAgIGhpZ2hwIGZsb2F0IGRlcHRoID0gbGluZWFyaXplKGdkZXB0aCwgcGFyYW0pOwogICAgaGlnaHAgdmVjMiBwYXJhbV8xID0gY2FtZXJhUHJvajsKICAgIGhpZ2hwIGZsb2F0IGZEZXB0aCA9IGxpbmVhcml6ZSgodGV4dHVyZTJEKGdidWZmZXJEXzEsIHZlYzIoMC41LCAwLjQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpKS54ICogMi4wKSAtIDEuMCwgcGFyYW1fMSk7CiAgICBoaWdocCBmbG9hdCBkID0gZkRlcHRoICogMTAwMC4wOwogICAgaGlnaHAgZmxvYXQgbyA9IGRlcHRoICogMTAwMC4wOwogICAgaGlnaHAgZmxvYXQgYSA9IChvICogMjUwLjApIC8gKG8gLSAyNTAuMCk7CiAgICBoaWdocCBmbG9hdCBiID0gKGQgKiAyNTAuMCkgLyAoZCAtIDI1MC4wKTsKICAgIGhpZ2hwIGZsb2F0IGMgPSAoZCAtIDI1MC4wKSAvICgoZCAqIDE1LjApICogMC4xMDk5OTk5OTk0MDM5NTM1NTIyNDYwOTM3NSk7CiAgICBoaWdocCBmbG9hdCBibHVyID0gYWJzKGEgLSBiKSAqIGM7CiAgICBibHVyID0gY2xhbXAoYmx1ciwgMC4wLCAxLjApOwogICAgaGlnaHAgdmVjMiBfbm9pc2UgPSAocmFuZDIodGV4Q29vcmRfMSkgKiA5Ljk5OTk5OTc0NzM3ODc1MTYzNTU1MTQ1MjYzNjcxODhlLTA1KSAqIGJsdXI7CiAgICBoaWdocCBmbG9hdCB3ID0gKCh0ZXhTdGVwLnggKiBibHVyKSAqIDEuMCkgKyBfbm9pc2UueDsKICAgIGhpZ2hwIGZsb2F0IGggPSAoKHRleFN0ZXAueSAqIGJsdXIpICogMS4wKSArIF9ub2lzZS55OwogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuMCk7CiAgICBpZiAoYmx1ciA8IDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNSkKICAgIHsKICAgICAgICBjb2wgPSB0ZXh0dXJlMkQodGV4XzEsIHRleENvb3JkXzEpLnh5ejsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBjb2wgPSB0ZXh0dXJlMkQodGV4XzEsIHRleENvb3JkXzEpLnh5ejsKICAgICAgICBoaWdocCBmbG9hdCBzID0gMS4wOwogICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IDI7IGkrKykKICAgICAgICB7CiAgICAgICAgICAgIGludCByaW5nc2FtcGxlcyA9IGkgKiAyOwogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IHJpbmdzYW1wbGVzOyBqKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhpZ2hwIGZsb2F0IF9zdGVwID0gNi4yODMxODU0ODIwMjUxNDY0ODQzNzUgLyBmbG9hdChyaW5nc2FtcGxlcyk7CiAgICAgICAgICAgICAgICBoaWdocCBmbG9hdCBwdyA9IGNvcyhmbG9hdChqKSAqIF9zdGVwKSAqIGZsb2F0KGkpOwogICAgICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGggPSBzaW4oZmxvYXQoaikgKiBfc3RlcCkgKiBmbG9hdChpKTsKICAgICAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHAgPSAxLjA7CiAgICAgICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSB0ZXhDb29yZF8xICsgdmVjMihwdyAqIHcsIHBoICogaCk7CiAgICAgICAgICAgICAgICBjb2wgKz0gKChjb2xvcihwYXJhbV8yLCBibHVyLCB0ZXhfMSwgdGV4U3RlcCkgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgICAgIHMgKz0gKCgxLjAgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb2wgLz0gdmVjMyhzKTsKICAgIH0KICAgIHJldHVybiBjb2w7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IGRlcHRoID0gdGV4dHVyZTJEKGdidWZmZXJELCB0ZXhDb29yZCkueDsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNChkb2YodGV4Q29vcmQsIGRlcHRoLCB0ZXgsIGdidWZmZXJELCB2ZWMyKDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUpLCB2ZWMyKDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUsIDAuMjUpKSwgMS4wKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gY29sOwp9Cgo";
kha_Shaders.fov_fragData1 = "s4606:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCmhpZ2hwIGZsb2F0IGxpbmVhcml6ZShoaWdocCBmbG9hdCBkZXB0aCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICByZXR1cm4gY2FtZXJhUHJvai55IC8gKGRlcHRoIC0gY2FtZXJhUHJvai54KTsKfQoKaGlnaHAgdmVjMiByYW5kMihoaWdocCB2ZWMyIGNvb3JkKQp7CiAgICBoaWdocCBmbG9hdCBub2lzZVggPSAoKChmcmFjdCgxLjAgLSAoY29vcmQueCAqIDU1MC4wKSkgKiAwLjI1KSArIChmcmFjdChjb29yZC55ICogMjUwLjApICogMC43NSkpICogMi4wKSAtIDEuMDsKICAgIGhpZ2hwIGZsb2F0IG5vaXNlWSA9ICgoKGZyYWN0KDEuMCAtIChjb29yZC54ICogNTUwLjApKSAqIDAuNzUpICsgKGZyYWN0KGNvb3JkLnkgKiAyNTAuMCkgKiAwLjI1KSkgKiAyLjApIC0gMS4wOwogICAgcmV0dXJuIHZlYzIobm9pc2VYLCBub2lzZVkpOwp9CgpoaWdocCB2ZWMzIGNvbG9yKGhpZ2hwIHZlYzIgY29vcmRzLCBoaWdocCBmbG9hdCBibHVyLCBoaWdocCBzYW1wbGVyMkQgdGV4XzEsIGhpZ2hwIHZlYzIgdGV4U3RlcCkKewogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuMCk7CiAgICBjb2wueCA9IHRleHR1cmUodGV4XzEsIGNvb3JkcyArICgoKHZlYzIoMC4wLCAxLjApICogdGV4U3RlcCkgKiAwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSkgKiBibHVyKSkueDsKICAgIGNvbC55ID0gdGV4dHVyZSh0ZXhfMSwgY29vcmRzICsgKCgodmVjMigtMC44NjU5OTk5OTY2NjIxMzk4OTI1NzgxMjUsIC0wLjUpICogdGV4U3RlcCkgKiAwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSkgKiBibHVyKSkueTsKICAgIGNvbC56ID0gdGV4dHVyZSh0ZXhfMSwgY29vcmRzICsgKCgodmVjMigwLjg2NTk5OTk5NjY2MjEzOTg5MjU3ODEyNSwgLTAuNSkgKiB0ZXhTdGVwKSAqIDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KSAqIGJsdXIpKS56OwogICAgaGlnaHAgZmxvYXQgbHVtID0gZG90KGNvbCwgdmVjMygwLjI5ODk5OTk5NDk5MzIwOTgzODg2NzE4NzUsIDAuNTg3MDAwMDEyMzk3NzY2MTEzMjgxMjUsIDAuMTE0MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSk7CiAgICBoaWdocCBmbG9hdCB0aHJlc2ggPSBtYXgoKGx1bSAtIDAuNSkgKiAyLjAsIDAuMCk7CiAgICByZXR1cm4gY29sICsgbWl4KHZlYzMoMC4wKSwgY29sLCB2ZWMzKHRocmVzaCAqIGJsdXIpKTsKfQoKaGlnaHAgdmVjMyBkb2YoaGlnaHAgdmVjMiB0ZXhDb29yZF8xLCBoaWdocCBmbG9hdCBnZGVwdGgsIGhpZ2hwIHNhbXBsZXIyRCB0ZXhfMSwgaGlnaHAgc2FtcGxlcjJEIGdidWZmZXJEXzEsIGhpZ2hwIHZlYzIgdGV4U3RlcCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gY2FtZXJhUHJvajsKICAgIGhpZ2hwIGZsb2F0IGRlcHRoID0gbGluZWFyaXplKGdkZXB0aCwgcGFyYW0pOwogICAgaGlnaHAgdmVjMiBwYXJhbV8xID0gY2FtZXJhUHJvajsKICAgIGhpZ2hwIGZsb2F0IGZEZXB0aCA9IGxpbmVhcml6ZSgodGV4dHVyZShnYnVmZmVyRF8xLCB2ZWMyKDAuNSwgMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSkueCAqIDIuMCkgLSAxLjAsIHBhcmFtXzEpOwogICAgaGlnaHAgZmxvYXQgZCA9IGZEZXB0aCAqIDEwMDAuMDsKICAgIGhpZ2hwIGZsb2F0IG8gPSBkZXB0aCAqIDEwMDAuMDsKICAgIGhpZ2hwIGZsb2F0IGEgPSAobyAqIDI1MC4wKSAvIChvIC0gMjUwLjApOwogICAgaGlnaHAgZmxvYXQgYiA9IChkICogMjUwLjApIC8gKGQgLSAyNTAuMCk7CiAgICBoaWdocCBmbG9hdCBjID0gKGQgLSAyNTAuMCkgLyAoKGQgKiAxNS4wKSAqIDAuMTA5OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUpOwogICAgaGlnaHAgZmxvYXQgYmx1ciA9IGFicyhhIC0gYikgKiBjOwogICAgYmx1ciA9IGNsYW1wKGJsdXIsIDAuMCwgMS4wKTsKICAgIGhpZ2hwIHZlYzIgX25vaXNlID0gKHJhbmQyKHRleENvb3JkXzEpICogOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNSkgKiBibHVyOwogICAgaGlnaHAgZmxvYXQgdyA9ICgodGV4U3RlcC54ICogYmx1cikgKiAxLjApICsgX25vaXNlLng7CiAgICBoaWdocCBmbG9hdCBoID0gKCh0ZXhTdGVwLnkgKiBibHVyKSAqIDEuMCkgKyBfbm9pc2UueTsKICAgIGhpZ2hwIHZlYzMgY29sID0gdmVjMygwLjApOwogICAgaWYgKGJsdXIgPCAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjUpCiAgICB7CiAgICAgICAgY29sID0gdGV4dHVyZSh0ZXhfMSwgdGV4Q29vcmRfMSkueHl6OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGNvbCA9IHRleHR1cmUodGV4XzEsIHRleENvb3JkXzEpLnh5ejsKICAgICAgICBoaWdocCBmbG9hdCBzID0gMS4wOwogICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IDI7IGkrKykKICAgICAgICB7CiAgICAgICAgICAgIGludCByaW5nc2FtcGxlcyA9IGkgKiAyOwogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IHJpbmdzYW1wbGVzOyBqKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhpZ2hwIGZsb2F0IF9zdGVwID0gNi4yODMxODU0ODIwMjUxNDY0ODQzNzUgLyBmbG9hdChyaW5nc2FtcGxlcyk7CiAgICAgICAgICAgICAgICBoaWdocCBmbG9hdCBwdyA9IGNvcyhmbG9hdChqKSAqIF9zdGVwKSAqIGZsb2F0KGkpOwogICAgICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGggPSBzaW4oZmxvYXQoaikgKiBfc3RlcCkgKiBmbG9hdChpKTsKICAgICAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHAgPSAxLjA7CiAgICAgICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSB0ZXhDb29yZF8xICsgdmVjMihwdyAqIHcsIHBoICogaCk7CiAgICAgICAgICAgICAgICBjb2wgKz0gKChjb2xvcihwYXJhbV8yLCBibHVyLCB0ZXhfMSwgdGV4U3RlcCkgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgICAgIHMgKz0gKCgxLjAgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb2wgLz0gdmVjMyhzKTsKICAgIH0KICAgIHJldHVybiBjb2w7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IGRlcHRoID0gdGV4dHVyZShnYnVmZmVyRCwgdGV4Q29vcmQpLng7CiAgICBoaWdocCB2ZWM0IGNvbCA9IHZlYzQoZG9mKHRleENvb3JkLCBkZXB0aCwgdGV4LCBnYnVmZmVyRCwgdmVjMigwLjAwOTk5OTk5OTc3NjQ4MjU4MjA5MjI4NTE1NjI1KSwgdmVjMigwLjIwMDAwMDAwMjk4MDIzMjIzODc2OTUzMTI1LCAwLjI1KSksIDEuMCk7CiAgICBGcmFnQ29sb3IgPSBjb2w7Cn0KCg";
kha_Shaders.fov_fragData2 = "s4279:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXJEOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCmZsb2F0IGxpbmVhcml6ZShmbG9hdCBkZXB0aCwgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICByZXR1cm4gY2FtZXJhUHJvai55IC8gKGRlcHRoIC0gY2FtZXJhUHJvai54KTsKfQoKdmVjMiByYW5kMih2ZWMyIGNvb3JkKQp7CiAgICBmbG9hdCBub2lzZVggPSAoKChmcmFjdCgxLjAgLSAoY29vcmQueCAqIDU1MC4wKSkgKiAwLjI1KSArIChmcmFjdChjb29yZC55ICogMjUwLjApICogMC43NSkpICogMi4wKSAtIDEuMDsKICAgIGZsb2F0IG5vaXNlWSA9ICgoKGZyYWN0KDEuMCAtIChjb29yZC54ICogNTUwLjApKSAqIDAuNzUpICsgKGZyYWN0KGNvb3JkLnkgKiAyNTAuMCkgKiAwLjI1KSkgKiAyLjApIC0gMS4wOwogICAgcmV0dXJuIHZlYzIobm9pc2VYLCBub2lzZVkpOwp9Cgp2ZWMzIGNvbG9yKHZlYzIgY29vcmRzLCBmbG9hdCBibHVyLCBtZWRpdW1wIHNhbXBsZXIyRCB0ZXhfMSwgdmVjMiB0ZXhTdGVwKQp7CiAgICB2ZWMzIGNvbCA9IHZlYzMoMC4wKTsKICAgIGNvbC54ID0gdGV4dHVyZTJEKHRleF8xLCBjb29yZHMgKyAoKCh2ZWMyKDAuMCwgMS4wKSAqIHRleFN0ZXApICogMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUpICogYmx1cikpLng7CiAgICBjb2wueSA9IHRleHR1cmUyRCh0ZXhfMSwgY29vcmRzICsgKCgodmVjMigtMC44NjU5OTk5OTY2NjIxMzk4OTI1NzgxMjUsIC0wLjUpICogdGV4U3RlcCkgKiAwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSkgKiBibHVyKSkueTsKICAgIGNvbC56ID0gdGV4dHVyZTJEKHRleF8xLCBjb29yZHMgKyAoKCh2ZWMyKDAuODY1OTk5OTk2NjYyMTM5ODkyNTc4MTI1LCAtMC41KSAqIHRleFN0ZXApICogMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUpICogYmx1cikpLno7CiAgICBmbG9hdCBsdW0gPSBkb3QoY29sLCB2ZWMzKDAuMjk4OTk5OTk0OTkzMjA5ODM4ODY3MTg3NSwgMC41ODcwMDAwMTIzOTc3NjYxMTMyODEyNSwgMC4xMTQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpKTsKICAgIGZsb2F0IHRocmVzaCA9IG1heCgobHVtIC0gMC41KSAqIDIuMCwgMC4wKTsKICAgIHJldHVybiBjb2wgKyBtaXgodmVjMygwLjApLCBjb2wsIHZlYzModGhyZXNoICogYmx1cikpOwp9Cgp2ZWMzIGRvZih2ZWMyIHRleENvb3JkXzEsIGZsb2F0IGdkZXB0aCwgbWVkaXVtcCBzYW1wbGVyMkQgdGV4XzEsIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXJEXzEsIHZlYzIgdGV4U3RlcCwgdmVjMiBjYW1lcmFQcm9qKQp7CiAgICB2ZWMyIHBhcmFtID0gY2FtZXJhUHJvajsKICAgIGZsb2F0IGRlcHRoID0gbGluZWFyaXplKGdkZXB0aCwgcGFyYW0pOwogICAgdmVjMiBwYXJhbV8xID0gY2FtZXJhUHJvajsKICAgIGZsb2F0IGZEZXB0aCA9IGxpbmVhcml6ZSgodGV4dHVyZTJEKGdidWZmZXJEXzEsIHZlYzIoMC41LCAwLjQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpKS54ICogMi4wKSAtIDEuMCwgcGFyYW1fMSk7CiAgICBmbG9hdCBkID0gZkRlcHRoICogMTAwMC4wOwogICAgZmxvYXQgbyA9IGRlcHRoICogMTAwMC4wOwogICAgZmxvYXQgYSA9IChvICogMjUwLjApIC8gKG8gLSAyNTAuMCk7CiAgICBmbG9hdCBiID0gKGQgKiAyNTAuMCkgLyAoZCAtIDI1MC4wKTsKICAgIGZsb2F0IGMgPSAoZCAtIDI1MC4wKSAvICgoZCAqIDE1LjApICogMC4xMDk5OTk5OTk0MDM5NTM1NTIyNDYwOTM3NSk7CiAgICBmbG9hdCBibHVyID0gYWJzKGEgLSBiKSAqIGM7CiAgICBibHVyID0gY2xhbXAoYmx1ciwgMC4wLCAxLjApOwogICAgdmVjMiBfbm9pc2UgPSAocmFuZDIodGV4Q29vcmRfMSkgKiA5Ljk5OTk5OTc0NzM3ODc1MTYzNTU1MTQ1MjYzNjcxODhlLTA1KSAqIGJsdXI7CiAgICBmbG9hdCB3ID0gKCh0ZXhTdGVwLnggKiBibHVyKSAqIDEuMCkgKyBfbm9pc2UueDsKICAgIGZsb2F0IGggPSAoKHRleFN0ZXAueSAqIGJsdXIpICogMS4wKSArIF9ub2lzZS55OwogICAgdmVjMyBjb2wgPSB2ZWMzKDAuMCk7CiAgICBpZiAoYmx1ciA8IDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNSkKICAgIHsKICAgICAgICBjb2wgPSB0ZXh0dXJlMkQodGV4XzEsIHRleENvb3JkXzEpLnh5ejsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBjb2wgPSB0ZXh0dXJlMkQodGV4XzEsIHRleENvb3JkXzEpLnh5ejsKICAgICAgICBmbG9hdCBzID0gMS4wOwogICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IDI7IGkrKykKICAgICAgICB7CiAgICAgICAgICAgIGludCByaW5nc2FtcGxlcyA9IGkgKiAyOwogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IHJpbmdzYW1wbGVzOyBqKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZsb2F0IF9zdGVwID0gNi4yODMxODU0ODIwMjUxNDY0ODQzNzUgLyBmbG9hdChyaW5nc2FtcGxlcyk7CiAgICAgICAgICAgICAgICBmbG9hdCBwdyA9IGNvcyhmbG9hdChqKSAqIF9zdGVwKSAqIGZsb2F0KGkpOwogICAgICAgICAgICAgICAgZmxvYXQgcGggPSBzaW4oZmxvYXQoaikgKiBfc3RlcCkgKiBmbG9hdChpKTsKICAgICAgICAgICAgICAgIGZsb2F0IHAgPSAxLjA7CiAgICAgICAgICAgICAgICB2ZWMyIHBhcmFtXzIgPSB0ZXhDb29yZF8xICsgdmVjMihwdyAqIHcsIHBoICogaCk7CiAgICAgICAgICAgICAgICBjb2wgKz0gKChjb2xvcihwYXJhbV8yLCBibHVyLCB0ZXhfMSwgdGV4U3RlcCkgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgICAgIHMgKz0gKCgxLjAgKiBtaXgoMS4wLCBmbG9hdChpKSAvIDIuMCwgMC41KSkgKiBwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb2wgLz0gdmVjMyhzKTsKICAgIH0KICAgIHJldHVybiBjb2w7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGZsb2F0IGRlcHRoID0gdGV4dHVyZTJEKGdidWZmZXJELCB0ZXhDb29yZCkueDsKICAgIHZlYzQgY29sID0gdmVjNChkb2YodGV4Q29vcmQsIGRlcHRoLCB0ZXgsIGdidWZmZXJELCB2ZWMyKDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUpLCB2ZWMyKDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUsIDAuMjUpKSwgMS4wKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gY29sOwp9Cgo";
kha_Shaders.fxaa_fragData0 = "s2844:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHNjcmVlblNpemVJbnY7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JOVyA9IHRleENvb3JkICsgKHZlYzIoLTEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JORSA9IHRleENvb3JkICsgKHZlYzIoMS4wLCAtMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgdmVjMiB0Y3JnYlNXID0gdGV4Q29vcmQgKyAodmVjMigtMS4wLCAxLjApICogc2NyZWVuU2l6ZUludik7CiAgICBoaWdocCB2ZWMyIHRjcmdiU0UgPSB0ZXhDb29yZCArICh2ZWMyKDEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JNID0gdmVjMih0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIHJnYk5XID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JOVykueHl6OwogICAgaGlnaHAgdmVjMyByZ2JORSA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTkUpLnh5ejsKICAgIGhpZ2hwIHZlYzMgcmdiU1cgPSB0ZXh0dXJlMkQodGV4LCB0Y3JnYlNXKS54eXo7CiAgICBoaWdocCB2ZWMzIHJnYlNFID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JTRSkueHl6OwogICAgaGlnaHAgdmVjNCB0ZXhDb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTSk7CiAgICBoaWdocCB2ZWMzIHJnYk0gPSB0ZXhDb2xvci54eXo7CiAgICBoaWdocCB2ZWMzIGx1bWEgPSB2ZWMzKDAuMjk4OTk5OTk0OTkzMjA5ODM4ODY3MTg3NSwgMC41ODcwMDAwMTIzOTc3NjYxMTMyODEyNSwgMC4xMTQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpOwogICAgaGlnaHAgZmxvYXQgbHVtYU5XID0gZG90KHJnYk5XLCBsdW1hKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFORSA9IGRvdChyZ2JORSwgbHVtYSk7CiAgICBoaWdocCBmbG9hdCBsdW1hU1cgPSBkb3QocmdiU1csIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYVNFID0gZG90KHJnYlNFLCBsdW1hKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFNID0gZG90KHJnYk0sIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYU1pbiA9IG1pbihsdW1hTSwgbWluKG1pbihsdW1hTlcsIGx1bWFORSksIG1pbihsdW1hU1csIGx1bWFTRSkpKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFNYXggPSBtYXgobHVtYU0sIG1heChtYXgobHVtYU5XLCBsdW1hTkUpLCBtYXgobHVtYVNXLCBsdW1hU0UpKSk7CiAgICBoaWdocCB2ZWMyIGRpcjsKICAgIGRpci54ID0gLSgobHVtYU5XICsgbHVtYU5FKSAtIChsdW1hU1cgKyBsdW1hU0UpKTsKICAgIGRpci55ID0gKGx1bWFOVyArIGx1bWFTVykgLSAobHVtYU5FICsgbHVtYVNFKTsKICAgIGhpZ2hwIGZsb2F0IGRpclJlZHVjZSA9IG1heCgoKChsdW1hTlcgKyBsdW1hTkUpICsgbHVtYVNXKSArIGx1bWFTRSkgKiAwLjA4MzMzMzMzNTgxNjg2MDE5ODk3NDYwOTM3NSwgMC4wMTk5OTk5OTk1NTI5NjUxNjQxODQ1NzAzMTI1KTsKICAgIGhpZ2hwIGZsb2F0IHJjcERpck1pbiA9IDEuMCAvIChtaW4oYWJzKGRpci54KSwgYWJzKGRpci55KSkgKyBkaXJSZWR1Y2UpOwogICAgZGlyID0gbWluKHZlYzIoNC4wKSwgbWF4KHZlYzIoLTQuMCksIGRpciAqIHJjcERpck1pbikpICogc2NyZWVuU2l6ZUludjsKICAgIGhpZ2hwIHZlYzQgcmdiQSA9ICh0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXIgKiAoLTAuMTY2NjY2NjcxNjMzNzIwMzk3OTQ5MjE4NzUpKSkgKyB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXIgKiAwLjE2NjY2NjY3MTYzMzcyMDM5Nzk0OTIxODc1KSkpICogMC41OwogICAgZ2xfRnJhZ0RhdGFbMF0gPSAocmdiQSAqIDAuNSkgKyAoKHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgKGRpciAqICgtMC41KSkpICsgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlyICogMC41KSkpICogMC4yNSk7CiAgICBoaWdocCBmbG9hdCBsdW1hQiA9IGRvdChnbF9GcmFnRGF0YVswXS54eXosIGx1bWEpOwogICAgaWYgKChsdW1hQiA8IGx1bWFNaW4pIHx8IChsdW1hQiA%IGx1bWFNYXgpKQogICAgewogICAgICAgIGdsX0ZyYWdEYXRhWzBdID0gcmdiQTsKICAgIH0KfQoK";
kha_Shaders.fxaa_fragData1 = "s2832:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHNjcmVlblNpemVJbnY7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JOVyA9IHRleENvb3JkICsgKHZlYzIoLTEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JORSA9IHRleENvb3JkICsgKHZlYzIoMS4wLCAtMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgdmVjMiB0Y3JnYlNXID0gdGV4Q29vcmQgKyAodmVjMigtMS4wLCAxLjApICogc2NyZWVuU2l6ZUludik7CiAgICBoaWdocCB2ZWMyIHRjcmdiU0UgPSB0ZXhDb29yZCArICh2ZWMyKDEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JNID0gdmVjMih0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIHJnYk5XID0gdGV4dHVyZSh0ZXgsIHRjcmdiTlcpLnh5ejsKICAgIGhpZ2hwIHZlYzMgcmdiTkUgPSB0ZXh0dXJlKHRleCwgdGNyZ2JORSkueHl6OwogICAgaGlnaHAgdmVjMyByZ2JTVyA9IHRleHR1cmUodGV4LCB0Y3JnYlNXKS54eXo7CiAgICBoaWdocCB2ZWMzIHJnYlNFID0gdGV4dHVyZSh0ZXgsIHRjcmdiU0UpLnh5ejsKICAgIGhpZ2hwIHZlYzQgdGV4Q29sb3IgPSB0ZXh0dXJlKHRleCwgdGNyZ2JNKTsKICAgIGhpZ2hwIHZlYzMgcmdiTSA9IHRleENvbG9yLnh5ejsKICAgIGhpZ2hwIHZlYzMgbHVtYSA9IHZlYzMoMC4yOTg5OTk5OTQ5OTMyMDk4Mzg4NjcxODc1LCAwLjU4NzAwMDAxMjM5Nzc2NjExMzI4MTI1LCAwLjExNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSk7CiAgICBoaWdocCBmbG9hdCBsdW1hTlcgPSBkb3QocmdiTlcsIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYU5FID0gZG90KHJnYk5FLCBsdW1hKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFTVyA9IGRvdChyZ2JTVywgbHVtYSk7CiAgICBoaWdocCBmbG9hdCBsdW1hU0UgPSBkb3QocmdiU0UsIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYU0gPSBkb3QocmdiTSwgbHVtYSk7CiAgICBoaWdocCBmbG9hdCBsdW1hTWluID0gbWluKGx1bWFNLCBtaW4obWluKGx1bWFOVywgbHVtYU5FKSwgbWluKGx1bWFTVywgbHVtYVNFKSkpOwogICAgaGlnaHAgZmxvYXQgbHVtYU1heCA9IG1heChsdW1hTSwgbWF4KG1heChsdW1hTlcsIGx1bWFORSksIG1heChsdW1hU1csIGx1bWFTRSkpKTsKICAgIGhpZ2hwIHZlYzIgZGlyOwogICAgZGlyLnggPSAtKChsdW1hTlcgKyBsdW1hTkUpIC0gKGx1bWFTVyArIGx1bWFTRSkpOwogICAgZGlyLnkgPSAobHVtYU5XICsgbHVtYVNXKSAtIChsdW1hTkUgKyBsdW1hU0UpOwogICAgaGlnaHAgZmxvYXQgZGlyUmVkdWNlID0gbWF4KCgoKGx1bWFOVyArIGx1bWFORSkgKyBsdW1hU1cpICsgbHVtYVNFKSAqIDAuMDgzMzMzMzM1ODE2ODYwMTk4OTc0NjA5Mzc1LCAwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUpOwogICAgaGlnaHAgZmxvYXQgcmNwRGlyTWluID0gMS4wIC8gKG1pbihhYnMoZGlyLngpLCBhYnMoZGlyLnkpKSArIGRpclJlZHVjZSk7CiAgICBkaXIgPSBtaW4odmVjMig0LjApLCBtYXgodmVjMigtNC4wKSwgZGlyICogcmNwRGlyTWluKSkgKiBzY3JlZW5TaXplSW52OwogICAgaGlnaHAgdmVjNCByZ2JBID0gKHRleHR1cmUodGV4LCB0ZXhDb29yZCArIChkaXIgKiAoLTAuMTY2NjY2NjcxNjMzNzIwMzk3OTQ5MjE4NzUpKSkgKyB0ZXh0dXJlKHRleCwgdGV4Q29vcmQgKyAoZGlyICogMC4xNjY2NjY2NzE2MzM3MjAzOTc5NDkyMTg3NSkpKSAqIDAuNTsKICAgIGZyYWdDb2xvciA9IChyZ2JBICogMC41KSArICgodGV4dHVyZSh0ZXgsIHRleENvb3JkICsgKGRpciAqICgtMC41KSkpICsgdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgKGRpciAqIDAuNSkpKSAqIDAuMjUpOwogICAgaGlnaHAgZmxvYXQgbHVtYUIgPSBkb3QoZnJhZ0NvbG9yLnh5eiwgbHVtYSk7CiAgICBpZiAoKGx1bWFCIDwgbHVtYU1pbikgfHwgKGx1bWFCID4gbHVtYU1heCkpCiAgICB7CiAgICAgICAgZnJhZ0NvbG9yID0gcmdiQTsKICAgIH0KfQoK";
kha_Shaders.fxaa_fragData2 = "s2642:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHRjcmdiTlcgPSB0ZXhDb29yZCArICh2ZWMyKC0xLjApICogc2NyZWVuU2l6ZUludik7CiAgICB2ZWMyIHRjcmdiTkUgPSB0ZXhDb29yZCArICh2ZWMyKDEuMCwgLTEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIHZlYzIgdGNyZ2JTVyA9IHRleENvb3JkICsgKHZlYzIoLTEuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgdmVjMiB0Y3JnYlNFID0gdGV4Q29vcmQgKyAodmVjMigxLjApICogc2NyZWVuU2l6ZUludik7CiAgICB2ZWMyIHRjcmdiTSA9IHZlYzIodGV4Q29vcmQpOwogICAgdmVjMyByZ2JOVyA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTlcpLnh5ejsKICAgIHZlYzMgcmdiTkUgPSB0ZXh0dXJlMkQodGV4LCB0Y3JnYk5FKS54eXo7CiAgICB2ZWMzIHJnYlNXID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JTVykueHl6OwogICAgdmVjMyByZ2JTRSA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiU0UpLnh5ejsKICAgIHZlYzQgdGV4Q29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0Y3JnYk0pOwogICAgdmVjMyByZ2JNID0gdGV4Q29sb3IueHl6OwogICAgdmVjMyBsdW1hID0gdmVjMygwLjI5ODk5OTk5NDk5MzIwOTgzODg2NzE4NzUsIDAuNTg3MDAwMDEyMzk3NzY2MTEzMjgxMjUsIDAuMTE0MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KTsKICAgIGZsb2F0IGx1bWFOVyA9IGRvdChyZ2JOVywgbHVtYSk7CiAgICBmbG9hdCBsdW1hTkUgPSBkb3QocmdiTkUsIGx1bWEpOwogICAgZmxvYXQgbHVtYVNXID0gZG90KHJnYlNXLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFTRSA9IGRvdChyZ2JTRSwgbHVtYSk7CiAgICBmbG9hdCBsdW1hTSA9IGRvdChyZ2JNLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFNaW4gPSBtaW4obHVtYU0sIG1pbihtaW4obHVtYU5XLCBsdW1hTkUpLCBtaW4obHVtYVNXLCBsdW1hU0UpKSk7CiAgICBmbG9hdCBsdW1hTWF4ID0gbWF4KGx1bWFNLCBtYXgobWF4KGx1bWFOVywgbHVtYU5FKSwgbWF4KGx1bWFTVywgbHVtYVNFKSkpOwogICAgdmVjMiBkaXI7CiAgICBkaXIueCA9IC0oKGx1bWFOVyArIGx1bWFORSkgLSAobHVtYVNXICsgbHVtYVNFKSk7CiAgICBkaXIueSA9IChsdW1hTlcgKyBsdW1hU1cpIC0gKGx1bWFORSArIGx1bWFTRSk7CiAgICBmbG9hdCBkaXJSZWR1Y2UgPSBtYXgoKCgobHVtYU5XICsgbHVtYU5FKSArIGx1bWFTVykgKyBsdW1hU0UpICogMC4wODMzMzMzMzU4MTY4NjAxOTg5NzQ2MDkzNzUsIDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSk7CiAgICBmbG9hdCByY3BEaXJNaW4gPSAxLjAgLyAobWluKGFicyhkaXIueCksIGFicyhkaXIueSkpICsgZGlyUmVkdWNlKTsKICAgIGRpciA9IG1pbih2ZWMyKDQuMCksIG1heCh2ZWMyKC00LjApLCBkaXIgKiByY3BEaXJNaW4pKSAqIHNjcmVlblNpemVJbnY7CiAgICB2ZWM0IHJnYkEgPSAodGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlyICogKC0wLjE2NjY2NjY3MTYzMzcyMDM5Nzk0OTIxODc1KSkpICsgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyAoZGlyICogMC4xNjY2NjY2NzE2MzM3MjAzOTc5NDkyMTg3NSkpKSAqIDAuNTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gKHJnYkEgKiAwLjUpICsgKCh0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIChkaXIgKiAoLTAuNSkpKSArIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgKGRpciAqIDAuNSkpKSAqIDAuMjUpOwogICAgZmxvYXQgbHVtYUIgPSBkb3QoZ2xfRnJhZ0RhdGFbMF0ueHl6LCBsdW1hKTsKICAgIGlmICgobHVtYUIgPCBsdW1hTWluKSB8fCAobHVtYUIgPiBsdW1hTWF4KSkKICAgIHsKICAgICAgICBnbF9GcmFnRGF0YVswXSA9IHJnYkE7CiAgICB9Cn0KCg";
kha_Shaders.hBlurVertexShader_vertData0 = "s1048:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CgphdHRyaWJ1dGUgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWMyIHZfdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQwOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQxOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQyOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQzOwp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQ0Owp2YXJ5aW5nIHZlYzIgdl9ibHVyQ29vcmQ1OwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHZfdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIHZfYmx1ckNvb3JkMCA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTMuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMSA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTIuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMiA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTEuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMyA9IHRleFBvc2l0aW9uICsgKHZlYzIoMS4wKSAqIHJlc29sdXRpb24pOwogICAgdl9ibHVyQ29vcmQ0ID0gdGV4UG9zaXRpb24gKyAodmVjMigyLjApICogcmVzb2x1dGlvbik7CiAgICB2X2JsdXJDb29yZDUgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKDMuMCkgKiByZXNvbHV0aW9uKTsKfQoK";
kha_Shaders.hBlurVertexShader_vertData1 = "s996:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CgppbiB2ZWMzIHZlcnRleFBvc2l0aW9uOwpvdXQgdmVjMiB2X3RleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjMiB2X2JsdXJDb29yZDA7Cm91dCB2ZWMyIHZfYmx1ckNvb3JkMTsKb3V0IHZlYzIgdl9ibHVyQ29vcmQyOwpvdXQgdmVjMiB2X2JsdXJDb29yZDM7Cm91dCB2ZWMyIHZfYmx1ckNvb3JkNDsKb3V0IHZlYzIgdl9ibHVyQ29vcmQ1OwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHZfdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIHZfYmx1ckNvb3JkMCA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTMuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMSA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTIuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMiA9IHRleFBvc2l0aW9uICsgKHZlYzIoLTEuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkMyA9IHRleFBvc2l0aW9uICsgKHZlYzIoMS4wKSAqIHJlc29sdXRpb24pOwogICAgdl9ibHVyQ29vcmQ0ID0gdGV4UG9zaXRpb24gKyAodmVjMigyLjApICogcmVzb2x1dGlvbik7CiAgICB2X2JsdXJDb29yZDUgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKDMuMCkgKiByZXNvbHV0aW9uKTsKfQoK";
kha_Shaders.hBlurVertexShader_vertData2 = "s1166:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1lZGl1bXAgdmVjMiByZXNvbHV0aW9uOwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl90ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiB0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl9ibHVyQ29vcmQwOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB2X2JsdXJDb29yZDE7CnZhcnlpbmcgbWVkaXVtcCB2ZWMyIHZfYmx1ckNvb3JkMjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl9ibHVyQ29vcmQzOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB2X2JsdXJDb29yZDQ7CnZhcnlpbmcgbWVkaXVtcCB2ZWMyIHZfYmx1ckNvb3JkNTsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB2X3RleENvb3JkID0gdGV4UG9zaXRpb247CiAgICB2X2JsdXJDb29yZDAgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKC0zLjApICogcmVzb2x1dGlvbik7CiAgICB2X2JsdXJDb29yZDEgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKC0yLjApICogcmVzb2x1dGlvbik7CiAgICB2X2JsdXJDb29yZDIgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKC0xLjApICogcmVzb2x1dGlvbik7CiAgICB2X2JsdXJDb29yZDMgPSB0ZXhQb3NpdGlvbiArICh2ZWMyKDEuMCkgKiByZXNvbHV0aW9uKTsKICAgIHZfYmx1ckNvb3JkNCA9IHRleFBvc2l0aW9uICsgKHZlYzIoMi4wKSAqIHJlc29sdXRpb24pOwogICAgdl9ibHVyQ29vcmQ1ID0gdGV4UG9zaXRpb24gKyAodmVjMigzLjApICogcmVzb2x1dGlvbik7Cn0KCg";
kha_Shaders.meshBones_vertData0 = "s1426:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgYm9uZXNbMjNdOwp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7CnVuaWZvcm0gbWF0NCBtb2RlbDsKCmF0dHJpYnV0ZSB2ZWM0IGJvbmVJbmRleDsKYXR0cmlidXRlIHZlYzMgcG9zOwphdHRyaWJ1dGUgdmVjNCB3ZWlnaHRzOwphdHRyaWJ1dGUgdmVjMyBub3JtYWw7CnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIHZlYzIgdXY7Cgp2b2lkIG1haW4oKQp7CiAgICBpbnQgaW5kZXggPSBpbnQoYm9uZUluZGV4LngpOwogICAgdmVjNCBuZXdWZXJ0ZXggPSAoYm9uZXNbaW5kZXhdICogdmVjNChwb3MsIDEuMCkpICogd2VpZ2h0cy54OwogICAgdmVjNCBuZXdOb3JtYWwgPSAoYm9uZXNbaW5kZXhdICogdmVjNChub3JtYWwsIDAuMCkpICogd2VpZ2h0cy54OwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LnkpOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLnkpICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLnkpICsgbmV3Tm9ybWFsOwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LnopOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLnopICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLnopICsgbmV3Tm9ybWFsOwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LncpOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLncpICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLncpICsgbmV3Tm9ybWFsOwogICAgdGV4Q29vcmQgPSB1djsKICAgIGdsX1Bvc2l0aW9uID0gKChwcm9qZWN0aW9uICogdmlldykgKiBtb2RlbCkgKiB2ZWM0KG5ld1ZlcnRleC54eXosIDEuMCk7Cn0KCg";
kha_Shaders.meshBones_vertData1 = "s1378:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgYm9uZXNbMjNdOwp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7CnVuaWZvcm0gbWF0NCBtb2RlbDsKCmluIHZlYzQgYm9uZUluZGV4OwppbiB2ZWMzIHBvczsKaW4gdmVjNCB3ZWlnaHRzOwppbiB2ZWMzIG5vcm1hbDsKb3V0IHZlYzIgdGV4Q29vcmQ7CmluIHZlYzIgdXY7Cgp2b2lkIG1haW4oKQp7CiAgICBpbnQgaW5kZXggPSBpbnQoYm9uZUluZGV4LngpOwogICAgdmVjNCBuZXdWZXJ0ZXggPSAoYm9uZXNbaW5kZXhdICogdmVjNChwb3MsIDEuMCkpICogd2VpZ2h0cy54OwogICAgdmVjNCBuZXdOb3JtYWwgPSAoYm9uZXNbaW5kZXhdICogdmVjNChub3JtYWwsIDAuMCkpICogd2VpZ2h0cy54OwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LnkpOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLnkpICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLnkpICsgbmV3Tm9ybWFsOwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LnopOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLnopICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLnopICsgbmV3Tm9ybWFsOwogICAgaW5kZXggPSBpbnQoYm9uZUluZGV4LncpOwogICAgbmV3VmVydGV4ID0gKChib25lc1tpbmRleF0gKiB2ZWM0KHBvcywgMS4wKSkgKiB3ZWlnaHRzLncpICsgbmV3VmVydGV4OwogICAgbmV3Tm9ybWFsID0gKChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLncpICsgbmV3Tm9ybWFsOwogICAgdGV4Q29vcmQgPSB1djsKICAgIGdsX1Bvc2l0aW9uID0gKChwcm9qZWN0aW9uICogdmlldykgKiBtb2RlbCkgKiB2ZWM0KG5ld1ZlcnRleC54eXosIDEuMCk7Cn0KCg";
kha_Shaders.meshBones_vertData2 = "s1564:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBib25lc1syM107CnVuaWZvcm0gbWVkaXVtcCBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWVkaXVtcCBtYXQ0IHZpZXc7CnVuaWZvcm0gbWVkaXVtcCBtYXQ0IG1vZGVsOwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCBib25lSW5kZXg7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgcG9zOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHdlaWdodHM7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgbm9ybWFsOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiB1djsKCnZvaWQgbWFpbigpCnsKICAgIG1lZGl1bXAgaW50IGluZGV4ID0gaW50KGJvbmVJbmRleC54KTsKICAgIG1lZGl1bXAgdmVjNCBuZXdWZXJ0ZXggPSAoYm9uZXNbaW5kZXhdICogdmVjNChwb3MsIDEuMCkpICogd2VpZ2h0cy54OwogICAgbWVkaXVtcCB2ZWM0IG5ld05vcm1hbCA9IChib25lc1tpbmRleF0gKiB2ZWM0KG5vcm1hbCwgMC4wKSkgKiB3ZWlnaHRzLng7CiAgICBpbmRleCA9IGludChib25lSW5kZXgueSk7CiAgICBuZXdWZXJ0ZXggPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQocG9zLCAxLjApKSAqIHdlaWdodHMueSkgKyBuZXdWZXJ0ZXg7CiAgICBuZXdOb3JtYWwgPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQobm9ybWFsLCAwLjApKSAqIHdlaWdodHMueSkgKyBuZXdOb3JtYWw7CiAgICBpbmRleCA9IGludChib25lSW5kZXgueik7CiAgICBuZXdWZXJ0ZXggPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQocG9zLCAxLjApKSAqIHdlaWdodHMueikgKyBuZXdWZXJ0ZXg7CiAgICBuZXdOb3JtYWwgPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQobm9ybWFsLCAwLjApKSAqIHdlaWdodHMueikgKyBuZXdOb3JtYWw7CiAgICBpbmRleCA9IGludChib25lSW5kZXgudyk7CiAgICBuZXdWZXJ0ZXggPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQocG9zLCAxLjApKSAqIHdlaWdodHMudykgKyBuZXdWZXJ0ZXg7CiAgICBuZXdOb3JtYWwgPSAoKGJvbmVzW2luZGV4XSAqIHZlYzQobm9ybWFsLCAwLjApKSAqIHdlaWdodHMudykgKyBuZXdOb3JtYWw7CiAgICB0ZXhDb29yZCA9IHV2OwogICAgZ2xfUG9zaXRpb24gPSAoKHByb2plY3Rpb24gKiB2aWV3KSAqIG1vZGVsKSAqIHZlYzQobmV3VmVydGV4Lnh5eiwgMS4wKTsKfQoK";
kha_Shaders.meshNoShade_fragData0 = "s246:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7Cn0KCg";
kha_Shaders.meshNoShade_fragData1 = "s258:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgY29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7Cn0KCg";
kha_Shaders.meshNoShade_fragData2 = "s243:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpOwp9Cgo";
kha_Shaders.mesh_fragData0 = "s536:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzMgbm9ybTsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIGxpZ2h0ZGlyID0gdmVjMygtMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNSwgMC41LCAtMC4zMDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvciAqIHZlYzQoKHZlYzMoMS4wKSAqIGRvdChub3JtLCBsaWdodGRpcikpICsgdmVjMygwLjc1KSwgMS4wKTsKfQoK";
kha_Shaders.mesh_fragData1 = "s542:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgY29sb3I7CmluIGhpZ2hwIHZlYzMgbm9ybTsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjMyBsaWdodGRpciA9IHZlYzMoLTAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUsIDAuNSwgLTAuMzAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KTsKICAgIGNvbG9yID0gdGV4Y29sb3IgKiB2ZWM0KCh2ZWMzKDEuMCkgKiBkb3Qobm9ybSwgbGlnaHRkaXIpKSArIHZlYzMoMC43NSksIDEuMCk7Cn0KCg";
kha_Shaders.mesh_fragData2 = "s510:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWMzIG5vcm07Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpOwogICAgdmVjMyBsaWdodGRpciA9IHZlYzMoLTAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUsIDAuNSwgLTAuMzAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3IgKiB2ZWM0KCh2ZWMzKDEuMCkgKiBkb3Qobm9ybSwgbGlnaHRkaXIpKSArIHZlYzMoMC43NSksIDEuMCk7Cn0KCg";
kha_Shaders.mesh_vertData0 = "s260:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgbXZwOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwphdHRyaWJ1dGUgdmVjMiB1djsKYXR0cmlidXRlIHZlYzMgcG9zOwphdHRyaWJ1dGUgdmVjMyBub3JtYWw7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IHV2OwogICAgZ2xfUG9zaXRpb24gPSBtdnAgKiB2ZWM0KHBvcywgMS4wKTsKfQoK";
kha_Shaders.mesh_vertData1 = "s231:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgbXZwOwoKb3V0IHZlYzIgdGV4Q29vcmQ7CmluIHZlYzIgdXY7CmluIHZlYzMgcG9zOwppbiB2ZWMzIG5vcm1hbDsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gdXY7CiAgICBnbF9Qb3NpdGlvbiA9IG12cCAqIHZlYzQocG9zLCAxLjApOwp9Cgo";
kha_Shaders.mesh_vertData2 = "s314:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBtdnA7Cgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiB1djsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyBwb3M7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgbm9ybWFsOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSB1djsKICAgIGdsX1Bvc2l0aW9uID0gbXZwICogdmVjNChwb3MsIDEuMCk7Cn0KCg";
kha_Shaders.mirage_fragData0 = "s740:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHRpbWU7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGdsX0ZyYWdEYXRhWzBdLncgPSAxLjA7CiAgICBoaWdocCBmbG9hdCB4ID0gKDAuMDA4OTk5OTk5NjEyNTY5ODA4OTU5OTYwOTM3NSAqIHRleENvb3JkLngpICogc2luKDEwMC4wICogdGltZSk7CiAgICBoaWdocCBmbG9hdCB5ID0gKDAuMDA4OTk5OTk5NjEyNTY5ODA4OTU5OTYwOTM3NSAqIHRleENvb3JkLnkpICogY29zKDEwMC4wICogdGltZSk7CiAgICBoaWdocCB2ZWMyIGMgPSB2ZWMyKHRleENvb3JkLnggKyB4LCB0ZXhDb29yZC55ICsgeSk7CiAgICBoaWdocCB2ZWM0IGRpZmZ1c2VfY29sb3IgPSB0ZXh0dXJlMkQodGV4LCBjKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZGlmZnVzZV9jb2xvcjsKfQoK";
kha_Shaders.mirage_fragData1 = "s747:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHRpbWU7CgpvdXQgaGlnaHAgdmVjNCBGcmFnQ29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgRnJhZ0NvbG9yLncgPSAxLjA7CiAgICBoaWdocCBmbG9hdCB4ID0gKDAuMDA4OTk5OTk5NjEyNTY5ODA4OTU5OTYwOTM3NSAqIHRleENvb3JkLngpICogc2luKDEwMC4wICogdGltZSk7CiAgICBoaWdocCBmbG9hdCB5ID0gKDAuMDA4OTk5OTk5NjEyNTY5ODA4OTU5OTYwOTM3NSAqIHRleENvb3JkLnkpICogY29zKDEwMC4wICogdGltZSk7CiAgICBoaWdocCB2ZWMyIGMgPSB2ZWMyKHRleENvb3JkLnggKyB4LCB0ZXhDb29yZC55ICsgeSk7CiAgICBoaWdocCB2ZWM0IGRpZmZ1c2VfY29sb3IgPSB0ZXh0dXJlKHRleCwgYyk7CiAgICBGcmFnQ29sb3IgPSBkaWZmdXNlX2NvbG9yOwp9Cgo";
kha_Shaders.mirage_fragData2 = "s698:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCB0aW1lOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBnbF9GcmFnRGF0YVswXS53ID0gMS4wOwogICAgZmxvYXQgeCA9ICgwLjAwODk5OTk5OTYxMjU2OTgwODk1OTk2MDkzNzUgKiB0ZXhDb29yZC54KSAqIHNpbigxMDAuMCAqIHRpbWUpOwogICAgZmxvYXQgeSA9ICgwLjAwODk5OTk5OTYxMjU2OTgwODk1OTk2MDkzNzUgKiB0ZXhDb29yZC55KSAqIGNvcygxMDAuMCAqIHRpbWUpOwogICAgdmVjMiBjID0gdmVjMih0ZXhDb29yZC54ICsgeCwgdGV4Q29vcmQueSArIHkpOwogICAgdmVjNCBkaWZmdXNlX2NvbG9yID0gdGV4dHVyZTJEKHRleCwgYyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IGRpZmZ1c2VfY29sb3I7Cn0KCg";
kha_Shaders.mosaic_fragData0 = "s370:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCB0aWxlczsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiB1diA9IHRleENvb3JkOwogICAgdXYgPSBmbG9vcih1diAqIHRpbGVzKSAvIHZlYzIodGlsZXMpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXh0dXJlMkQodGV4LCB1dik7Cn0KCg";
kha_Shaders.mosaic_fragData1 = "s392:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCB0aWxlczsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiB1diA9IHRleENvb3JkOwogICAgdXYgPSBmbG9vcih1diAqIHRpbGVzKSAvIHZlYzIodGlsZXMpOwogICAgRnJhZ0NvbG9yID0gdGV4dHVyZSh0ZXgsIHV2KTsKfQoK";
kha_Shaders.mosaic_fragData2 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIGZsb2F0IHRpbGVzOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzIgdXYgPSB0ZXhDb29yZDsKICAgIHV2ID0gZmxvb3IodXYgKiB0aWxlcykgLyB2ZWMyKHRpbGVzKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4dHVyZTJEKHRleCwgdXYpOwp9Cgo";
kha_Shaders.multiplyColor_fragData0 = "s347:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzQgY29sb3JNdWw7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3JNdWw7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.multiplyColor_fragData1 = "s370:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzQgY29sb3JNdWw7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBGcmFnQ29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkKSAqIGNvbG9yTXVsOwogICAgRnJhZ0NvbG9yID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.multiplyColor_fragData2 = "s328:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSB2ZWM0IGNvbG9yTXVsOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yTXVsOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.outline_fragData0 = "s946:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgc3RlcFNpemU7CnVuaWZvcm0gaGlnaHAgdmVjMyBjb2xvcjsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgYmFzZSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIGZsb2F0IGFscGhhMSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgdmVjMigwLjAsIHN0ZXBTaXplLnkpKS53OwogICAgYWxwaGExIC09IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgdmVjMigwLjAsIC1zdGVwU2l6ZS55KSkudzsKICAgIGFscGhhMSA9IGFicyhhbHBoYTEpOwogICAgaGlnaHAgZmxvYXQgYWxwaGEyID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyB2ZWMyKHN0ZXBTaXplLngsIDAuMCkpLnc7CiAgICBhbHBoYTIgLT0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyB2ZWMyKC1zdGVwU2l6ZS54LCAwLjApKS53OwogICAgYWxwaGEyID0gYWJzKGFscGhhMik7CiAgICBoaWdocCBmbG9hdCBhbHBoYSA9IGNsYW1wKGFscGhhMSArIGFscGhhMiwgMC4wLCAxLjApOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KGJhc2UueHl6ICsgKGNvbG9yICogYWxwaGEpLCBiYXNlLncgKyBhbHBoYSk7Cn0KCg";
kha_Shaders.outline_fragData1 = "s958:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgc3RlcFNpemU7CnVuaWZvcm0gaGlnaHAgdmVjMyBjb2xvcjsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgYmFzZSA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCBmbG9hdCBhbHBoYTEgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQgKyB2ZWMyKDAuMCwgc3RlcFNpemUueSkpLnc7CiAgICBhbHBoYTEgLT0gdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgdmVjMigwLjAsIC1zdGVwU2l6ZS55KSkudzsKICAgIGFscGhhMSA9IGFicyhhbHBoYTEpOwogICAgaGlnaHAgZmxvYXQgYWxwaGEyID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkICsgdmVjMihzdGVwU2l6ZS54LCAwLjApKS53OwogICAgYWxwaGEyIC09IHRleHR1cmUodGV4LCB0ZXhDb29yZCArIHZlYzIoLXN0ZXBTaXplLngsIDAuMCkpLnc7CiAgICBhbHBoYTIgPSBhYnMoYWxwaGEyKTsKICAgIGhpZ2hwIGZsb2F0IGFscGhhID0gY2xhbXAoYWxwaGExICsgYWxwaGEyLCAwLjAsIDEuMCk7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGJhc2UueHl6ICsgKGNvbG9yICogYWxwaGEpLCBiYXNlLncgKyBhbHBoYSk7Cn0KCg";
kha_Shaders.outline_fragData2 = "s895:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSB2ZWMyIHN0ZXBTaXplOwp1bmlmb3JtIHZlYzMgY29sb3I7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IGJhc2UgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBmbG9hdCBhbHBoYTEgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIHZlYzIoMC4wLCBzdGVwU2l6ZS55KSkudzsKICAgIGFscGhhMSAtPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIHZlYzIoMC4wLCAtc3RlcFNpemUueSkpLnc7CiAgICBhbHBoYTEgPSBhYnMoYWxwaGExKTsKICAgIGZsb2F0IGFscGhhMiA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgdmVjMihzdGVwU2l6ZS54LCAwLjApKS53OwogICAgYWxwaGEyIC09IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkICsgdmVjMigtc3RlcFNpemUueCwgMC4wKSkudzsKICAgIGFscGhhMiA9IGFicyhhbHBoYTIpOwogICAgZmxvYXQgYWxwaGEgPSBjbGFtcChhbHBoYTEgKyBhbHBoYTIsIDAuMCwgMS4wKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChiYXNlLnh5eiArIChjb2xvciAqIGFscGhhKSwgYmFzZS53ICsgYWxwaGEpOwp9Cgo";
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_fragData2 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData2 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData2 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_text_vertData2 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.renderAreaTint_fragData0 = "s472:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNCh0ZXhjb2xvci54ICsgMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUsIHRleGNvbG9yLnksIHRleGNvbG9yLnosIHRleGNvbG9yLncgKyAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IGNvbDsKfQoK";
kha_Shaders.renderAreaTint_fragData1 = "s495:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWM0IGNvbCA9IHZlYzQodGV4Y29sb3IueCArIDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1LCB0ZXhjb2xvci55LCB0ZXhjb2xvci56LCB0ZXhjb2xvci53ICsgMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgRnJhZ0NvbG9yID0gY29sOwp9Cgo";
kha_Shaders.renderAreaTint_fragData2 = "s454:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICB2ZWM0IGNvbCA9IHZlYzQodGV4Y29sb3IueCArIDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1LCB0ZXhjb2xvci55LCB0ZXhjb2xvci56LCB0ZXhjb2xvci53ICsgMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBjb2w7Cn0KCg";
kha_Shaders.rgbSplit_fragData0 = "s920:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHRpbWU7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMyIHZhbHVlID0gdmVjMigwLjApOwogICAgaGlnaHAgdmVjNCBjMSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gdmFsdWUpOwogICAgaGlnaHAgdmVjNCBjMiA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgYzMgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNChjMS54LCBjMi55LCBjMy56LCAoYzEudyArIGMyLncpICsgYzMueik7CiAgICBoaWdocCBmbG9hdCBzY2FuTGluZXMgPSBjb3ModGltZSArICh0ZXhDb29yZC55ICogMzAwLjUpKTsKICAgIGhpZ2hwIGZsb2F0IHNhdHVyYXRpb24gPSBzY2FuTGluZXMgKiBzY2FuTGluZXM7CiAgICBoaWdocCB2ZWMzIF84MiA9IGNvbC54eXogKiB2ZWMzKDEuMCArICgwLjIwMDAwMDAwMjk4MDIzMjIzODc2OTUzMTI1ICogc2F0dXJhdGlvbikpOwogICAgY29sID0gdmVjNChfODIueCwgXzgyLnksIF84Mi56LCBjb2wudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IGNvbDsKfQoK";
kha_Shaders.rgbSplit_fragData1 = "s938:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHRpbWU7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgdmVjNCBGcmFnQ29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMyIHZhbHVlID0gdmVjMigwLjApOwogICAgaGlnaHAgdmVjNCBjMSA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCAtIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgYzIgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBjMyA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCArIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNChjMS54LCBjMi55LCBjMy56LCAoYzEudyArIGMyLncpICsgYzMueik7CiAgICBoaWdocCBmbG9hdCBzY2FuTGluZXMgPSBjb3ModGltZSArICh0ZXhDb29yZC55ICogMzAwLjUpKTsKICAgIGhpZ2hwIGZsb2F0IHNhdHVyYXRpb24gPSBzY2FuTGluZXMgKiBzY2FuTGluZXM7CiAgICBoaWdocCB2ZWMzIF84MiA9IGNvbC54eXogKiB2ZWMzKDEuMCArICgwLjIwMDAwMDAwMjk4MDIzMjIzODc2OTUzMTI1ICogc2F0dXJhdGlvbikpOwogICAgY29sID0gdmVjNChfODIueCwgXzgyLnksIF84Mi56LCBjb2wudyk7CiAgICBGcmFnQ29sb3IgPSBjb2w7Cn0KCg";
kha_Shaders.rgbSplit_fragData2 = "s846:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCB0aW1lOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgdmVjMiB2YWx1ZSA9IHZlYzIoMC4wKTsKICAgIHZlYzQgYzEgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCAtIHZhbHVlKTsKICAgIHZlYzQgYzIgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICB2ZWM0IGMzID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyB2YWx1ZSk7CiAgICB2ZWM0IGNvbCA9IHZlYzQoYzEueCwgYzIueSwgYzMueiwgKGMxLncgKyBjMi53KSArIGMzLnopOwogICAgZmxvYXQgc2NhbkxpbmVzID0gY29zKHRpbWUgKyAodGV4Q29vcmQueSAqIDMwMC41KSk7CiAgICBmbG9hdCBzYXR1cmF0aW9uID0gc2NhbkxpbmVzICogc2NhbkxpbmVzOwogICAgdmVjMyBfODIgPSBjb2wueHl6ICogdmVjMygxLjAgKyAoMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNSAqIHNhdHVyYXRpb24pKTsKICAgIGNvbCA9IHZlYzQoXzgyLngsIF84Mi55LCBfODIueiwgY29sLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBjb2w7Cn0KCg";
kha_Shaders.shInverseMask_fragData0 = "s691:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBoaWdocCB2ZWMzIF8zNiA9IHRleGNvbG9yLnh5eiAqICgxLjAgLSBtYXNrQ29sb3Iudyk7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzM2LngsIF8zNi55LCBfMzYueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQodGV4Y29sb3IueCwgdGV4Y29sb3IueSwgdGV4Y29sb3IueiwgKDEuMCAtIG1hc2tDb2xvci53KSAqIHRleGNvbG9yLncpOwp9Cgo";
kha_Shaders.shInverseMask_fragData1 = "s704:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZE1hc2s7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBtYXNrQ29sb3IgPSB0ZXh0dXJlKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBoaWdocCB2ZWMzIF8zNiA9IHRleGNvbG9yLnh5eiAqICgxLjAgLSBtYXNrQ29sb3Iudyk7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzM2LngsIF8zNi55LCBfMzYueiwgdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KHRleGNvbG9yLngsIHRleGNvbG9yLnksIHRleGNvbG9yLnosICgxLjAgLSBtYXNrQ29sb3IudykgKiB0ZXhjb2xvci53KTsKfQoK";
kha_Shaders.shInverseMask_fragData2 = "s659:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICB2ZWMzIF8zNiA9IHRleGNvbG9yLnh5eiAqICgxLjAgLSBtYXNrQ29sb3Iudyk7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzM2LngsIF8zNi55LCBfMzYueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQodGV4Y29sb3IueCwgdGV4Y29sb3IueSwgdGV4Y29sb3IueiwgKDEuMCAtIG1hc2tDb2xvci53KSAqIHRleGNvbG9yLncpOwp9Cgo";
kha_Shaders.shMask_fragData0 = "s670:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBoaWdocCB2ZWMzIF8zNCA9IHRleGNvbG9yLnh5eiAqIG1hc2tDb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zNC54LCBfMzQueSwgXzM0LnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KHRleGNvbG9yLngsIHRleGNvbG9yLnksIHRleGNvbG9yLnosIG1hc2tDb2xvci53ICogdGV4Y29sb3Iudyk7Cn0KCg";
kha_Shaders.shMask_fragData1 = "s683:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZE1hc2s7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBtYXNrQ29sb3IgPSB0ZXh0dXJlKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBoaWdocCB2ZWMzIF8zNCA9IHRleGNvbG9yLnh5eiAqIG1hc2tDb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zNC54LCBfMzQueSwgXzM0LnosIHRleGNvbG9yLncpOwogICAgRnJhZ0NvbG9yID0gdmVjNCh0ZXhjb2xvci54LCB0ZXhjb2xvci55LCB0ZXhjb2xvci56LCBtYXNrQ29sb3IudyAqIHRleGNvbG9yLncpOwp9Cgo";
kha_Shaders.shMask_fragData2 = "s638:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICB2ZWMzIF8zNCA9IHRleGNvbG9yLnh5eiAqIG1hc2tDb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zNC54LCBfMzQueSwgXzM0LnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KHRleGNvbG9yLngsIHRleGNvbG9yLnksIHRleGNvbG9yLnosIG1hc2tDb2xvci53ICogdGV4Y29sb3Iudyk7Cn0KCg";
kha_Shaders.shMask_vertData0 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBwb3MgPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICB2ZWMyIHZfdGV4Q29vcmRNYXNrID0gdGV4UG9zaXRpb247CiAgICB0ZXhDb29yZE1hc2sgPSB2X3RleENvb3JkTWFzazsKICAgIGdsX1Bvc2l0aW9uID0gcG9zOwp9Cgo";
kha_Shaders.shMask_vertData1 = "s454:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjMiB0ZXhDb29yZE1hc2s7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IHBvcyA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIHZlYzIgdl90ZXhDb29yZE1hc2sgPSB0ZXhQb3NpdGlvbjsKICAgIHRleENvb3JkTWFzayA9IHZfdGV4Q29vcmRNYXNrOwogICAgZ2xfUG9zaXRpb24gPSBwb3M7Cn0KCg";
kha_Shaders.shMask_vertData2 = "s554:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWMyIHRleENvb3JkTWFzazsKCnZvaWQgbWFpbigpCnsKICAgIG1lZGl1bXAgdmVjNCBwb3MgPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBtZWRpdW1wIHZlYzIgdl90ZXhDb29yZE1hc2sgPSB0ZXhQb3NpdGlvbjsKICAgIHRleENvb3JkTWFzayA9IHZfdGV4Q29vcmRNYXNrOwogICAgZ2xfUG9zaXRpb24gPSBwb3M7Cn0KCg";
kha_Shaders.shMaxBlend_fragData0 = "s476:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG1heCh0ZXhjb2xvciwgbWFza0NvbG9yKTsKfQoK";
kha_Shaders.shMaxBlend_fragData1 = "s490:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBtYXNrOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZE1hc2s7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBtYXNrQ29sb3IgPSB0ZXh0dXJlKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBGcmFnQ29sb3IgPSBtYXgodGV4Y29sb3IsIG1hc2tDb2xvcik7Cn0KCg";
kha_Shaders.shMaxBlend_fragData2 = "s452:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBtYXNrOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmRNYXNrOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgbWFza0NvbG9yID0gdGV4dHVyZTJEKG1hc2ssIHRleENvb3JkTWFzayk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG1heCh0ZXhjb2xvciwgbWFza0NvbG9yKTsKfQoK";
kha_Shaders.shMixGlow_fragData0 = "s483:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBiYXNlQ29sb3I7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYW1vdW50OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IyID0gdGV4dHVyZTJEKGJhc2VDb2xvciwgdGV4Q29vcmQpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSAodGV4Y29sb3IgKiAwLjUpICsgdGV4Y29sb3IyOwp9Cgo";
kha_Shaders.shMixGlow_fragData1 = "s503:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBiYXNlQ29sb3I7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYW1vdW50OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yMiA9IHRleHR1cmUoYmFzZUNvbG9yLCB0ZXhDb29yZCk7CiAgICBGcmFnQ29sb3IgPSAodGV4Y29sb3IgKiAwLjUpICsgdGV4Y29sb3IyOwp9Cgo";
kha_Shaders.shMixGlow_fragData2 = "s459:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBiYXNlQ29sb3I7CnVuaWZvcm0gZmxvYXQgYW1vdW50OwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgdGV4Y29sb3IyID0gdGV4dHVyZTJEKGJhc2VDb2xvciwgdGV4Q29vcmQpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSAodGV4Y29sb3IgKiAwLjUpICsgdGV4Y29sb3IyOwp9Cgo";
kha_Shaders.simpleAlpha_fragData0 = "s315:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMzIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkLnh5KSAqIHRleENvb3JkLno7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simpleAlpha_fragData1 = "s338:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMyB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZC54eSkgKiB0ZXhDb29yZC56OwogICAgRnJhZ0NvbG9yID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.simpleAlpha_fragData2 = "s304:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMyB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZC54eSkgKiB0ZXhDb29yZC56OwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.simpleAlpha_vertData0 = "s318:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzMgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMzIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simpleAlpha_vertData1 = "s298:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMzIHRleENvb3JkOwppbiB2ZWMzIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simpleAlpha_vertData2 = "s360:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzMgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgdGV4UG9zaXRpb247Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKfQoK";
kha_Shaders.simpleColorTransformation_fragData0 = "s583:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgX2NvbG9yTXVsOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgX2NvbG9yQWRkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIF9jb2xvck11bDsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogX2NvbG9yTXVsLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICB0ZXhjb2xvciArPSAoX2NvbG9yQWRkICogdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simpleColorTransformation_fragData1 = "s592:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBfY29sb3JNdWw7CmluIGhpZ2hwIHZlYzQgX2NvbG9yQWRkOwpvdXQgaGlnaHAgdmVjNCBGcmFnQ29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkKSAqIF9jb2xvck11bDsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogX2NvbG9yTXVsLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICB0ZXhjb2xvciArPSAoX2NvbG9yQWRkICogdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.simpleColorTransformation_fragData2 = "s548:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IF9jb2xvck11bDsKdmFyeWluZyB2ZWM0IF9jb2xvckFkZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkgKiBfY29sb3JNdWw7CiAgICB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIF9jb2xvck11bC53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgdGV4Y29sb3IgKz0gKF9jb2xvckFkZCAqIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.simpleColorTransformation_vertData0 = "s518:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgX2NvbG9yTXVsOwphdHRyaWJ1dGUgdmVjNCBjb2xvck11bDsKdmFyeWluZyB2ZWM0IF9jb2xvckFkZDsKYXR0cmlidXRlIHZlYzQgY29sb3JBZGQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIF9jb2xvck11bCA9IGNvbG9yTXVsOwogICAgX2NvbG9yQWRkID0gY29sb3JBZGQ7Cn0KCg";
kha_Shaders.simpleColorTransformation_vertData1 = "s468:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBfY29sb3JNdWw7CmluIHZlYzQgY29sb3JNdWw7Cm91dCB2ZWM0IF9jb2xvckFkZDsKaW4gdmVjNCBjb2xvckFkZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgX2NvbG9yTXVsID0gY29sb3JNdWw7CiAgICBfY29sb3JBZGQgPSBjb2xvckFkZDsKfQoK";
kha_Shaders.simpleColorTransformation_vertData2 = "s603:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IF9jb2xvck11bDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCBjb2xvck11bDsKdmFyeWluZyBtZWRpdW1wIHZlYzQgX2NvbG9yQWRkOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IGNvbG9yQWRkOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBfY29sb3JNdWwgPSBjb2xvck11bDsKICAgIF9jb2xvckFkZCA9IGNvbG9yQWRkOwp9Cgo";
kha_Shaders.simpleLight_fragData0 = "s535:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXgyOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBsaWdodCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4MiwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjMyBfMzAgPSB0ZXhjb2xvci54eXogKiBsaWdodC54eXo7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMwLngsIF8zMC55LCBfMzAueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simpleLight_fragData1 = "s555:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXgyOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBsaWdodCA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZSh0ZXgyLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF8zMCA9IHRleGNvbG9yLnh5eiAqIGxpZ2h0Lnh5ejsKICAgIHRleGNvbG9yID0gdmVjNChfMzAueCwgXzMwLnksIF8zMC56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simpleLight_fragData2 = "s511:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXgyOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBsaWdodCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4MiwgdGV4Q29vcmQpOwogICAgdmVjMyBfMzAgPSB0ZXhjb2xvci54eXogKiBsaWdodC54eXo7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMwLngsIF8zMC55LCBfMzAueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simpleRgbSplit_fragData0 = "s600:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgdmFsdWUgPSByZXNvbHV0aW9uOwogICAgaGlnaHAgdmVjNCBjMSA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkIC0gdmFsdWUpOwogICAgaGlnaHAgdmVjNCBjMiA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzQgYzMgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCArIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNChjMS54LCBjMi55LCBjMy56LCAoYzEudyArIGMyLncpICsgYzMueik7CiAgICBnbF9GcmFnRGF0YVswXSA9IGNvbDsKfQoK";
kha_Shaders.simpleRgbSplit_fragData1 = "s618:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cm91dCBoaWdocCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgdmFsdWUgPSByZXNvbHV0aW9uOwogICAgaGlnaHAgdmVjNCBjMSA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCAtIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgYzIgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjNCBjMyA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCArIHZhbHVlKTsKICAgIGhpZ2hwIHZlYzQgY29sID0gdmVjNChjMS54LCBjMi55LCBjMy56LCAoYzEudyArIGMyLncpICsgYzMueik7CiAgICBGcmFnQ29sb3IgPSBjb2w7Cn0KCg";
kha_Shaders.simpleRgbSplit_fragData2 = "s550:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHZhbHVlID0gcmVzb2x1dGlvbjsKICAgIHZlYzQgYzEgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCAtIHZhbHVlKTsKICAgIHZlYzQgYzIgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICB2ZWM0IGMzID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQgKyB2YWx1ZSk7CiAgICB2ZWM0IGNvbCA9IHZlYzQoYzEueCwgYzIueSwgYzMueiwgKGMxLncgKyBjMi53KSArIGMzLnopOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBjb2w7Cn0KCg";
kha_Shaders.simpleTime_vertData0 = "s318:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simpleTime_vertData1 = "s298:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simpleTime_vertData2 = "s360:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKfQoK";
kha_Shaders.simple_fragData0 = "s294:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.simple_fragData1 = "s316:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.simple_fragData2 = "s283:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.simple_vertData0 = "s318:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simple_vertData1 = "s298:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247Cn0KCg";
kha_Shaders.simple_vertData2 = "s360:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKfQoK";
kha_Shaders.vBlurVertexShader_vertData0 = "s1191:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdl90ZXhDb29yZDsKYXR0cmlidXRlIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDA7CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDE7CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDI7CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDM7CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDQ7CnZhcnlpbmcgdmVjMiB2X2JsdXJDb29yZDU7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdl90ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgdl9ibHVyQ29vcmQwID0gdGV4UG9zaXRpb24gKyB2ZWMyKC0wLjAwMDE4MDAwMDAwMjcyODc3NTE0MzYyMzM1MjA1MDc4MTI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQxID0gdGV4UG9zaXRpb24gKyB2ZWMyKC0wLjAwMDg5OTk5OTk4NDU0MDA0NTI2MTM4MzA1NjY0MDYyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkMiA9IHRleFBvc2l0aW9uICsgdmVjMigtMC4wMDM1MDAwMDAxMDgwMzM0MTg2NTUzOTU1MDc4MTI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQzID0gdGV4UG9zaXRpb24gKyB2ZWMyKDAuMDAzNTAwMDAwMTA4MDMzNDE4NjU1Mzk1NTA3ODEyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkNCA9IHRleFBvc2l0aW9uICsgdmVjMigwLjAwMDg5OTk5OTk4NDU0MDA0NTI2MTM4MzA1NjY0MDYyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkNSA9IHRleFBvc2l0aW9uICsgdmVjMigwLjAwMDE4MDAwMDAwMjcyODc3NTE0MzYyMzM1MjA1MDc4MTI1LCAwLjApOwp9Cgo";
kha_Shaders.vBlurVertexShader_vertData1 = "s1139:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHZfdGV4Q29vcmQ7CmluIHZlYzIgdGV4UG9zaXRpb247Cm91dCB2ZWMyIHZfYmx1ckNvb3JkMDsKb3V0IHZlYzIgdl9ibHVyQ29vcmQxOwpvdXQgdmVjMiB2X2JsdXJDb29yZDI7Cm91dCB2ZWMyIHZfYmx1ckNvb3JkMzsKb3V0IHZlYzIgdl9ibHVyQ29vcmQ0OwpvdXQgdmVjMiB2X2JsdXJDb29yZDU7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdl90ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgdl9ibHVyQ29vcmQwID0gdGV4UG9zaXRpb24gKyB2ZWMyKC0wLjAwMDE4MDAwMDAwMjcyODc3NTE0MzYyMzM1MjA1MDc4MTI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQxID0gdGV4UG9zaXRpb24gKyB2ZWMyKC0wLjAwMDg5OTk5OTk4NDU0MDA0NTI2MTM4MzA1NjY0MDYyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkMiA9IHRleFBvc2l0aW9uICsgdmVjMigtMC4wMDM1MDAwMDAxMDgwMzM0MTg2NTUzOTU1MDc4MTI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQzID0gdGV4UG9zaXRpb24gKyB2ZWMyKDAuMDAzNTAwMDAwMTA4MDMzNDE4NjU1Mzk1NTA3ODEyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkNCA9IHRleFBvc2l0aW9uICsgdmVjMigwLjAwMDg5OTk5OTk4NDU0MDA0NTI2MTM4MzA1NjY0MDYyNSwgMC4wKTsKICAgIHZfYmx1ckNvb3JkNSA9IHRleFBvc2l0aW9uICsgdmVjMigwLjAwMDE4MDAwMDAwMjcyODc3NTE0MzYyMzM1MjA1MDc4MTI1LCAwLjApOwp9Cgo";
kha_Shaders.vBlurVertexShader_vertData2 = "s1298:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl90ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiB0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl9ibHVyQ29vcmQwOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB2X2JsdXJDb29yZDE7CnZhcnlpbmcgbWVkaXVtcCB2ZWMyIHZfYmx1ckNvb3JkMjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdl9ibHVyQ29vcmQzOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB2X2JsdXJDb29yZDQ7CnZhcnlpbmcgbWVkaXVtcCB2ZWMyIHZfYmx1ckNvb3JkNTsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB2X3RleENvb3JkID0gdGV4UG9zaXRpb247CiAgICB2X2JsdXJDb29yZDAgPSB0ZXhQb3NpdGlvbiArIHZlYzIoLTAuMDAwMTgwMDAwMDAyNzI4Nzc1MTQzNjIzMzUyMDUwNzgxMjUsIDAuMCk7CiAgICB2X2JsdXJDb29yZDEgPSB0ZXhQb3NpdGlvbiArIHZlYzIoLTAuMDAwODk5OTk5OTg0NTQwMDQ1MjYxMzgzMDU2NjQwNjI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQyID0gdGV4UG9zaXRpb24gKyB2ZWMyKC0wLjAwMzUwMDAwMDEwODAzMzQxODY1NTM5NTUwNzgxMjUsIDAuMCk7CiAgICB2X2JsdXJDb29yZDMgPSB0ZXhQb3NpdGlvbiArIHZlYzIoMC4wMDM1MDAwMDAxMDgwMzM0MTg2NTUzOTU1MDc4MTI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQ0ID0gdGV4UG9zaXRpb24gKyB2ZWMyKDAuMDAwODk5OTk5OTg0NTQwMDQ1MjYxMzgzMDU2NjQwNjI1LCAwLjApOwogICAgdl9ibHVyQ29vcmQ1ID0gdGV4UG9zaXRpb24gKyB2ZWMyKDAuMDAwMTgwMDAwMDAyNzI4Nzc1MTQzNjIzMzUyMDUwNzgxMjUsIDAuMCk7Cn0KCg";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_Window.windows = [];
kha_audio2_Audio.disableGcInteractions = false;
kha_audio2_Audio.intBox = new kha_internal_IntBox(0);
kha_audio2_Audio.virtualChannels = [];
kha_audio2_Audio1.lastAllocationCount = 0;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) _g.push(_g1++);
	}
	$r = _g;
	return $r;
}(this));
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Keyboard.keyBehavior = kha_input_BlockInterventions.Default;
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Mouse.wheelEventBlockBehavior = kha_input_MouseEventBlockBehavior.Full;
kha_input_Surface.touchDownEventBlockBehavior = kha_input_TouchDownEventBlockBehavior.Full;
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_Sound.loading = [];
kha_netsync_ControllerBuilder.nextId = 0;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
